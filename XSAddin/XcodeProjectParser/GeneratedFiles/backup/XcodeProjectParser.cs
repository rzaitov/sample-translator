//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\maryannexe\documents\visual studio 2013\Projects\AntlrTest\AntlrTest\XcodeProject.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace XcodeProjectParser {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using System.Collections.Generic;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class XcodeProjectParser : Parser {
	public const int
		T__90=1, T__89=2, T__88=3, T__87=4, T__86=5, T__85=6, T__84=7, T__83=8, 
		T__82=9, T__81=10, T__80=11, T__79=12, T__78=13, T__77=14, T__76=15, T__75=16, 
		T__74=17, T__73=18, T__72=19, T__71=20, T__70=21, T__69=22, T__68=23, 
		T__67=24, T__66=25, T__65=26, T__64=27, T__63=28, T__62=29, T__61=30, 
		T__60=31, T__59=32, T__58=33, T__57=34, T__56=35, T__55=36, T__54=37, 
		T__53=38, T__52=39, T__51=40, T__50=41, T__49=42, T__48=43, T__47=44, 
		T__46=45, T__45=46, T__44=47, T__43=48, T__42=49, T__41=50, T__40=51, 
		T__39=52, T__38=53, T__37=54, T__36=55, T__35=56, T__34=57, T__33=58, 
		T__32=59, T__31=60, T__30=61, T__29=62, T__28=63, T__27=64, T__26=65, 
		T__25=66, T__24=67, T__23=68, T__22=69, T__21=70, T__20=71, T__19=72, 
		T__18=73, T__17=74, T__16=75, T__15=76, T__14=77, T__13=78, T__12=79, 
		T__11=80, T__10=81, T__9=82, T__8=83, T__7=84, T__6=85, T__5=86, T__4=87, 
		T__3=88, T__2=89, T__1=90, T__0=91, YES=92, NO=93, IDENTIFIER=94, STRING=95, 
		NUMBER=96, WS=97, COMMENT=98;
	public static readonly string[] tokenNames = {
		"<INVALID>", "'projectDirPath'", "'GCC_WARN_SHADOW'", "'productType'", 
		"'inputPaths'", "'name'", "'hasScannedForEncodings'", "'outputPaths'", 
		"'productReference'", "'path'", "'GCC_WARN_UNUSED_FUNCTION'", "'RUN_CLANG_STATIC_ANALYZER'", 
		"'compatibilityVersion'", "'mainGroup'", "'PBXVariantGroup'", "'CLANG_ENABLE_OBJC_ARC'", 
		"'dstSubfolderSpec'", "'knownRegions'", "'targets'", "'}'", "'settings'", 
		"'classes'", "'dependencies'", "'target'", "'objects'", "'defaultConfigurationIsVisible'", 
		"'productInstallPath'", "'PBXHeadersBuildPhase'", "'files'", "')'", "'buildSettings'", 
		"'buildPhases'", "'isa'", "'lastKnownFileType'", "'PBXContainerItemProxy'", 
		"'='", "'PBXBuildFile'", "'GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED'", 
		"'GCC_WARN_SIGN_COMPARE'", "'PBXNativeTarget'", "'sourceTree'", "'GCC_WARN_ABOUT_MISSING_FIELD_INITIALIZERS'", 
		"'runOnlyForDeploymentPostprocessing'", "'PBXSourcesBuildPhase'", "'PBXAggregateTarget'", 
		"'PBXFrameworksBuildPhase'", "'productname'", "'PBXShellScriptBuildPhase'", 
		"','", "'PBXTargetDependency'", "'XCConfigurationList'", "'explicitFileType'", 
		"'projectReferences'", "'('", "'productRefGroup'", "'PBXReourcesBuildPhase'", 
		"'GCC_WARN_ABOUT_RETURN_TYPE'", "'buildConfigurations'", "'rootObject'", 
		"'children'", "'IPHONEOS_DEPLOYMENT_TARGET'", "'containerPortal'", "'{'", 
		"'XCBuildConfiguration'", "'GCC_WARN_UNUSED_VARIABLE'", "'dstPath'", "'PROVISIONING_PROFILE'", 
		"'PBXCopyFilesBuildPhase'", "'objectVersion'", "'attributes'", "'archiveVersion'", 
		"'baseConfigurationReference'", "'GCC_WARN_UNDECLARED_SELECTOR'", "'PBXFileReference'", 
		"'defaultConfigurationname'", "'targetProxy'", "'PBXGroup'", "'buildActionMask'", 
		"'developmentRegion'", "'shellPath'", "'CODE_SIGN_IDENTITY'", "';'", "'remoteGlobalIDString'", 
		"'shellScript'", "'proxyType'", "'buildConfigurationList'", "'fileEncoding'", 
		"'remoteInfo'", "'PBXProject'", "'projectRoot'", "'fileRef'", "'GCC_WARN_UNUSED_LABEL'", 
		"'YES'", "'NO'", "IDENTIFIER", "STRING", "NUMBER", "WS", "COMMENT"
	};
	public const int
		RULE_project = 0, RULE_object = 1, RULE_assignment = 2, RULE_array = 3, 
		RULE_array_item = 4, RULE_left_side = 5, RULE_right_side = 6, RULE_value = 7, 
		RULE_archive_version = 8, RULE_classes = 9, RULE_object_version = 10, 
		RULE_objects = 11, RULE_root_object = 12, RULE_isa = 13, RULE_build_configuration_list = 14, 
		RULE_dependencies = 15, RULE_build_phases = 16, RULE_name = 17, RULE_product_name = 18, 
		RULE_source_tree = 19, RULE_children = 20, RULE_build_action_mask = 21, 
		RULE_dst_path = 22, RULE_dst_subfolder_spec = 23, RULE_files = 24, RULE_run_only_for_deployment_postprocessing = 25, 
		RULE_pbx_aggregate_target = 26, RULE_pbx_build_file = 27, RULE_settings = 28, 
		RULE_file_ref = 29, RULE_pbx_container_item_proxy = 30, RULE_container_portal = 31, 
		RULE_proxy_type = 32, RULE_remote_global_id_string = 33, RULE_remote_info = 34, 
		RULE_pbx_copy_files_build_phase = 35, RULE_pbx_file_reference = 36, RULE_file_encoding = 37, 
		RULE_explicit_file_type = 38, RULE_last_known_file_type = 39, RULE_path = 40, 
		RULE_pbx_frameworks_build_phase = 41, RULE_pbx_group = 42, RULE_pbx_headers_build_phase = 43, 
		RULE_pbx_native_target = 44, RULE_product_install_path = 45, RULE_product_reference = 46, 
		RULE_product_type = 47, RULE_pbx_project = 48, RULE_compatibility_version = 49, 
		RULE_development_region = 50, RULE_has_scanned_for_encodings = 51, RULE_known_regions = 52, 
		RULE_main_group = 53, RULE_product_ref_group = 54, RULE_project_dir_path = 55, 
		RULE_project_references = 56, RULE_project_roots = 57, RULE_targetS = 58, 
		RULE_pbx_resources_build_phase = 59, RULE_pbx_shell_script_build_phase = 60, 
		RULE_input_paths = 61, RULE_output_paths = 62, RULE_shell_path = 63, RULE_shell_script = 64, 
		RULE_pbx_sources_build_phase = 65, RULE_pbx_target_dependency = 66, RULE_target = 67, 
		RULE_target_PROXY = 68, RULE_pbx_variant_group = 69, RULE_xc_build_configuration = 70, 
		RULE_base_configuration_reference = 71, RULE_build_settings = 72, RULE_attributes = 73, 
		RULE_clang_enable_objc_arc = 74, RULE_code_sign_identity = 75, RULE_gcc_warn_about_missing_field_initializers = 76, 
		RULE_gcc_warn_about_return_type = 77, RULE_gcc_warn_about_initializer_not_fully_bracketed = 78, 
		RULE_gcc_warn_shadow = 79, RULE_gcc_warn_sign_compare = 80, RULE_gcc_warn_undeclared_selector = 81, 
		RULE_gcc_warn_unused_function = 82, RULE_gcc_warn_unused_label = 83, RULE_gcc_warn_unused_variable = 84, 
		RULE_iphoneos_deployment_target = 85, RULE_provisioning_profile = 86, 
		RULE_run_clang_static_analyzer = 87, RULE_xc_configuration_list = 88, 
		RULE_build_configurations = 89, RULE_default_configuration_is_visible = 90, 
		RULE_default_configuration_name = 91;
	public static readonly string[] ruleNames = {
		"project", "object", "assignment", "array", "array_item", "left_side", 
		"right_side", "value", "archive_version", "classes", "object_version", 
		"objects", "root_object", "isa", "build_configuration_list", "dependencies", 
		"build_phases", "name", "product_name", "source_tree", "children", "build_action_mask", 
		"dst_path", "dst_subfolder_spec", "files", "run_only_for_deployment_postprocessing", 
		"pbx_aggregate_target", "pbx_build_file", "settings", "file_ref", "pbx_container_item_proxy", 
		"container_portal", "proxy_type", "remote_global_id_string", "remote_info", 
		"pbx_copy_files_build_phase", "pbx_file_reference", "file_encoding", "explicit_file_type", 
		"last_known_file_type", "path", "pbx_frameworks_build_phase", "pbx_group", 
		"pbx_headers_build_phase", "pbx_native_target", "product_install_path", 
		"product_reference", "product_type", "pbx_project", "compatibility_version", 
		"development_region", "has_scanned_for_encodings", "known_regions", "main_group", 
		"product_ref_group", "project_dir_path", "project_references", "project_roots", 
		"targetS", "pbx_resources_build_phase", "pbx_shell_script_build_phase", 
		"input_paths", "output_paths", "shell_path", "shell_script", "pbx_sources_build_phase", 
		"pbx_target_dependency", "target", "target_PROXY", "pbx_variant_group", 
		"xc_build_configuration", "base_configuration_reference", "build_settings", 
		"attributes", "clang_enable_objc_arc", "code_sign_identity", "gcc_warn_about_missing_field_initializers", 
		"gcc_warn_about_return_type", "gcc_warn_about_initializer_not_fully_bracketed", 
		"gcc_warn_shadow", "gcc_warn_sign_compare", "gcc_warn_undeclared_selector", 
		"gcc_warn_unused_function", "gcc_warn_unused_label", "gcc_warn_unused_variable", 
		"iphoneos_deployment_target", "provisioning_profile", "run_clang_static_analyzer", 
		"xc_configuration_list", "build_configurations", "default_configuration_is_visible", 
		"default_configuration_name"
	};

	public override string GrammarFileName { get { return "XcodeProject.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public XcodeProjectParser(ITokenStream input)
		: base(input)
	{
		_interp = new ParserATNSimulator(this,_ATN);
	}
	public partial class ProjectContext : ParserRuleContext {
		public ObjectContext @object() {
			return GetRuleContext<ObjectContext>(0);
		}
		public ProjectContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_project; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterProject(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitProject(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitProject(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public ProjectContext project() {
		ProjectContext _localctx = new ProjectContext(_ctx, State);
		EnterRule(_localctx, 0, RULE_project);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 184; @object();
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ObjectContext : ParserRuleContext {
		public AssignmentContext assignment(int i) {
			return GetRuleContext<AssignmentContext>(i);
		}
		public IReadOnlyList<AssignmentContext> assignment() {
			return GetRuleContexts<AssignmentContext>();
		}
		public ObjectContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_object; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterObject(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitObject(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitObject(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public ObjectContext @object() {
		ObjectContext _localctx = new ObjectContext(_ctx, State);
		EnterRule(_localctx, 2, RULE_object);
		int _la;
		try {
			State = 198;
			switch ( Interpreter.AdaptivePredict(_input,1,_ctx) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 186; Match(T__29);
				State = 187; assignment();
				State = 191;
				_errHandler.Sync(this);
				_la = _input.La(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__90) | (1L << T__89) | (1L << T__88) | (1L << T__87) | (1L << T__86) | (1L << T__85) | (1L << T__84) | (1L << T__83) | (1L << T__82) | (1L << T__81) | (1L << T__80) | (1L << T__79) | (1L << T__78) | (1L << T__76) | (1L << T__75) | (1L << T__74) | (1L << T__73) | (1L << T__71) | (1L << T__70) | (1L << T__69) | (1L << T__68) | (1L << T__67) | (1L << T__66) | (1L << T__65) | (1L << T__63) | (1L << T__61) | (1L << T__60) | (1L << T__59) | (1L << T__58) | (1L << T__54) | (1L << T__53) | (1L << T__51) | (1L << T__50) | (1L << T__49) | (1L << T__45) | (1L << T__40) | (1L << T__39) | (1L << T__37) | (1L << T__35) | (1L << T__34) | (1L << T__33) | (1L << T__32) | (1L << T__31) | (1L << T__30))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (T__27 - 64)) | (1L << (T__26 - 64)) | (1L << (T__25 - 64)) | (1L << (T__23 - 64)) | (1L << (T__22 - 64)) | (1L << (T__21 - 64)) | (1L << (T__20 - 64)) | (1L << (T__19 - 64)) | (1L << (T__17 - 64)) | (1L << (T__16 - 64)) | (1L << (T__14 - 64)) | (1L << (T__13 - 64)) | (1L << (T__12 - 64)) | (1L << (T__11 - 64)) | (1L << (T__9 - 64)) | (1L << (T__8 - 64)) | (1L << (T__7 - 64)) | (1L << (T__6 - 64)) | (1L << (T__5 - 64)) | (1L << (T__4 - 64)) | (1L << (T__2 - 64)) | (1L << (T__1 - 64)) | (1L << (T__0 - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (STRING - 64)))) != 0)) {
					{
					{
					State = 188; assignment();
					}
					}
					State = 193;
					_errHandler.Sync(this);
					_la = _input.La(1);
				}
				State = 194; Match(T__72);
				}
				break;

			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 196; Match(T__29);
				State = 197; Match(T__72);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AssignmentContext : ParserRuleContext {
		public Left_sideContext left_side() {
			return GetRuleContext<Left_sideContext>(0);
		}
		public Right_sideContext right_side() {
			return GetRuleContext<Right_sideContext>(0);
		}
		public AssignmentContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_assignment; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterAssignment(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitAssignment(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitAssignment(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public AssignmentContext assignment() {
		AssignmentContext _localctx = new AssignmentContext(_ctx, State);
		EnterRule(_localctx, 4, RULE_assignment);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 200; left_side();
			State = 201; Match(T__56);
			State = 202; right_side();
			State = 203; Match(T__10);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ArrayContext : ParserRuleContext {
		public IReadOnlyList<Array_itemContext> array_item() {
			return GetRuleContexts<Array_itemContext>();
		}
		public Array_itemContext array_item(int i) {
			return GetRuleContext<Array_itemContext>(i);
		}
		public ArrayContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_array; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterArray(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitArray(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitArray(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public ArrayContext array() {
		ArrayContext _localctx = new ArrayContext(_ctx, State);
		EnterRule(_localctx, 6, RULE_array);
		int _la;
		try {
			State = 217;
			switch ( Interpreter.AdaptivePredict(_input,3,_ctx) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 205; Match(T__38);
				State = 206; array_item();
				State = 210;
				_errHandler.Sync(this);
				_la = _input.La(1);
				while ((((_la) & ~0x3f) == 0 && ((1L << _la) & ((1L << T__90) | (1L << T__89) | (1L << T__88) | (1L << T__87) | (1L << T__86) | (1L << T__85) | (1L << T__84) | (1L << T__83) | (1L << T__82) | (1L << T__81) | (1L << T__80) | (1L << T__79) | (1L << T__78) | (1L << T__77) | (1L << T__76) | (1L << T__75) | (1L << T__74) | (1L << T__73) | (1L << T__71) | (1L << T__70) | (1L << T__69) | (1L << T__68) | (1L << T__67) | (1L << T__66) | (1L << T__65) | (1L << T__64) | (1L << T__63) | (1L << T__61) | (1L << T__60) | (1L << T__59) | (1L << T__58) | (1L << T__57) | (1L << T__55) | (1L << T__54) | (1L << T__53) | (1L << T__52) | (1L << T__51) | (1L << T__50) | (1L << T__49) | (1L << T__48) | (1L << T__47) | (1L << T__46) | (1L << T__45) | (1L << T__44) | (1L << T__42) | (1L << T__41) | (1L << T__40) | (1L << T__39) | (1L << T__38) | (1L << T__37) | (1L << T__36) | (1L << T__35) | (1L << T__34) | (1L << T__33) | (1L << T__32) | (1L << T__31) | (1L << T__30) | (1L << T__29) | (1L << T__28))) != 0) || ((((_la - 64)) & ~0x3f) == 0 && ((1L << (_la - 64)) & ((1L << (T__27 - 64)) | (1L << (T__26 - 64)) | (1L << (T__25 - 64)) | (1L << (T__24 - 64)) | (1L << (T__23 - 64)) | (1L << (T__22 - 64)) | (1L << (T__21 - 64)) | (1L << (T__20 - 64)) | (1L << (T__19 - 64)) | (1L << (T__18 - 64)) | (1L << (T__17 - 64)) | (1L << (T__16 - 64)) | (1L << (T__15 - 64)) | (1L << (T__14 - 64)) | (1L << (T__13 - 64)) | (1L << (T__12 - 64)) | (1L << (T__11 - 64)) | (1L << (T__9 - 64)) | (1L << (T__8 - 64)) | (1L << (T__7 - 64)) | (1L << (T__6 - 64)) | (1L << (T__5 - 64)) | (1L << (T__4 - 64)) | (1L << (T__3 - 64)) | (1L << (T__2 - 64)) | (1L << (T__1 - 64)) | (1L << (T__0 - 64)) | (1L << (YES - 64)) | (1L << (NO - 64)) | (1L << (IDENTIFIER - 64)) | (1L << (STRING - 64)) | (1L << (NUMBER - 64)))) != 0)) {
					{
					{
					State = 207; array_item();
					}
					}
					State = 212;
					_errHandler.Sync(this);
					_la = _input.La(1);
				}
				State = 213; Match(T__62);
				}
				break;

			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 215; Match(T__38);
				State = 216; Match(T__62);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Array_itemContext : ParserRuleContext {
		public Right_sideContext right_side() {
			return GetRuleContext<Right_sideContext>(0);
		}
		public Array_itemContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_array_item; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterArray_item(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitArray_item(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitArray_item(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Array_itemContext array_item() {
		Array_itemContext _localctx = new Array_itemContext(_ctx, State);
		EnterRule(_localctx, 8, RULE_array_item);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 219; right_side();
			State = 220; Match(T__43);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Left_sideContext : ParserRuleContext {
		public Remote_infoContext remote_info() {
			return GetRuleContext<Remote_infoContext>(0);
		}
		public Development_regionContext development_region() {
			return GetRuleContext<Development_regionContext>(0);
		}
		public Shell_scriptContext shell_script() {
			return GetRuleContext<Shell_scriptContext>(0);
		}
		public Remote_global_id_stringContext remote_global_id_string() {
			return GetRuleContext<Remote_global_id_stringContext>(0);
		}
		public Gcc_warn_unused_functionContext gcc_warn_unused_function() {
			return GetRuleContext<Gcc_warn_unused_functionContext>(0);
		}
		public Gcc_warn_about_missing_field_initializersContext gcc_warn_about_missing_field_initializers() {
			return GetRuleContext<Gcc_warn_about_missing_field_initializersContext>(0);
		}
		public Run_clang_static_analyzerContext run_clang_static_analyzer() {
			return GetRuleContext<Run_clang_static_analyzerContext>(0);
		}
		public ClassesContext classes() {
			return GetRuleContext<ClassesContext>(0);
		}
		public File_encodingContext file_encoding() {
			return GetRuleContext<File_encodingContext>(0);
		}
		public Iphoneos_deployment_targetContext iphoneos_deployment_target() {
			return GetRuleContext<Iphoneos_deployment_targetContext>(0);
		}
		public ITerminalNode IDENTIFIER() { return GetToken(XcodeProjectParser.IDENTIFIER, 0); }
		public Gcc_warn_unused_variableContext gcc_warn_unused_variable() {
			return GetRuleContext<Gcc_warn_unused_variableContext>(0);
		}
		public Gcc_warn_sign_compareContext gcc_warn_sign_compare() {
			return GetRuleContext<Gcc_warn_sign_compareContext>(0);
		}
		public Gcc_warn_shadowContext gcc_warn_shadow() {
			return GetRuleContext<Gcc_warn_shadowContext>(0);
		}
		public Gcc_warn_about_initializer_not_fully_bracketedContext gcc_warn_about_initializer_not_fully_bracketed() {
			return GetRuleContext<Gcc_warn_about_initializer_not_fully_bracketedContext>(0);
		}
		public Dst_pathContext dst_path() {
			return GetRuleContext<Dst_pathContext>(0);
		}
		public Source_treeContext source_tree() {
			return GetRuleContext<Source_treeContext>(0);
		}
		public TargetSContext targetS() {
			return GetRuleContext<TargetSContext>(0);
		}
		public DependenciesContext dependencies() {
			return GetRuleContext<DependenciesContext>(0);
		}
		public Proxy_typeContext proxy_type() {
			return GetRuleContext<Proxy_typeContext>(0);
		}
		public Code_sign_identityContext code_sign_identity() {
			return GetRuleContext<Code_sign_identityContext>(0);
		}
		public Output_pathsContext output_paths() {
			return GetRuleContext<Output_pathsContext>(0);
		}
		public Project_referencesContext project_references() {
			return GetRuleContext<Project_referencesContext>(0);
		}
		public Product_typeContext product_type() {
			return GetRuleContext<Product_typeContext>(0);
		}
		public Object_versionContext object_version() {
			return GetRuleContext<Object_versionContext>(0);
		}
		public NameContext name() {
			return GetRuleContext<NameContext>(0);
		}
		public File_refContext file_ref() {
			return GetRuleContext<File_refContext>(0);
		}
		public Project_rootsContext project_roots() {
			return GetRuleContext<Project_rootsContext>(0);
		}
		public Product_referenceContext product_reference() {
			return GetRuleContext<Product_referenceContext>(0);
		}
		public Gcc_warn_undeclared_selectorContext gcc_warn_undeclared_selector() {
			return GetRuleContext<Gcc_warn_undeclared_selectorContext>(0);
		}
		public Build_configurationsContext build_configurations() {
			return GetRuleContext<Build_configurationsContext>(0);
		}
		public Product_nameContext product_name() {
			return GetRuleContext<Product_nameContext>(0);
		}
		public Build_phasesContext build_phases() {
			return GetRuleContext<Build_phasesContext>(0);
		}
		public Default_configuration_nameContext default_configuration_name() {
			return GetRuleContext<Default_configuration_nameContext>(0);
		}
		public Explicit_file_typeContext explicit_file_type() {
			return GetRuleContext<Explicit_file_typeContext>(0);
		}
		public AttributesContext attributes() {
			return GetRuleContext<AttributesContext>(0);
		}
		public FilesContext files() {
			return GetRuleContext<FilesContext>(0);
		}
		public Run_only_for_deployment_postprocessingContext run_only_for_deployment_postprocessing() {
			return GetRuleContext<Run_only_for_deployment_postprocessingContext>(0);
		}
		public Main_groupContext main_group() {
			return GetRuleContext<Main_groupContext>(0);
		}
		public Known_regionsContext known_regions() {
			return GetRuleContext<Known_regionsContext>(0);
		}
		public Root_objectContext root_object() {
			return GetRuleContext<Root_objectContext>(0);
		}
		public Default_configuration_is_visibleContext default_configuration_is_visible() {
			return GetRuleContext<Default_configuration_is_visibleContext>(0);
		}
		public Build_action_maskContext build_action_mask() {
			return GetRuleContext<Build_action_maskContext>(0);
		}
		public Project_dir_pathContext project_dir_path() {
			return GetRuleContext<Project_dir_pathContext>(0);
		}
		public Dst_subfolder_specContext dst_subfolder_spec() {
			return GetRuleContext<Dst_subfolder_specContext>(0);
		}
		public Compatibility_versionContext compatibility_version() {
			return GetRuleContext<Compatibility_versionContext>(0);
		}
		public Input_pathsContext input_paths() {
			return GetRuleContext<Input_pathsContext>(0);
		}
		public SettingsContext settings() {
			return GetRuleContext<SettingsContext>(0);
		}
		public Shell_pathContext shell_path() {
			return GetRuleContext<Shell_pathContext>(0);
		}
		public Target_PROXYContext target_PROXY() {
			return GetRuleContext<Target_PROXYContext>(0);
		}
		public Product_install_pathContext product_install_path() {
			return GetRuleContext<Product_install_pathContext>(0);
		}
		public TargetContext target() {
			return GetRuleContext<TargetContext>(0);
		}
		public Product_ref_groupContext product_ref_group() {
			return GetRuleContext<Product_ref_groupContext>(0);
		}
		public Build_settingsContext build_settings() {
			return GetRuleContext<Build_settingsContext>(0);
		}
		public Clang_enable_objc_arcContext clang_enable_objc_arc() {
			return GetRuleContext<Clang_enable_objc_arcContext>(0);
		}
		public Has_scanned_for_encodingsContext has_scanned_for_encodings() {
			return GetRuleContext<Has_scanned_for_encodingsContext>(0);
		}
		public Gcc_warn_unused_labelContext gcc_warn_unused_label() {
			return GetRuleContext<Gcc_warn_unused_labelContext>(0);
		}
		public Archive_versionContext archive_version() {
			return GetRuleContext<Archive_versionContext>(0);
		}
		public Last_known_file_typeContext last_known_file_type() {
			return GetRuleContext<Last_known_file_typeContext>(0);
		}
		public ChildrenContext children() {
			return GetRuleContext<ChildrenContext>(0);
		}
		public PathContext path() {
			return GetRuleContext<PathContext>(0);
		}
		public IsaContext isa() {
			return GetRuleContext<IsaContext>(0);
		}
		public ObjectsContext objects() {
			return GetRuleContext<ObjectsContext>(0);
		}
		public Build_configuration_listContext build_configuration_list() {
			return GetRuleContext<Build_configuration_listContext>(0);
		}
		public Provisioning_profileContext provisioning_profile() {
			return GetRuleContext<Provisioning_profileContext>(0);
		}
		public Gcc_warn_about_return_typeContext gcc_warn_about_return_type() {
			return GetRuleContext<Gcc_warn_about_return_typeContext>(0);
		}
		public ITerminalNode STRING() { return GetToken(XcodeProjectParser.STRING, 0); }
		public Base_configuration_referenceContext base_configuration_reference() {
			return GetRuleContext<Base_configuration_referenceContext>(0);
		}
		public Container_portalContext container_portal() {
			return GetRuleContext<Container_portalContext>(0);
		}
		public Left_sideContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_left_side; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterLeft_side(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitLeft_side(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitLeft_side(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Left_sideContext left_side() {
		Left_sideContext _localctx = new Left_sideContext(_ctx, State);
		EnterRule(_localctx, 10, RULE_left_side);
		try {
			State = 291;
			switch (_input.La(1)) {
			case T__21:
				EnterOuterAlt(_localctx, 1);
				{
				State = 222; archive_version();
				}
				break;
			case T__23:
				EnterOuterAlt(_localctx, 2);
				{
				State = 223; object_version();
				}
				break;
			case T__70:
				EnterOuterAlt(_localctx, 3);
				{
				State = 224; classes();
				}
				break;
			case T__67:
				EnterOuterAlt(_localctx, 4);
				{
				State = 225; objects();
				}
				break;
			case T__33:
				EnterOuterAlt(_localctx, 5);
				{
				State = 226; root_object();
				}
				break;
			case T__59:
				EnterOuterAlt(_localctx, 6);
				{
				State = 227; isa();
				}
				break;
			case T__6:
				EnterOuterAlt(_localctx, 7);
				{
				State = 228; build_configuration_list();
				}
				break;
			case T__60:
				EnterOuterAlt(_localctx, 8);
				{
				State = 229; build_phases();
				}
				break;
			case T__69:
				EnterOuterAlt(_localctx, 9);
				{
				State = 230; dependencies();
				}
				break;
			case T__86:
				EnterOuterAlt(_localctx, 10);
				{
				State = 231; name();
				}
				break;
			case T__71:
				EnterOuterAlt(_localctx, 11);
				{
				State = 232; settings();
				}
				break;
			case T__30:
				EnterOuterAlt(_localctx, 12);
				{
				State = 233; container_portal();
				}
				break;
			case T__7:
				EnterOuterAlt(_localctx, 13);
				{
				State = 234; proxy_type();
				}
				break;
			case T__9:
				EnterOuterAlt(_localctx, 14);
				{
				State = 235; remote_global_id_string();
				}
				break;
			case T__4:
				EnterOuterAlt(_localctx, 15);
				{
				State = 236; remote_info();
				}
				break;
			case T__14:
				EnterOuterAlt(_localctx, 16);
				{
				State = 237; build_action_mask();
				}
				break;
			case T__26:
				EnterOuterAlt(_localctx, 17);
				{
				State = 238; dst_path();
				}
				break;
			case T__75:
				EnterOuterAlt(_localctx, 18);
				{
				State = 239; dst_subfolder_spec();
				}
				break;
			case T__63:
				EnterOuterAlt(_localctx, 19);
				{
				State = 240; files();
				}
				break;
			case T__1:
				EnterOuterAlt(_localctx, 20);
				{
				State = 241; file_ref();
				}
				break;
			case T__49:
				EnterOuterAlt(_localctx, 21);
				{
				State = 242; run_only_for_deployment_postprocessing();
				}
				break;
			case T__5:
				EnterOuterAlt(_localctx, 22);
				{
				State = 243; file_encoding();
				}
				break;
			case T__40:
				EnterOuterAlt(_localctx, 23);
				{
				State = 244; explicit_file_type();
				}
				break;
			case T__58:
				EnterOuterAlt(_localctx, 24);
				{
				State = 245; last_known_file_type();
				}
				break;
			case T__82:
				EnterOuterAlt(_localctx, 25);
				{
				State = 246; path();
				}
				break;
			case T__51:
				EnterOuterAlt(_localctx, 26);
				{
				State = 247; source_tree();
				}
				break;
			case T__32:
				EnterOuterAlt(_localctx, 27);
				{
				State = 248; children();
				}
				break;
			case T__65:
				EnterOuterAlt(_localctx, 28);
				{
				State = 249; product_install_path();
				}
				break;
			case T__45:
				EnterOuterAlt(_localctx, 29);
				{
				State = 250; product_name();
				}
				break;
			case T__83:
				EnterOuterAlt(_localctx, 30);
				{
				State = 251; product_reference();
				}
				break;
			case T__88:
				EnterOuterAlt(_localctx, 31);
				{
				State = 252; product_type();
				}
				break;
			case T__79:
				EnterOuterAlt(_localctx, 32);
				{
				State = 253; compatibility_version();
				}
				break;
			case T__13:
				EnterOuterAlt(_localctx, 33);
				{
				State = 254; development_region();
				}
				break;
			case T__85:
				EnterOuterAlt(_localctx, 34);
				{
				State = 255; has_scanned_for_encodings();
				}
				break;
			case T__74:
				EnterOuterAlt(_localctx, 35);
				{
				State = 256; known_regions();
				}
				break;
			case T__78:
				EnterOuterAlt(_localctx, 36);
				{
				State = 257; main_group();
				}
				break;
			case T__37:
				EnterOuterAlt(_localctx, 37);
				{
				State = 258; product_ref_group();
				}
				break;
			case T__90:
				EnterOuterAlt(_localctx, 38);
				{
				State = 259; project_dir_path();
				}
				break;
			case T__39:
				EnterOuterAlt(_localctx, 39);
				{
				State = 260; project_references();
				}
				break;
			case T__2:
				EnterOuterAlt(_localctx, 40);
				{
				State = 261; project_roots();
				}
				break;
			case T__73:
				EnterOuterAlt(_localctx, 41);
				{
				State = 262; targetS();
				}
				break;
			case T__87:
				EnterOuterAlt(_localctx, 42);
				{
				State = 263; input_paths();
				}
				break;
			case T__84:
				EnterOuterAlt(_localctx, 43);
				{
				State = 264; output_paths();
				}
				break;
			case T__12:
				EnterOuterAlt(_localctx, 44);
				{
				State = 265; shell_path();
				}
				break;
			case T__8:
				EnterOuterAlt(_localctx, 45);
				{
				State = 266; shell_script();
				}
				break;
			case T__68:
				EnterOuterAlt(_localctx, 46);
				{
				State = 267; target();
				}
				break;
			case T__16:
				EnterOuterAlt(_localctx, 47);
				{
				State = 268; target_PROXY();
				}
				break;
			case T__20:
				EnterOuterAlt(_localctx, 48);
				{
				State = 269; base_configuration_reference();
				}
				break;
			case T__61:
				EnterOuterAlt(_localctx, 49);
				{
				State = 270; build_settings();
				}
				break;
			case T__34:
				EnterOuterAlt(_localctx, 50);
				{
				State = 271; build_configurations();
				}
				break;
			case T__66:
				EnterOuterAlt(_localctx, 51);
				{
				State = 272; default_configuration_is_visible();
				}
				break;
			case T__17:
				EnterOuterAlt(_localctx, 52);
				{
				State = 273; default_configuration_name();
				}
				break;
			case T__76:
				EnterOuterAlt(_localctx, 53);
				{
				State = 274; clang_enable_objc_arc();
				}
				break;
			case T__11:
				EnterOuterAlt(_localctx, 54);
				{
				State = 275; code_sign_identity();
				}
				break;
			case T__50:
				EnterOuterAlt(_localctx, 55);
				{
				State = 276; gcc_warn_about_missing_field_initializers();
				}
				break;
			case T__35:
				EnterOuterAlt(_localctx, 56);
				{
				State = 277; gcc_warn_about_return_type();
				}
				break;
			case T__54:
				EnterOuterAlt(_localctx, 57);
				{
				State = 278; gcc_warn_about_initializer_not_fully_bracketed();
				}
				break;
			case T__89:
				EnterOuterAlt(_localctx, 58);
				{
				State = 279; gcc_warn_shadow();
				}
				break;
			case T__53:
				EnterOuterAlt(_localctx, 59);
				{
				State = 280; gcc_warn_sign_compare();
				}
				break;
			case T__19:
				EnterOuterAlt(_localctx, 60);
				{
				State = 281; gcc_warn_undeclared_selector();
				}
				break;
			case T__81:
				EnterOuterAlt(_localctx, 61);
				{
				State = 282; gcc_warn_unused_function();
				}
				break;
			case T__0:
				EnterOuterAlt(_localctx, 62);
				{
				State = 283; gcc_warn_unused_label();
				}
				break;
			case T__27:
				EnterOuterAlt(_localctx, 63);
				{
				State = 284; gcc_warn_unused_variable();
				}
				break;
			case T__31:
				EnterOuterAlt(_localctx, 64);
				{
				State = 285; iphoneos_deployment_target();
				}
				break;
			case T__25:
				EnterOuterAlt(_localctx, 65);
				{
				State = 286; provisioning_profile();
				}
				break;
			case T__80:
				EnterOuterAlt(_localctx, 66);
				{
				State = 287; run_clang_static_analyzer();
				}
				break;
			case T__22:
				EnterOuterAlt(_localctx, 67);
				{
				State = 288; attributes();
				}
				break;
			case IDENTIFIER:
				EnterOuterAlt(_localctx, 68);
				{
				State = 289; Match(IDENTIFIER);
				}
				break;
			case STRING:
				EnterOuterAlt(_localctx, 69);
				{
				State = 290; Match(STRING);
				}
				break;
			default:
				throw new NoViableAltException(this);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Right_sideContext : ParserRuleContext {
		public Pbx_native_targetContext pbx_native_target() {
			return GetRuleContext<Pbx_native_targetContext>(0);
		}
		public Pbx_container_item_proxyContext pbx_container_item_proxy() {
			return GetRuleContext<Pbx_container_item_proxyContext>(0);
		}
		public Pbx_sources_build_phaseContext pbx_sources_build_phase() {
			return GetRuleContext<Pbx_sources_build_phaseContext>(0);
		}
		public Pbx_variant_groupContext pbx_variant_group() {
			return GetRuleContext<Pbx_variant_groupContext>(0);
		}
		public Xc_build_configurationContext xc_build_configuration() {
			return GetRuleContext<Xc_build_configurationContext>(0);
		}
		public Pbx_frameworks_build_phaseContext pbx_frameworks_build_phase() {
			return GetRuleContext<Pbx_frameworks_build_phaseContext>(0);
		}
		public Pbx_copy_files_build_phaseContext pbx_copy_files_build_phase() {
			return GetRuleContext<Pbx_copy_files_build_phaseContext>(0);
		}
		public Pbx_file_referenceContext pbx_file_reference() {
			return GetRuleContext<Pbx_file_referenceContext>(0);
		}
		public Pbx_aggregate_targetContext pbx_aggregate_target() {
			return GetRuleContext<Pbx_aggregate_targetContext>(0);
		}
		public Xc_configuration_listContext xc_configuration_list() {
			return GetRuleContext<Xc_configuration_listContext>(0);
		}
		public ObjectContext @object() {
			return GetRuleContext<ObjectContext>(0);
		}
		public ITerminalNode IDENTIFIER() { return GetToken(XcodeProjectParser.IDENTIFIER, 0); }
		public ITerminalNode NUMBER() { return GetToken(XcodeProjectParser.NUMBER, 0); }
		public Pbx_target_dependencyContext pbx_target_dependency() {
			return GetRuleContext<Pbx_target_dependencyContext>(0);
		}
		public AssignmentContext assignment() {
			return GetRuleContext<AssignmentContext>(0);
		}
		public ITerminalNode NO() { return GetToken(XcodeProjectParser.NO, 0); }
		public Pbx_headers_build_phaseContext pbx_headers_build_phase() {
			return GetRuleContext<Pbx_headers_build_phaseContext>(0);
		}
		public Pbx_groupContext pbx_group() {
			return GetRuleContext<Pbx_groupContext>(0);
		}
		public ArrayContext array() {
			return GetRuleContext<ArrayContext>(0);
		}
		public ITerminalNode YES() { return GetToken(XcodeProjectParser.YES, 0); }
		public Pbx_projectContext pbx_project() {
			return GetRuleContext<Pbx_projectContext>(0);
		}
		public Pbx_shell_script_build_phaseContext pbx_shell_script_build_phase() {
			return GetRuleContext<Pbx_shell_script_build_phaseContext>(0);
		}
		public Pbx_build_fileContext pbx_build_file() {
			return GetRuleContext<Pbx_build_fileContext>(0);
		}
		public ITerminalNode STRING() { return GetToken(XcodeProjectParser.STRING, 0); }
		public Pbx_resources_build_phaseContext pbx_resources_build_phase() {
			return GetRuleContext<Pbx_resources_build_phaseContext>(0);
		}
		public Right_sideContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_right_side; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterRight_side(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitRight_side(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitRight_side(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Right_sideContext right_side() {
		Right_sideContext _localctx = new Right_sideContext(_ctx, State);
		EnterRule(_localctx, 12, RULE_right_side);
		try {
			State = 318;
			switch ( Interpreter.AdaptivePredict(_input,5,_ctx) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 293; Match(STRING);
				}
				break;

			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 294; Match(NUMBER);
				}
				break;

			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 295; Match(IDENTIFIER);
				}
				break;

			case 4:
				EnterOuterAlt(_localctx, 4);
				{
				State = 296; pbx_aggregate_target();
				}
				break;

			case 5:
				EnterOuterAlt(_localctx, 5);
				{
				State = 297; pbx_build_file();
				}
				break;

			case 6:
				EnterOuterAlt(_localctx, 6);
				{
				State = 298; pbx_container_item_proxy();
				}
				break;

			case 7:
				EnterOuterAlt(_localctx, 7);
				{
				State = 299; pbx_copy_files_build_phase();
				}
				break;

			case 8:
				EnterOuterAlt(_localctx, 8);
				{
				State = 300; pbx_file_reference();
				}
				break;

			case 9:
				EnterOuterAlt(_localctx, 9);
				{
				State = 301; pbx_frameworks_build_phase();
				}
				break;

			case 10:
				EnterOuterAlt(_localctx, 10);
				{
				State = 302; pbx_group();
				}
				break;

			case 11:
				EnterOuterAlt(_localctx, 11);
				{
				State = 303; pbx_headers_build_phase();
				}
				break;

			case 12:
				EnterOuterAlt(_localctx, 12);
				{
				State = 304; pbx_native_target();
				}
				break;

			case 13:
				EnterOuterAlt(_localctx, 13);
				{
				State = 305; pbx_resources_build_phase();
				}
				break;

			case 14:
				EnterOuterAlt(_localctx, 14);
				{
				State = 306; pbx_project();
				}
				break;

			case 15:
				EnterOuterAlt(_localctx, 15);
				{
				State = 307; pbx_shell_script_build_phase();
				}
				break;

			case 16:
				EnterOuterAlt(_localctx, 16);
				{
				State = 308; pbx_sources_build_phase();
				}
				break;

			case 17:
				EnterOuterAlt(_localctx, 17);
				{
				State = 309; pbx_target_dependency();
				}
				break;

			case 18:
				EnterOuterAlt(_localctx, 18);
				{
				State = 310; pbx_variant_group();
				}
				break;

			case 19:
				EnterOuterAlt(_localctx, 19);
				{
				State = 311; xc_build_configuration();
				}
				break;

			case 20:
				EnterOuterAlt(_localctx, 20);
				{
				State = 312; xc_configuration_list();
				}
				break;

			case 21:
				EnterOuterAlt(_localctx, 21);
				{
				State = 313; assignment();
				}
				break;

			case 22:
				EnterOuterAlt(_localctx, 22);
				{
				State = 314; array();
				}
				break;

			case 23:
				EnterOuterAlt(_localctx, 23);
				{
				State = 315; @object();
				}
				break;

			case 24:
				EnterOuterAlt(_localctx, 24);
				{
				State = 316; Match(YES);
				}
				break;

			case 25:
				EnterOuterAlt(_localctx, 25);
				{
				State = 317; Match(NO);
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ValueContext : ParserRuleContext {
		public ObjectContext @object() {
			return GetRuleContext<ObjectContext>(0);
		}
		public AssignmentContext assignment() {
			return GetRuleContext<AssignmentContext>(0);
		}
		public ITerminalNode IDENTIFIER() { return GetToken(XcodeProjectParser.IDENTIFIER, 0); }
		public ITerminalNode NUMBER() { return GetToken(XcodeProjectParser.NUMBER, 0); }
		public ITerminalNode STRING() { return GetToken(XcodeProjectParser.STRING, 0); }
		public ArrayContext array() {
			return GetRuleContext<ArrayContext>(0);
		}
		public ValueContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_value; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterValue(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitValue(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitValue(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public ValueContext value() {
		ValueContext _localctx = new ValueContext(_ctx, State);
		EnterRule(_localctx, 14, RULE_value);
		try {
			State = 326;
			switch ( Interpreter.AdaptivePredict(_input,6,_ctx) ) {
			case 1:
				EnterOuterAlt(_localctx, 1);
				{
				State = 320; Match(NUMBER);
				}
				break;

			case 2:
				EnterOuterAlt(_localctx, 2);
				{
				State = 321; Match(STRING);
				}
				break;

			case 3:
				EnterOuterAlt(_localctx, 3);
				{
				State = 322; Match(IDENTIFIER);
				}
				break;

			case 4:
				EnterOuterAlt(_localctx, 4);
				{
				State = 323; assignment();
				}
				break;

			case 5:
				EnterOuterAlt(_localctx, 5);
				{
				State = 324; array();
				}
				break;

			case 6:
				EnterOuterAlt(_localctx, 6);
				{
				State = 325; @object();
				}
				break;
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Archive_versionContext : ParserRuleContext {
		public Archive_versionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_archive_version; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterArchive_version(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitArchive_version(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitArchive_version(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Archive_versionContext archive_version() {
		Archive_versionContext _localctx = new Archive_versionContext(_ctx, State);
		EnterRule(_localctx, 16, RULE_archive_version);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 328; Match(T__21);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ClassesContext : ParserRuleContext {
		public ClassesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_classes; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterClasses(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitClasses(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitClasses(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public ClassesContext classes() {
		ClassesContext _localctx = new ClassesContext(_ctx, State);
		EnterRule(_localctx, 18, RULE_classes);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 330; Match(T__70);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Object_versionContext : ParserRuleContext {
		public Object_versionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_object_version; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterObject_version(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitObject_version(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitObject_version(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Object_versionContext object_version() {
		Object_versionContext _localctx = new Object_versionContext(_ctx, State);
		EnterRule(_localctx, 20, RULE_object_version);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 332; Match(T__23);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ObjectsContext : ParserRuleContext {
		public ObjectsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_objects; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterObjects(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitObjects(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitObjects(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public ObjectsContext objects() {
		ObjectsContext _localctx = new ObjectsContext(_ctx, State);
		EnterRule(_localctx, 22, RULE_objects);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 334; Match(T__67);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Root_objectContext : ParserRuleContext {
		public Root_objectContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_root_object; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterRoot_object(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitRoot_object(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitRoot_object(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Root_objectContext root_object() {
		Root_objectContext _localctx = new Root_objectContext(_ctx, State);
		EnterRule(_localctx, 24, RULE_root_object);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 336; Match(T__33);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class IsaContext : ParserRuleContext {
		public IsaContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_isa; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterIsa(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitIsa(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitIsa(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public IsaContext isa() {
		IsaContext _localctx = new IsaContext(_ctx, State);
		EnterRule(_localctx, 26, RULE_isa);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 338; Match(T__59);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Build_configuration_listContext : ParserRuleContext {
		public Build_configuration_listContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_build_configuration_list; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterBuild_configuration_list(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitBuild_configuration_list(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitBuild_configuration_list(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Build_configuration_listContext build_configuration_list() {
		Build_configuration_listContext _localctx = new Build_configuration_listContext(_ctx, State);
		EnterRule(_localctx, 28, RULE_build_configuration_list);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 340; Match(T__6);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class DependenciesContext : ParserRuleContext {
		public DependenciesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dependencies; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterDependencies(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitDependencies(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitDependencies(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public DependenciesContext dependencies() {
		DependenciesContext _localctx = new DependenciesContext(_ctx, State);
		EnterRule(_localctx, 30, RULE_dependencies);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 342; Match(T__69);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Build_phasesContext : ParserRuleContext {
		public Build_phasesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_build_phases; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterBuild_phases(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitBuild_phases(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitBuild_phases(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Build_phasesContext build_phases() {
		Build_phasesContext _localctx = new Build_phasesContext(_ctx, State);
		EnterRule(_localctx, 32, RULE_build_phases);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 344; Match(T__60);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class NameContext : ParserRuleContext {
		public NameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_name; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterName(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitName(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitName(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public NameContext name() {
		NameContext _localctx = new NameContext(_ctx, State);
		EnterRule(_localctx, 34, RULE_name);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 346; Match(T__86);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Product_nameContext : ParserRuleContext {
		public Product_nameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_product_name; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterProduct_name(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitProduct_name(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitProduct_name(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Product_nameContext product_name() {
		Product_nameContext _localctx = new Product_nameContext(_ctx, State);
		EnterRule(_localctx, 36, RULE_product_name);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 348; Match(T__45);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Source_treeContext : ParserRuleContext {
		public Source_treeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_source_tree; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterSource_tree(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitSource_tree(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitSource_tree(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Source_treeContext source_tree() {
		Source_treeContext _localctx = new Source_treeContext(_ctx, State);
		EnterRule(_localctx, 38, RULE_source_tree);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 350; Match(T__51);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class ChildrenContext : ParserRuleContext {
		public ChildrenContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_children; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterChildren(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitChildren(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitChildren(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public ChildrenContext children() {
		ChildrenContext _localctx = new ChildrenContext(_ctx, State);
		EnterRule(_localctx, 40, RULE_children);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 352; Match(T__32);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Build_action_maskContext : ParserRuleContext {
		public Build_action_maskContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_build_action_mask; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterBuild_action_mask(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitBuild_action_mask(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitBuild_action_mask(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Build_action_maskContext build_action_mask() {
		Build_action_maskContext _localctx = new Build_action_maskContext(_ctx, State);
		EnterRule(_localctx, 42, RULE_build_action_mask);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 354; Match(T__14);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Dst_pathContext : ParserRuleContext {
		public Dst_pathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dst_path; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterDst_path(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitDst_path(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitDst_path(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Dst_pathContext dst_path() {
		Dst_pathContext _localctx = new Dst_pathContext(_ctx, State);
		EnterRule(_localctx, 44, RULE_dst_path);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 356; Match(T__26);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Dst_subfolder_specContext : ParserRuleContext {
		public Dst_subfolder_specContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_dst_subfolder_spec; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterDst_subfolder_spec(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitDst_subfolder_spec(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitDst_subfolder_spec(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Dst_subfolder_specContext dst_subfolder_spec() {
		Dst_subfolder_specContext _localctx = new Dst_subfolder_specContext(_ctx, State);
		EnterRule(_localctx, 46, RULE_dst_subfolder_spec);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 358; Match(T__75);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class FilesContext : ParserRuleContext {
		public FilesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_files; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterFiles(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitFiles(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitFiles(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public FilesContext files() {
		FilesContext _localctx = new FilesContext(_ctx, State);
		EnterRule(_localctx, 48, RULE_files);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 360; Match(T__63);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Run_only_for_deployment_postprocessingContext : ParserRuleContext {
		public Run_only_for_deployment_postprocessingContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_run_only_for_deployment_postprocessing; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterRun_only_for_deployment_postprocessing(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitRun_only_for_deployment_postprocessing(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitRun_only_for_deployment_postprocessing(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Run_only_for_deployment_postprocessingContext run_only_for_deployment_postprocessing() {
		Run_only_for_deployment_postprocessingContext _localctx = new Run_only_for_deployment_postprocessingContext(_ctx, State);
		EnterRule(_localctx, 50, RULE_run_only_for_deployment_postprocessing);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 362; Match(T__49);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_aggregate_targetContext : ParserRuleContext {
		public Pbx_aggregate_targetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_aggregate_target; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_aggregate_target(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_aggregate_target(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_aggregate_target(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_aggregate_targetContext pbx_aggregate_target() {
		Pbx_aggregate_targetContext _localctx = new Pbx_aggregate_targetContext(_ctx, State);
		EnterRule(_localctx, 52, RULE_pbx_aggregate_target);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 364; Match(T__47);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_build_fileContext : ParserRuleContext {
		public Pbx_build_fileContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_build_file; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_build_file(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_build_file(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_build_file(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_build_fileContext pbx_build_file() {
		Pbx_build_fileContext _localctx = new Pbx_build_fileContext(_ctx, State);
		EnterRule(_localctx, 54, RULE_pbx_build_file);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 366; Match(T__55);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class SettingsContext : ParserRuleContext {
		public SettingsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_settings; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterSettings(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitSettings(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitSettings(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public SettingsContext settings() {
		SettingsContext _localctx = new SettingsContext(_ctx, State);
		EnterRule(_localctx, 56, RULE_settings);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 368; Match(T__71);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class File_refContext : ParserRuleContext {
		public File_refContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_file_ref; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterFile_ref(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitFile_ref(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitFile_ref(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public File_refContext file_ref() {
		File_refContext _localctx = new File_refContext(_ctx, State);
		EnterRule(_localctx, 58, RULE_file_ref);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 370; Match(T__1);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_container_item_proxyContext : ParserRuleContext {
		public Pbx_container_item_proxyContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_container_item_proxy; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_container_item_proxy(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_container_item_proxy(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_container_item_proxy(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_container_item_proxyContext pbx_container_item_proxy() {
		Pbx_container_item_proxyContext _localctx = new Pbx_container_item_proxyContext(_ctx, State);
		EnterRule(_localctx, 60, RULE_pbx_container_item_proxy);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 372; Match(T__57);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Container_portalContext : ParserRuleContext {
		public Container_portalContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_container_portal; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterContainer_portal(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitContainer_portal(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitContainer_portal(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Container_portalContext container_portal() {
		Container_portalContext _localctx = new Container_portalContext(_ctx, State);
		EnterRule(_localctx, 62, RULE_container_portal);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 374; Match(T__30);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Proxy_typeContext : ParserRuleContext {
		public Proxy_typeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_proxy_type; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterProxy_type(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitProxy_type(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitProxy_type(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Proxy_typeContext proxy_type() {
		Proxy_typeContext _localctx = new Proxy_typeContext(_ctx, State);
		EnterRule(_localctx, 64, RULE_proxy_type);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 376; Match(T__7);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Remote_global_id_stringContext : ParserRuleContext {
		public Remote_global_id_stringContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_remote_global_id_string; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterRemote_global_id_string(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitRemote_global_id_string(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitRemote_global_id_string(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Remote_global_id_stringContext remote_global_id_string() {
		Remote_global_id_stringContext _localctx = new Remote_global_id_stringContext(_ctx, State);
		EnterRule(_localctx, 66, RULE_remote_global_id_string);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 378; Match(T__9);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Remote_infoContext : ParserRuleContext {
		public Remote_infoContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_remote_info; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterRemote_info(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitRemote_info(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitRemote_info(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Remote_infoContext remote_info() {
		Remote_infoContext _localctx = new Remote_infoContext(_ctx, State);
		EnterRule(_localctx, 68, RULE_remote_info);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 380; Match(T__4);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_copy_files_build_phaseContext : ParserRuleContext {
		public Pbx_copy_files_build_phaseContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_copy_files_build_phase; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_copy_files_build_phase(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_copy_files_build_phase(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_copy_files_build_phase(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_copy_files_build_phaseContext pbx_copy_files_build_phase() {
		Pbx_copy_files_build_phaseContext _localctx = new Pbx_copy_files_build_phaseContext(_ctx, State);
		EnterRule(_localctx, 70, RULE_pbx_copy_files_build_phase);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 382; Match(T__24);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_file_referenceContext : ParserRuleContext {
		public Pbx_file_referenceContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_file_reference; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_file_reference(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_file_reference(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_file_reference(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_file_referenceContext pbx_file_reference() {
		Pbx_file_referenceContext _localctx = new Pbx_file_referenceContext(_ctx, State);
		EnterRule(_localctx, 72, RULE_pbx_file_reference);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 384; Match(T__18);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class File_encodingContext : ParserRuleContext {
		public File_encodingContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_file_encoding; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterFile_encoding(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitFile_encoding(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitFile_encoding(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public File_encodingContext file_encoding() {
		File_encodingContext _localctx = new File_encodingContext(_ctx, State);
		EnterRule(_localctx, 74, RULE_file_encoding);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 386; Match(T__5);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Explicit_file_typeContext : ParserRuleContext {
		public Explicit_file_typeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_explicit_file_type; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterExplicit_file_type(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitExplicit_file_type(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitExplicit_file_type(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Explicit_file_typeContext explicit_file_type() {
		Explicit_file_typeContext _localctx = new Explicit_file_typeContext(_ctx, State);
		EnterRule(_localctx, 76, RULE_explicit_file_type);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 388; Match(T__40);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Last_known_file_typeContext : ParserRuleContext {
		public Last_known_file_typeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_last_known_file_type; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterLast_known_file_type(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitLast_known_file_type(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitLast_known_file_type(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Last_known_file_typeContext last_known_file_type() {
		Last_known_file_typeContext _localctx = new Last_known_file_typeContext(_ctx, State);
		EnterRule(_localctx, 78, RULE_last_known_file_type);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 390; Match(T__58);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class PathContext : ParserRuleContext {
		public PathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_path; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPath(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPath(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPath(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public PathContext path() {
		PathContext _localctx = new PathContext(_ctx, State);
		EnterRule(_localctx, 80, RULE_path);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 392; Match(T__82);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_frameworks_build_phaseContext : ParserRuleContext {
		public Pbx_frameworks_build_phaseContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_frameworks_build_phase; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_frameworks_build_phase(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_frameworks_build_phase(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_frameworks_build_phase(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_frameworks_build_phaseContext pbx_frameworks_build_phase() {
		Pbx_frameworks_build_phaseContext _localctx = new Pbx_frameworks_build_phaseContext(_ctx, State);
		EnterRule(_localctx, 82, RULE_pbx_frameworks_build_phase);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 394; Match(T__46);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_groupContext : ParserRuleContext {
		public Pbx_groupContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_group; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_group(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_group(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_group(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_groupContext pbx_group() {
		Pbx_groupContext _localctx = new Pbx_groupContext(_ctx, State);
		EnterRule(_localctx, 84, RULE_pbx_group);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 396; Match(T__15);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_headers_build_phaseContext : ParserRuleContext {
		public Pbx_headers_build_phaseContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_headers_build_phase; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_headers_build_phase(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_headers_build_phase(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_headers_build_phase(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_headers_build_phaseContext pbx_headers_build_phase() {
		Pbx_headers_build_phaseContext _localctx = new Pbx_headers_build_phaseContext(_ctx, State);
		EnterRule(_localctx, 86, RULE_pbx_headers_build_phase);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 398; Match(T__64);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_native_targetContext : ParserRuleContext {
		public Pbx_native_targetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_native_target; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_native_target(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_native_target(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_native_target(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_native_targetContext pbx_native_target() {
		Pbx_native_targetContext _localctx = new Pbx_native_targetContext(_ctx, State);
		EnterRule(_localctx, 88, RULE_pbx_native_target);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 400; Match(T__52);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Product_install_pathContext : ParserRuleContext {
		public Product_install_pathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_product_install_path; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterProduct_install_path(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitProduct_install_path(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitProduct_install_path(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Product_install_pathContext product_install_path() {
		Product_install_pathContext _localctx = new Product_install_pathContext(_ctx, State);
		EnterRule(_localctx, 90, RULE_product_install_path);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 402; Match(T__65);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Product_referenceContext : ParserRuleContext {
		public Product_referenceContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_product_reference; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterProduct_reference(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitProduct_reference(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitProduct_reference(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Product_referenceContext product_reference() {
		Product_referenceContext _localctx = new Product_referenceContext(_ctx, State);
		EnterRule(_localctx, 92, RULE_product_reference);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 404; Match(T__83);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Product_typeContext : ParserRuleContext {
		public Product_typeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_product_type; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterProduct_type(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitProduct_type(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitProduct_type(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Product_typeContext product_type() {
		Product_typeContext _localctx = new Product_typeContext(_ctx, State);
		EnterRule(_localctx, 94, RULE_product_type);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 406; Match(T__88);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_projectContext : ParserRuleContext {
		public Pbx_projectContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_project; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_project(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_project(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_project(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_projectContext pbx_project() {
		Pbx_projectContext _localctx = new Pbx_projectContext(_ctx, State);
		EnterRule(_localctx, 96, RULE_pbx_project);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 408; Match(T__3);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Compatibility_versionContext : ParserRuleContext {
		public Compatibility_versionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_compatibility_version; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterCompatibility_version(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitCompatibility_version(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitCompatibility_version(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Compatibility_versionContext compatibility_version() {
		Compatibility_versionContext _localctx = new Compatibility_versionContext(_ctx, State);
		EnterRule(_localctx, 98, RULE_compatibility_version);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 410; Match(T__79);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Development_regionContext : ParserRuleContext {
		public Development_regionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_development_region; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterDevelopment_region(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitDevelopment_region(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitDevelopment_region(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Development_regionContext development_region() {
		Development_regionContext _localctx = new Development_regionContext(_ctx, State);
		EnterRule(_localctx, 100, RULE_development_region);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 412; Match(T__13);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Has_scanned_for_encodingsContext : ParserRuleContext {
		public Has_scanned_for_encodingsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_has_scanned_for_encodings; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterHas_scanned_for_encodings(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitHas_scanned_for_encodings(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitHas_scanned_for_encodings(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Has_scanned_for_encodingsContext has_scanned_for_encodings() {
		Has_scanned_for_encodingsContext _localctx = new Has_scanned_for_encodingsContext(_ctx, State);
		EnterRule(_localctx, 102, RULE_has_scanned_for_encodings);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 414; Match(T__85);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Known_regionsContext : ParserRuleContext {
		public Known_regionsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_known_regions; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterKnown_regions(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitKnown_regions(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitKnown_regions(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Known_regionsContext known_regions() {
		Known_regionsContext _localctx = new Known_regionsContext(_ctx, State);
		EnterRule(_localctx, 104, RULE_known_regions);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 416; Match(T__74);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Main_groupContext : ParserRuleContext {
		public Main_groupContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_main_group; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterMain_group(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitMain_group(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitMain_group(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Main_groupContext main_group() {
		Main_groupContext _localctx = new Main_groupContext(_ctx, State);
		EnterRule(_localctx, 106, RULE_main_group);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 418; Match(T__78);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Product_ref_groupContext : ParserRuleContext {
		public Product_ref_groupContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_product_ref_group; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterProduct_ref_group(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitProduct_ref_group(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitProduct_ref_group(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Product_ref_groupContext product_ref_group() {
		Product_ref_groupContext _localctx = new Product_ref_groupContext(_ctx, State);
		EnterRule(_localctx, 108, RULE_product_ref_group);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 420; Match(T__37);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Project_dir_pathContext : ParserRuleContext {
		public Project_dir_pathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_project_dir_path; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterProject_dir_path(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitProject_dir_path(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitProject_dir_path(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Project_dir_pathContext project_dir_path() {
		Project_dir_pathContext _localctx = new Project_dir_pathContext(_ctx, State);
		EnterRule(_localctx, 110, RULE_project_dir_path);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 422; Match(T__90);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Project_referencesContext : ParserRuleContext {
		public Project_referencesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_project_references; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterProject_references(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitProject_references(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitProject_references(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Project_referencesContext project_references() {
		Project_referencesContext _localctx = new Project_referencesContext(_ctx, State);
		EnterRule(_localctx, 112, RULE_project_references);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 424; Match(T__39);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Project_rootsContext : ParserRuleContext {
		public Project_rootsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_project_roots; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterProject_roots(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitProject_roots(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitProject_roots(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Project_rootsContext project_roots() {
		Project_rootsContext _localctx = new Project_rootsContext(_ctx, State);
		EnterRule(_localctx, 114, RULE_project_roots);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 426; Match(T__2);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TargetSContext : ParserRuleContext {
		public TargetSContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_targetS; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterTargetS(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitTargetS(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitTargetS(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public TargetSContext targetS() {
		TargetSContext _localctx = new TargetSContext(_ctx, State);
		EnterRule(_localctx, 116, RULE_targetS);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 428; Match(T__73);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_resources_build_phaseContext : ParserRuleContext {
		public Pbx_resources_build_phaseContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_resources_build_phase; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_resources_build_phase(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_resources_build_phase(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_resources_build_phase(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_resources_build_phaseContext pbx_resources_build_phase() {
		Pbx_resources_build_phaseContext _localctx = new Pbx_resources_build_phaseContext(_ctx, State);
		EnterRule(_localctx, 118, RULE_pbx_resources_build_phase);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 430; Match(T__36);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_shell_script_build_phaseContext : ParserRuleContext {
		public Pbx_shell_script_build_phaseContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_shell_script_build_phase; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_shell_script_build_phase(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_shell_script_build_phase(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_shell_script_build_phase(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_shell_script_build_phaseContext pbx_shell_script_build_phase() {
		Pbx_shell_script_build_phaseContext _localctx = new Pbx_shell_script_build_phaseContext(_ctx, State);
		EnterRule(_localctx, 120, RULE_pbx_shell_script_build_phase);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 432; Match(T__44);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Input_pathsContext : ParserRuleContext {
		public Input_pathsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_input_paths; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterInput_paths(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitInput_paths(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitInput_paths(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Input_pathsContext input_paths() {
		Input_pathsContext _localctx = new Input_pathsContext(_ctx, State);
		EnterRule(_localctx, 122, RULE_input_paths);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 434; Match(T__87);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Output_pathsContext : ParserRuleContext {
		public Output_pathsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_output_paths; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterOutput_paths(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitOutput_paths(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitOutput_paths(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Output_pathsContext output_paths() {
		Output_pathsContext _localctx = new Output_pathsContext(_ctx, State);
		EnterRule(_localctx, 124, RULE_output_paths);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 436; Match(T__84);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Shell_pathContext : ParserRuleContext {
		public Shell_pathContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_shell_path; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterShell_path(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitShell_path(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitShell_path(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Shell_pathContext shell_path() {
		Shell_pathContext _localctx = new Shell_pathContext(_ctx, State);
		EnterRule(_localctx, 126, RULE_shell_path);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 438; Match(T__12);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Shell_scriptContext : ParserRuleContext {
		public Shell_scriptContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_shell_script; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterShell_script(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitShell_script(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitShell_script(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Shell_scriptContext shell_script() {
		Shell_scriptContext _localctx = new Shell_scriptContext(_ctx, State);
		EnterRule(_localctx, 128, RULE_shell_script);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 440; Match(T__8);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_sources_build_phaseContext : ParserRuleContext {
		public Pbx_sources_build_phaseContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_sources_build_phase; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_sources_build_phase(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_sources_build_phase(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_sources_build_phase(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_sources_build_phaseContext pbx_sources_build_phase() {
		Pbx_sources_build_phaseContext _localctx = new Pbx_sources_build_phaseContext(_ctx, State);
		EnterRule(_localctx, 130, RULE_pbx_sources_build_phase);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 442; Match(T__48);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_target_dependencyContext : ParserRuleContext {
		public Pbx_target_dependencyContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_target_dependency; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_target_dependency(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_target_dependency(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_target_dependency(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_target_dependencyContext pbx_target_dependency() {
		Pbx_target_dependencyContext _localctx = new Pbx_target_dependencyContext(_ctx, State);
		EnterRule(_localctx, 132, RULE_pbx_target_dependency);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 444; Match(T__42);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class TargetContext : ParserRuleContext {
		public TargetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_target; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterTarget(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitTarget(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitTarget(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public TargetContext target() {
		TargetContext _localctx = new TargetContext(_ctx, State);
		EnterRule(_localctx, 134, RULE_target);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 446; Match(T__68);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Target_PROXYContext : ParserRuleContext {
		public Target_PROXYContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_target_PROXY; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterTarget_proxy(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitTarget_PROXY(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitTarget_PROXY(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Target_PROXYContext target_PROXY() {
		Target_PROXYContext _localctx = new Target_PROXYContext(_ctx, State);
		EnterRule(_localctx, 136, RULE_target_PROXY);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 448; Match(T__16);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Pbx_variant_groupContext : ParserRuleContext {
		public Pbx_variant_groupContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_pbx_variant_group; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterPbx_variant_group(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitPbx_variant_group(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitPbx_variant_group(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Pbx_variant_groupContext pbx_variant_group() {
		Pbx_variant_groupContext _localctx = new Pbx_variant_groupContext(_ctx, State);
		EnterRule(_localctx, 138, RULE_pbx_variant_group);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 450; Match(T__77);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Xc_build_configurationContext : ParserRuleContext {
		public Xc_build_configurationContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_xc_build_configuration; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterXc_build_configuration(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitXc_build_configuration(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitXc_build_configuration(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Xc_build_configurationContext xc_build_configuration() {
		Xc_build_configurationContext _localctx = new Xc_build_configurationContext(_ctx, State);
		EnterRule(_localctx, 140, RULE_xc_build_configuration);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 452; Match(T__28);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Base_configuration_referenceContext : ParserRuleContext {
		public Base_configuration_referenceContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_base_configuration_reference; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterBase_configuration_reference(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitBase_configuration_reference(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitBase_configuration_reference(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Base_configuration_referenceContext base_configuration_reference() {
		Base_configuration_referenceContext _localctx = new Base_configuration_referenceContext(_ctx, State);
		EnterRule(_localctx, 142, RULE_base_configuration_reference);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 454; Match(T__20);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Build_settingsContext : ParserRuleContext {
		public Build_settingsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_build_settings; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterBuild_settings(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitBuild_settings(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitBuild_settings(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Build_settingsContext build_settings() {
		Build_settingsContext _localctx = new Build_settingsContext(_ctx, State);
		EnterRule(_localctx, 144, RULE_build_settings);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 456; Match(T__61);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class AttributesContext : ParserRuleContext {
		public AttributesContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_attributes; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterAttributes(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitAttributes(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitAttributes(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public AttributesContext attributes() {
		AttributesContext _localctx = new AttributesContext(_ctx, State);
		EnterRule(_localctx, 146, RULE_attributes);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 458; Match(T__22);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Clang_enable_objc_arcContext : ParserRuleContext {
		public Clang_enable_objc_arcContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_clang_enable_objc_arc; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterClang_enable_objc_arc(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitClang_enable_objc_arc(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitClang_enable_objc_arc(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Clang_enable_objc_arcContext clang_enable_objc_arc() {
		Clang_enable_objc_arcContext _localctx = new Clang_enable_objc_arcContext(_ctx, State);
		EnterRule(_localctx, 148, RULE_clang_enable_objc_arc);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 460; Match(T__76);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Code_sign_identityContext : ParserRuleContext {
		public Code_sign_identityContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_code_sign_identity; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterCode_sign_identity(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitCode_sign_identity(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitCode_sign_identity(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Code_sign_identityContext code_sign_identity() {
		Code_sign_identityContext _localctx = new Code_sign_identityContext(_ctx, State);
		EnterRule(_localctx, 150, RULE_code_sign_identity);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 462; Match(T__11);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gcc_warn_about_missing_field_initializersContext : ParserRuleContext {
		public Gcc_warn_about_missing_field_initializersContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gcc_warn_about_missing_field_initializers; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterGcc_warn_about_missing_field_initializers(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitGcc_warn_about_missing_field_initializers(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitGcc_warn_about_missing_field_initializers(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Gcc_warn_about_missing_field_initializersContext gcc_warn_about_missing_field_initializers() {
		Gcc_warn_about_missing_field_initializersContext _localctx = new Gcc_warn_about_missing_field_initializersContext(_ctx, State);
		EnterRule(_localctx, 152, RULE_gcc_warn_about_missing_field_initializers);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 464; Match(T__50);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gcc_warn_about_return_typeContext : ParserRuleContext {
		public Gcc_warn_about_return_typeContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gcc_warn_about_return_type; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterGcc_warn_about_return_type(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitGcc_warn_about_return_type(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitGcc_warn_about_return_type(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Gcc_warn_about_return_typeContext gcc_warn_about_return_type() {
		Gcc_warn_about_return_typeContext _localctx = new Gcc_warn_about_return_typeContext(_ctx, State);
		EnterRule(_localctx, 154, RULE_gcc_warn_about_return_type);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 466; Match(T__35);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gcc_warn_about_initializer_not_fully_bracketedContext : ParserRuleContext {
		public Gcc_warn_about_initializer_not_fully_bracketedContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gcc_warn_about_initializer_not_fully_bracketed; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterGcc_warn_about_initializer_not_fully_bracketed(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitGcc_warn_about_initializer_not_fully_bracketed(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitGcc_warn_about_initializer_not_fully_bracketed(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Gcc_warn_about_initializer_not_fully_bracketedContext gcc_warn_about_initializer_not_fully_bracketed() {
		Gcc_warn_about_initializer_not_fully_bracketedContext _localctx = new Gcc_warn_about_initializer_not_fully_bracketedContext(_ctx, State);
		EnterRule(_localctx, 156, RULE_gcc_warn_about_initializer_not_fully_bracketed);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 468; Match(T__54);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gcc_warn_shadowContext : ParserRuleContext {
		public Gcc_warn_shadowContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gcc_warn_shadow; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterGcc_warn_shadow(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitGcc_warn_shadow(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitGcc_warn_shadow(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Gcc_warn_shadowContext gcc_warn_shadow() {
		Gcc_warn_shadowContext _localctx = new Gcc_warn_shadowContext(_ctx, State);
		EnterRule(_localctx, 158, RULE_gcc_warn_shadow);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 470; Match(T__89);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gcc_warn_sign_compareContext : ParserRuleContext {
		public Gcc_warn_sign_compareContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gcc_warn_sign_compare; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterGcc_warn_sign_compare(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitGcc_warn_sign_compare(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitGcc_warn_sign_compare(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Gcc_warn_sign_compareContext gcc_warn_sign_compare() {
		Gcc_warn_sign_compareContext _localctx = new Gcc_warn_sign_compareContext(_ctx, State);
		EnterRule(_localctx, 160, RULE_gcc_warn_sign_compare);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 472; Match(T__53);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gcc_warn_undeclared_selectorContext : ParserRuleContext {
		public Gcc_warn_undeclared_selectorContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gcc_warn_undeclared_selector; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterGcc_warn_undeclared_selector(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitGcc_warn_undeclared_selector(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitGcc_warn_undeclared_selector(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Gcc_warn_undeclared_selectorContext gcc_warn_undeclared_selector() {
		Gcc_warn_undeclared_selectorContext _localctx = new Gcc_warn_undeclared_selectorContext(_ctx, State);
		EnterRule(_localctx, 162, RULE_gcc_warn_undeclared_selector);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 474; Match(T__19);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gcc_warn_unused_functionContext : ParserRuleContext {
		public Gcc_warn_unused_functionContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gcc_warn_unused_function; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterGcc_warn_unused_function(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitGcc_warn_unused_function(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitGcc_warn_unused_function(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Gcc_warn_unused_functionContext gcc_warn_unused_function() {
		Gcc_warn_unused_functionContext _localctx = new Gcc_warn_unused_functionContext(_ctx, State);
		EnterRule(_localctx, 164, RULE_gcc_warn_unused_function);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 476; Match(T__81);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gcc_warn_unused_labelContext : ParserRuleContext {
		public Gcc_warn_unused_labelContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gcc_warn_unused_label; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterGcc_warn_unused_label(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitGcc_warn_unused_label(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitGcc_warn_unused_label(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Gcc_warn_unused_labelContext gcc_warn_unused_label() {
		Gcc_warn_unused_labelContext _localctx = new Gcc_warn_unused_labelContext(_ctx, State);
		EnterRule(_localctx, 166, RULE_gcc_warn_unused_label);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 478; Match(T__0);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Gcc_warn_unused_variableContext : ParserRuleContext {
		public Gcc_warn_unused_variableContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_gcc_warn_unused_variable; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterGcc_warn_unused_variable(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitGcc_warn_unused_variable(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitGcc_warn_unused_variable(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Gcc_warn_unused_variableContext gcc_warn_unused_variable() {
		Gcc_warn_unused_variableContext _localctx = new Gcc_warn_unused_variableContext(_ctx, State);
		EnterRule(_localctx, 168, RULE_gcc_warn_unused_variable);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 480; Match(T__27);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Iphoneos_deployment_targetContext : ParserRuleContext {
		public Iphoneos_deployment_targetContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_iphoneos_deployment_target; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterIphoneos_deployment_target(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitIphoneos_deployment_target(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitIphoneos_deployment_target(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Iphoneos_deployment_targetContext iphoneos_deployment_target() {
		Iphoneos_deployment_targetContext _localctx = new Iphoneos_deployment_targetContext(_ctx, State);
		EnterRule(_localctx, 170, RULE_iphoneos_deployment_target);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 482; Match(T__31);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Provisioning_profileContext : ParserRuleContext {
		public Provisioning_profileContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_provisioning_profile; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterProvisioning_profile(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitProvisioning_profile(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitProvisioning_profile(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Provisioning_profileContext provisioning_profile() {
		Provisioning_profileContext _localctx = new Provisioning_profileContext(_ctx, State);
		EnterRule(_localctx, 172, RULE_provisioning_profile);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 484; Match(T__25);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Run_clang_static_analyzerContext : ParserRuleContext {
		public Run_clang_static_analyzerContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_run_clang_static_analyzer; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterRun_clang_static_analyzer(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitRun_clang_static_analyzer(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitRun_clang_static_analyzer(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Run_clang_static_analyzerContext run_clang_static_analyzer() {
		Run_clang_static_analyzerContext _localctx = new Run_clang_static_analyzerContext(_ctx, State);
		EnterRule(_localctx, 174, RULE_run_clang_static_analyzer);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 486; Match(T__80);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Xc_configuration_listContext : ParserRuleContext {
		public Xc_configuration_listContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_xc_configuration_list; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterXc_configuration_list(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitXc_configuration_list(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitXc_configuration_list(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Xc_configuration_listContext xc_configuration_list() {
		Xc_configuration_listContext _localctx = new Xc_configuration_listContext(_ctx, State);
		EnterRule(_localctx, 176, RULE_xc_configuration_list);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 488; Match(T__41);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Build_configurationsContext : ParserRuleContext {
		public Build_configurationsContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_build_configurations; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterBuild_configurations(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitBuild_configurations(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitBuild_configurations(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Build_configurationsContext build_configurations() {
		Build_configurationsContext _localctx = new Build_configurationsContext(_ctx, State);
		EnterRule(_localctx, 178, RULE_build_configurations);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 490; Match(T__34);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Default_configuration_is_visibleContext : ParserRuleContext {
		public Default_configuration_is_visibleContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_default_configuration_is_visible; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterDefault_configuration_is_visible(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitDefault_configuration_is_visible(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitDefault_configuration_is_visible(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Default_configuration_is_visibleContext default_configuration_is_visible() {
		Default_configuration_is_visibleContext _localctx = new Default_configuration_is_visibleContext(_ctx, State);
		EnterRule(_localctx, 180, RULE_default_configuration_is_visible);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 492; Match(T__66);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public partial class Default_configuration_nameContext : ParserRuleContext {
		public Default_configuration_nameContext(ParserRuleContext parent, int invokingState)
			: base(parent, invokingState)
		{
		}
		public override int RuleIndex { get { return RULE_default_configuration_name; } }
		public override void EnterRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.EnterDefault_configuration_name(this);
		}
		public override void ExitRule(IParseTreeListener listener) {
			IXcodeProjectListener typedListener = listener as IXcodeProjectListener;
			if (typedListener != null) typedListener.ExitDefault_configuration_name(this);
		}
		public override TResult Accept<TResult>(IParseTreeVisitor<TResult> visitor) {
			IXcodeProjectVisitor<TResult> typedVisitor = visitor as IXcodeProjectVisitor<TResult>;
			if (typedVisitor != null) return typedVisitor.VisitDefault_configuration_name(this);
			else return visitor.VisitChildren(this);
		}
	}

	[RuleVersion(0)]
	public Default_configuration_nameContext default_configuration_name() {
		Default_configuration_nameContext _localctx = new Default_configuration_nameContext(_ctx, State);
		EnterRule(_localctx, 182, RULE_default_configuration_name);
		try {
			EnterOuterAlt(_localctx, 1);
			{
			State = 494; Match(T__17);
			}
		}
		catch (RecognitionException re) {
			_localctx.exception = re;
			_errHandler.ReportError(this, re);
			_errHandler.Recover(this, re);
		}
		finally {
			ExitRule();
		}
		return _localctx;
	}

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x3\x64\x1F3\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37\t\x37"+
		"\x4\x38\t\x38\x4\x39\t\x39\x4:\t:\x4;\t;\x4<\t<\x4=\t=\x4>\t>\x4?\t?\x4"+
		"@\t@\x4\x41\t\x41\x4\x42\t\x42\x4\x43\t\x43\x4\x44\t\x44\x4\x45\t\x45"+
		"\x4\x46\t\x46\x4G\tG\x4H\tH\x4I\tI\x4J\tJ\x4K\tK\x4L\tL\x4M\tM\x4N\tN"+
		"\x4O\tO\x4P\tP\x4Q\tQ\x4R\tR\x4S\tS\x4T\tT\x4U\tU\x4V\tV\x4W\tW\x4X\t"+
		"X\x4Y\tY\x4Z\tZ\x4[\t[\x4\\\t\\\x4]\t]\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\a"+
		"\x3\xC0\n\x3\f\x3\xE\x3\xC3\v\x3\x3\x3\x3\x3\x3\x3\x3\x3\x5\x3\xC9\n\x3"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\a\x5\xD3\n\x5\f\x5\xE"+
		"\x5\xD6\v\x5\x3\x5\x3\x5\x3\x5\x3\x5\x5\x5\xDC\n\x5\x3\x6\x3\x6\x3\x6"+
		"\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a"+
		"\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a"+
		"\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a"+
		"\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a"+
		"\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x5\a"+
		"\x126\n\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x5\b"+
		"\x141\n\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x5\t\x149\n\t\x3\n\x3\n\x3\v\x3"+
		"\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3"+
		"\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3"+
		"\x16\x3\x17\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3"+
		"\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3"+
		"!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)"+
		"\x3)\x3*\x3*\x3+\x3+\x3,\x3,\x3-\x3-\x3.\x3.\x3/\x3/\x3\x30\x3\x30\x3"+
		"\x31\x3\x31\x3\x32\x3\x32\x3\x33\x3\x33\x3\x34\x3\x34\x3\x35\x3\x35\x3"+
		"\x36\x3\x36\x3\x37\x3\x37\x3\x38\x3\x38\x3\x39\x3\x39\x3:\x3:\x3;\x3;"+
		"\x3<\x3<\x3=\x3=\x3>\x3>\x3?\x3?\x3@\x3@\x3\x41\x3\x41\x3\x42\x3\x42\x3"+
		"\x43\x3\x43\x3\x44\x3\x44\x3\x45\x3\x45\x3\x46\x3\x46\x3G\x3G\x3H\x3H"+
		"\x3I\x3I\x3J\x3J\x3K\x3K\x3L\x3L\x3M\x3M\x3N\x3N\x3O\x3O\x3P\x3P\x3Q\x3"+
		"Q\x3R\x3R\x3S\x3S\x3T\x3T\x3U\x3U\x3V\x3V\x3W\x3W\x3X\x3X\x3Y\x3Y\x3Z"+
		"\x3Z\x3[\x3[\x3\\\x3\\\x3]\x3]\x3]\x2\x2\x2^\x2\x2\x4\x2\x6\x2\b\x2\n"+
		"\x2\f\x2\xE\x2\x10\x2\x12\x2\x14\x2\x16\x2\x18\x2\x1A\x2\x1C\x2\x1E\x2"+
		" \x2\"\x2$\x2&\x2(\x2*\x2,\x2.\x2\x30\x2\x32\x2\x34\x2\x36\x2\x38\x2:"+
		"\x2<\x2>\x2@\x2\x42\x2\x44\x2\x46\x2H\x2J\x2L\x2N\x2P\x2R\x2T\x2V\x2X"+
		"\x2Z\x2\\\x2^\x2`\x2\x62\x2\x64\x2\x66\x2h\x2j\x2l\x2n\x2p\x2r\x2t\x2"+
		"v\x2x\x2z\x2|\x2~\x2\x80\x2\x82\x2\x84\x2\x86\x2\x88\x2\x8A\x2\x8C\x2"+
		"\x8E\x2\x90\x2\x92\x2\x94\x2\x96\x2\x98\x2\x9A\x2\x9C\x2\x9E\x2\xA0\x2"+
		"\xA2\x2\xA4\x2\xA6\x2\xA8\x2\xAA\x2\xAC\x2\xAE\x2\xB0\x2\xB2\x2\xB4\x2"+
		"\xB6\x2\xB8\x2\x2\x2\x1FB\x2\xBA\x3\x2\x2\x2\x4\xC8\x3\x2\x2\x2\x6\xCA"+
		"\x3\x2\x2\x2\b\xDB\x3\x2\x2\x2\n\xDD\x3\x2\x2\x2\f\x125\x3\x2\x2\x2\xE"+
		"\x140\x3\x2\x2\x2\x10\x148\x3\x2\x2\x2\x12\x14A\x3\x2\x2\x2\x14\x14C\x3"+
		"\x2\x2\x2\x16\x14E\x3\x2\x2\x2\x18\x150\x3\x2\x2\x2\x1A\x152\x3\x2\x2"+
		"\x2\x1C\x154\x3\x2\x2\x2\x1E\x156\x3\x2\x2\x2 \x158\x3\x2\x2\x2\"\x15A"+
		"\x3\x2\x2\x2$\x15C\x3\x2\x2\x2&\x15E\x3\x2\x2\x2(\x160\x3\x2\x2\x2*\x162"+
		"\x3\x2\x2\x2,\x164\x3\x2\x2\x2.\x166\x3\x2\x2\x2\x30\x168\x3\x2\x2\x2"+
		"\x32\x16A\x3\x2\x2\x2\x34\x16C\x3\x2\x2\x2\x36\x16E\x3\x2\x2\x2\x38\x170"+
		"\x3\x2\x2\x2:\x172\x3\x2\x2\x2<\x174\x3\x2\x2\x2>\x176\x3\x2\x2\x2@\x178"+
		"\x3\x2\x2\x2\x42\x17A\x3\x2\x2\x2\x44\x17C\x3\x2\x2\x2\x46\x17E\x3\x2"+
		"\x2\x2H\x180\x3\x2\x2\x2J\x182\x3\x2\x2\x2L\x184\x3\x2\x2\x2N\x186\x3"+
		"\x2\x2\x2P\x188\x3\x2\x2\x2R\x18A\x3\x2\x2\x2T\x18C\x3\x2\x2\x2V\x18E"+
		"\x3\x2\x2\x2X\x190\x3\x2\x2\x2Z\x192\x3\x2\x2\x2\\\x194\x3\x2\x2\x2^\x196"+
		"\x3\x2\x2\x2`\x198\x3\x2\x2\x2\x62\x19A\x3\x2\x2\x2\x64\x19C\x3\x2\x2"+
		"\x2\x66\x19E\x3\x2\x2\x2h\x1A0\x3\x2\x2\x2j\x1A2\x3\x2\x2\x2l\x1A4\x3"+
		"\x2\x2\x2n\x1A6\x3\x2\x2\x2p\x1A8\x3\x2\x2\x2r\x1AA\x3\x2\x2\x2t\x1AC"+
		"\x3\x2\x2\x2v\x1AE\x3\x2\x2\x2x\x1B0\x3\x2\x2\x2z\x1B2\x3\x2\x2\x2|\x1B4"+
		"\x3\x2\x2\x2~\x1B6\x3\x2\x2\x2\x80\x1B8\x3\x2\x2\x2\x82\x1BA\x3\x2\x2"+
		"\x2\x84\x1BC\x3\x2\x2\x2\x86\x1BE\x3\x2\x2\x2\x88\x1C0\x3\x2\x2\x2\x8A"+
		"\x1C2\x3\x2\x2\x2\x8C\x1C4\x3\x2\x2\x2\x8E\x1C6\x3\x2\x2\x2\x90\x1C8\x3"+
		"\x2\x2\x2\x92\x1CA\x3\x2\x2\x2\x94\x1CC\x3\x2\x2\x2\x96\x1CE\x3\x2\x2"+
		"\x2\x98\x1D0\x3\x2\x2\x2\x9A\x1D2\x3\x2\x2\x2\x9C\x1D4\x3\x2\x2\x2\x9E"+
		"\x1D6\x3\x2\x2\x2\xA0\x1D8\x3\x2\x2\x2\xA2\x1DA\x3\x2\x2\x2\xA4\x1DC\x3"+
		"\x2\x2\x2\xA6\x1DE\x3\x2\x2\x2\xA8\x1E0\x3\x2\x2\x2\xAA\x1E2\x3\x2\x2"+
		"\x2\xAC\x1E4\x3\x2\x2\x2\xAE\x1E6\x3\x2\x2\x2\xB0\x1E8\x3\x2\x2\x2\xB2"+
		"\x1EA\x3\x2\x2\x2\xB4\x1EC\x3\x2\x2\x2\xB6\x1EE\x3\x2\x2\x2\xB8\x1F0\x3"+
		"\x2\x2\x2\xBA\xBB\x5\x4\x3\x2\xBB\x3\x3\x2\x2\x2\xBC\xBD\a@\x2\x2\xBD"+
		"\xC1\x5\x6\x4\x2\xBE\xC0\x5\x6\x4\x2\xBF\xBE\x3\x2\x2\x2\xC0\xC3\x3\x2"+
		"\x2\x2\xC1\xBF\x3\x2\x2\x2\xC1\xC2\x3\x2\x2\x2\xC2\xC4\x3\x2\x2\x2\xC3"+
		"\xC1\x3\x2\x2\x2\xC4\xC5\a\x15\x2\x2\xC5\xC9\x3\x2\x2\x2\xC6\xC7\a@\x2"+
		"\x2\xC7\xC9\a\x15\x2\x2\xC8\xBC\x3\x2\x2\x2\xC8\xC6\x3\x2\x2\x2\xC9\x5"+
		"\x3\x2\x2\x2\xCA\xCB\x5\f\a\x2\xCB\xCC\a%\x2\x2\xCC\xCD\x5\xE\b\x2\xCD"+
		"\xCE\aS\x2\x2\xCE\a\x3\x2\x2\x2\xCF\xD0\a\x37\x2\x2\xD0\xD4\x5\n\x6\x2"+
		"\xD1\xD3\x5\n\x6\x2\xD2\xD1\x3\x2\x2\x2\xD3\xD6\x3\x2\x2\x2\xD4\xD2\x3"+
		"\x2\x2\x2\xD4\xD5\x3\x2\x2\x2\xD5\xD7\x3\x2\x2\x2\xD6\xD4\x3\x2\x2\x2"+
		"\xD7\xD8\a\x1F\x2\x2\xD8\xDC\x3\x2\x2\x2\xD9\xDA\a\x37\x2\x2\xDA\xDC\a"+
		"\x1F\x2\x2\xDB\xCF\x3\x2\x2\x2\xDB\xD9\x3\x2\x2\x2\xDC\t\x3\x2\x2\x2\xDD"+
		"\xDE\x5\xE\b\x2\xDE\xDF\a\x32\x2\x2\xDF\v\x3\x2\x2\x2\xE0\x126\x5\x12"+
		"\n\x2\xE1\x126\x5\x16\f\x2\xE2\x126\x5\x14\v\x2\xE3\x126\x5\x18\r\x2\xE4"+
		"\x126\x5\x1A\xE\x2\xE5\x126\x5\x1C\xF\x2\xE6\x126\x5\x1E\x10\x2\xE7\x126"+
		"\x5\"\x12\x2\xE8\x126\x5 \x11\x2\xE9\x126\x5$\x13\x2\xEA\x126\x5:\x1E"+
		"\x2\xEB\x126\x5@!\x2\xEC\x126\x5\x42\"\x2\xED\x126\x5\x44#\x2\xEE\x126"+
		"\x5\x46$\x2\xEF\x126\x5,\x17\x2\xF0\x126\x5.\x18\x2\xF1\x126\x5\x30\x19"+
		"\x2\xF2\x126\x5\x32\x1A\x2\xF3\x126\x5<\x1F\x2\xF4\x126\x5\x34\x1B\x2"+
		"\xF5\x126\x5L\'\x2\xF6\x126\x5N(\x2\xF7\x126\x5P)\x2\xF8\x126\x5R*\x2"+
		"\xF9\x126\x5(\x15\x2\xFA\x126\x5*\x16\x2\xFB\x126\x5\\/\x2\xFC\x126\x5"+
		"&\x14\x2\xFD\x126\x5^\x30\x2\xFE\x126\x5`\x31\x2\xFF\x126\x5\x64\x33\x2"+
		"\x100\x126\x5\x66\x34\x2\x101\x126\x5h\x35\x2\x102\x126\x5j\x36\x2\x103"+
		"\x126\x5l\x37\x2\x104\x126\x5n\x38\x2\x105\x126\x5p\x39\x2\x106\x126\x5"+
		"r:\x2\x107\x126\x5t;\x2\x108\x126\x5v<\x2\x109\x126\x5|?\x2\x10A\x126"+
		"\x5~@\x2\x10B\x126\x5\x80\x41\x2\x10C\x126\x5\x82\x42\x2\x10D\x126\x5"+
		"\x88\x45\x2\x10E\x126\x5\x8A\x46\x2\x10F\x126\x5\x90I\x2\x110\x126\x5"+
		"\x92J\x2\x111\x126\x5\xB4[\x2\x112\x126\x5\xB6\\\x2\x113\x126\x5\xB8]"+
		"\x2\x114\x126\x5\x96L\x2\x115\x126\x5\x98M\x2\x116\x126\x5\x9AN\x2\x117"+
		"\x126\x5\x9CO\x2\x118\x126\x5\x9EP\x2\x119\x126\x5\xA0Q\x2\x11A\x126\x5"+
		"\xA2R\x2\x11B\x126\x5\xA4S\x2\x11C\x126\x5\xA6T\x2\x11D\x126\x5\xA8U\x2"+
		"\x11E\x126\x5\xAAV\x2\x11F\x126\x5\xACW\x2\x120\x126\x5\xAEX\x2\x121\x126"+
		"\x5\xB0Y\x2\x122\x126\x5\x94K\x2\x123\x126\a`\x2\x2\x124\x126\a\x61\x2"+
		"\x2\x125\xE0\x3\x2\x2\x2\x125\xE1\x3\x2\x2\x2\x125\xE2\x3\x2\x2\x2\x125"+
		"\xE3\x3\x2\x2\x2\x125\xE4\x3\x2\x2\x2\x125\xE5\x3\x2\x2\x2\x125\xE6\x3"+
		"\x2\x2\x2\x125\xE7\x3\x2\x2\x2\x125\xE8\x3\x2\x2\x2\x125\xE9\x3\x2\x2"+
		"\x2\x125\xEA\x3\x2\x2\x2\x125\xEB\x3\x2\x2\x2\x125\xEC\x3\x2\x2\x2\x125"+
		"\xED\x3\x2\x2\x2\x125\xEE\x3\x2\x2\x2\x125\xEF\x3\x2\x2\x2\x125\xF0\x3"+
		"\x2\x2\x2\x125\xF1\x3\x2\x2\x2\x125\xF2\x3\x2\x2\x2\x125\xF3\x3\x2\x2"+
		"\x2\x125\xF4\x3\x2\x2\x2\x125\xF5\x3\x2\x2\x2\x125\xF6\x3\x2\x2\x2\x125"+
		"\xF7\x3\x2\x2\x2\x125\xF8\x3\x2\x2\x2\x125\xF9\x3\x2\x2\x2\x125\xFA\x3"+
		"\x2\x2\x2\x125\xFB\x3\x2\x2\x2\x125\xFC\x3\x2\x2\x2\x125\xFD\x3\x2\x2"+
		"\x2\x125\xFE\x3\x2\x2\x2\x125\xFF\x3\x2\x2\x2\x125\x100\x3\x2\x2\x2\x125"+
		"\x101\x3\x2\x2\x2\x125\x102\x3\x2\x2\x2\x125\x103\x3\x2\x2\x2\x125\x104"+
		"\x3\x2\x2\x2\x125\x105\x3\x2\x2\x2\x125\x106\x3\x2\x2\x2\x125\x107\x3"+
		"\x2\x2\x2\x125\x108\x3\x2\x2\x2\x125\x109\x3\x2\x2\x2\x125\x10A\x3\x2"+
		"\x2\x2\x125\x10B\x3\x2\x2\x2\x125\x10C\x3\x2\x2\x2\x125\x10D\x3\x2\x2"+
		"\x2\x125\x10E\x3\x2\x2\x2\x125\x10F\x3\x2\x2\x2\x125\x110\x3\x2\x2\x2"+
		"\x125\x111\x3\x2\x2\x2\x125\x112\x3\x2\x2\x2\x125\x113\x3\x2\x2\x2\x125"+
		"\x114\x3\x2\x2\x2\x125\x115\x3\x2\x2\x2\x125\x116\x3\x2\x2\x2\x125\x117"+
		"\x3\x2\x2\x2\x125\x118\x3\x2\x2\x2\x125\x119\x3\x2\x2\x2\x125\x11A\x3"+
		"\x2\x2\x2\x125\x11B\x3\x2\x2\x2\x125\x11C\x3\x2\x2\x2\x125\x11D\x3\x2"+
		"\x2\x2\x125\x11E\x3\x2\x2\x2\x125\x11F\x3\x2\x2\x2\x125\x120\x3\x2\x2"+
		"\x2\x125\x121\x3\x2\x2\x2\x125\x122\x3\x2\x2\x2\x125\x123\x3\x2\x2\x2"+
		"\x125\x124\x3\x2\x2\x2\x126\r\x3\x2\x2\x2\x127\x141\a\x61\x2\x2\x128\x141"+
		"\a\x62\x2\x2\x129\x141\a`\x2\x2\x12A\x141\x5\x36\x1C\x2\x12B\x141\x5\x38"+
		"\x1D\x2\x12C\x141\x5> \x2\x12D\x141\x5H%\x2\x12E\x141\x5J&\x2\x12F\x141"+
		"\x5T+\x2\x130\x141\x5V,\x2\x131\x141\x5X-\x2\x132\x141\x5Z.\x2\x133\x141"+
		"\x5x=\x2\x134\x141\x5\x62\x32\x2\x135\x141\x5z>\x2\x136\x141\x5\x84\x43"+
		"\x2\x137\x141\x5\x86\x44\x2\x138\x141\x5\x8CG\x2\x139\x141\x5\x8EH\x2"+
		"\x13A\x141\x5\xB2Z\x2\x13B\x141\x5\x6\x4\x2\x13C\x141\x5\b\x5\x2\x13D"+
		"\x141\x5\x4\x3\x2\x13E\x141\a^\x2\x2\x13F\x141\a_\x2\x2\x140\x127\x3\x2"+
		"\x2\x2\x140\x128\x3\x2\x2\x2\x140\x129\x3\x2\x2\x2\x140\x12A\x3\x2\x2"+
		"\x2\x140\x12B\x3\x2\x2\x2\x140\x12C\x3\x2\x2\x2\x140\x12D\x3\x2\x2\x2"+
		"\x140\x12E\x3\x2\x2\x2\x140\x12F\x3\x2\x2\x2\x140\x130\x3\x2\x2\x2\x140"+
		"\x131\x3\x2\x2\x2\x140\x132\x3\x2\x2\x2\x140\x133\x3\x2\x2\x2\x140\x134"+
		"\x3\x2\x2\x2\x140\x135\x3\x2\x2\x2\x140\x136\x3\x2\x2\x2\x140\x137\x3"+
		"\x2\x2\x2\x140\x138\x3\x2\x2\x2\x140\x139\x3\x2\x2\x2\x140\x13A\x3\x2"+
		"\x2\x2\x140\x13B\x3\x2\x2\x2\x140\x13C\x3\x2\x2\x2\x140\x13D\x3\x2\x2"+
		"\x2\x140\x13E\x3\x2\x2\x2\x140\x13F\x3\x2\x2\x2\x141\xF\x3\x2\x2\x2\x142"+
		"\x149\a\x62\x2\x2\x143\x149\a\x61\x2\x2\x144\x149\a`\x2\x2\x145\x149\x5"+
		"\x6\x4\x2\x146\x149\x5\b\x5\x2\x147\x149\x5\x4\x3\x2\x148\x142\x3\x2\x2"+
		"\x2\x148\x143\x3\x2\x2\x2\x148\x144\x3\x2\x2\x2\x148\x145\x3\x2\x2\x2"+
		"\x148\x146\x3\x2\x2\x2\x148\x147\x3\x2\x2\x2\x149\x11\x3\x2\x2\x2\x14A"+
		"\x14B\aH\x2\x2\x14B\x13\x3\x2\x2\x2\x14C\x14D\a\x17\x2\x2\x14D\x15\x3"+
		"\x2\x2\x2\x14E\x14F\a\x46\x2\x2\x14F\x17\x3\x2\x2\x2\x150\x151\a\x1A\x2"+
		"\x2\x151\x19\x3\x2\x2\x2\x152\x153\a<\x2\x2\x153\x1B\x3\x2\x2\x2\x154"+
		"\x155\a\"\x2\x2\x155\x1D\x3\x2\x2\x2\x156\x157\aW\x2\x2\x157\x1F\x3\x2"+
		"\x2\x2\x158\x159\a\x18\x2\x2\x159!\x3\x2\x2\x2\x15A\x15B\a!\x2\x2\x15B"+
		"#\x3\x2\x2\x2\x15C\x15D\a\a\x2\x2\x15D%\x3\x2\x2\x2\x15E\x15F\a\x30\x2"+
		"\x2\x15F\'\x3\x2\x2\x2\x160\x161\a*\x2\x2\x161)\x3\x2\x2\x2\x162\x163"+
		"\a=\x2\x2\x163+\x3\x2\x2\x2\x164\x165\aO\x2\x2\x165-\x3\x2\x2\x2\x166"+
		"\x167\a\x43\x2\x2\x167/\x3\x2\x2\x2\x168\x169\a\x12\x2\x2\x169\x31\x3"+
		"\x2\x2\x2\x16A\x16B\a\x1E\x2\x2\x16B\x33\x3\x2\x2\x2\x16C\x16D\a,\x2\x2"+
		"\x16D\x35\x3\x2\x2\x2\x16E\x16F\a.\x2\x2\x16F\x37\x3\x2\x2\x2\x170\x171"+
		"\a&\x2\x2\x171\x39\x3\x2\x2\x2\x172\x173\a\x16\x2\x2\x173;\x3\x2\x2\x2"+
		"\x174\x175\a\\\x2\x2\x175=\x3\x2\x2\x2\x176\x177\a$\x2\x2\x177?\x3\x2"+
		"\x2\x2\x178\x179\a?\x2\x2\x179\x41\x3\x2\x2\x2\x17A\x17B\aV\x2\x2\x17B"+
		"\x43\x3\x2\x2\x2\x17C\x17D\aT\x2\x2\x17D\x45\x3\x2\x2\x2\x17E\x17F\aY"+
		"\x2\x2\x17FG\x3\x2\x2\x2\x180\x181\a\x45\x2\x2\x181I\x3\x2\x2\x2\x182"+
		"\x183\aK\x2\x2\x183K\x3\x2\x2\x2\x184\x185\aX\x2\x2\x185M\x3\x2\x2\x2"+
		"\x186\x187\a\x35\x2\x2\x187O\x3\x2\x2\x2\x188\x189\a#\x2\x2\x189Q\x3\x2"+
		"\x2\x2\x18A\x18B\a\v\x2\x2\x18BS\x3\x2\x2\x2\x18C\x18D\a/\x2\x2\x18DU"+
		"\x3\x2\x2\x2\x18E\x18F\aN\x2\x2\x18FW\x3\x2\x2\x2\x190\x191\a\x1D\x2\x2"+
		"\x191Y\x3\x2\x2\x2\x192\x193\a)\x2\x2\x193[\x3\x2\x2\x2\x194\x195\a\x1C"+
		"\x2\x2\x195]\x3\x2\x2\x2\x196\x197\a\n\x2\x2\x197_\x3\x2\x2\x2\x198\x199"+
		"\a\x5\x2\x2\x199\x61\x3\x2\x2\x2\x19A\x19B\aZ\x2\x2\x19B\x63\x3\x2\x2"+
		"\x2\x19C\x19D\a\xE\x2\x2\x19D\x65\x3\x2\x2\x2\x19E\x19F\aP\x2\x2\x19F"+
		"g\x3\x2\x2\x2\x1A0\x1A1\a\b\x2\x2\x1A1i\x3\x2\x2\x2\x1A2\x1A3\a\x13\x2"+
		"\x2\x1A3k\x3\x2\x2\x2\x1A4\x1A5\a\xF\x2\x2\x1A5m\x3\x2\x2\x2\x1A6\x1A7"+
		"\a\x38\x2\x2\x1A7o\x3\x2\x2\x2\x1A8\x1A9\a\x3\x2\x2\x1A9q\x3\x2\x2\x2"+
		"\x1AA\x1AB\a\x36\x2\x2\x1ABs\x3\x2\x2\x2\x1AC\x1AD\a[\x2\x2\x1ADu\x3\x2"+
		"\x2\x2\x1AE\x1AF\a\x14\x2\x2\x1AFw\x3\x2\x2\x2\x1B0\x1B1\a\x39\x2\x2\x1B1"+
		"y\x3\x2\x2\x2\x1B2\x1B3\a\x31\x2\x2\x1B3{\x3\x2\x2\x2\x1B4\x1B5\a\x6\x2"+
		"\x2\x1B5}\x3\x2\x2\x2\x1B6\x1B7\a\t\x2\x2\x1B7\x7F\x3\x2\x2\x2\x1B8\x1B9"+
		"\aQ\x2\x2\x1B9\x81\x3\x2\x2\x2\x1BA\x1BB\aU\x2\x2\x1BB\x83\x3\x2\x2\x2"+
		"\x1BC\x1BD\a-\x2\x2\x1BD\x85\x3\x2\x2\x2\x1BE\x1BF\a\x33\x2\x2\x1BF\x87"+
		"\x3\x2\x2\x2\x1C0\x1C1\a\x19\x2\x2\x1C1\x89\x3\x2\x2\x2\x1C2\x1C3\aM\x2"+
		"\x2\x1C3\x8B\x3\x2\x2\x2\x1C4\x1C5\a\x10\x2\x2\x1C5\x8D\x3\x2\x2\x2\x1C6"+
		"\x1C7\a\x41\x2\x2\x1C7\x8F\x3\x2\x2\x2\x1C8\x1C9\aI\x2\x2\x1C9\x91\x3"+
		"\x2\x2\x2\x1CA\x1CB\a \x2\x2\x1CB\x93\x3\x2\x2\x2\x1CC\x1CD\aG\x2\x2\x1CD"+
		"\x95\x3\x2\x2\x2\x1CE\x1CF\a\x11\x2\x2\x1CF\x97\x3\x2\x2\x2\x1D0\x1D1"+
		"\aR\x2\x2\x1D1\x99\x3\x2\x2\x2\x1D2\x1D3\a+\x2\x2\x1D3\x9B\x3\x2\x2\x2"+
		"\x1D4\x1D5\a:\x2\x2\x1D5\x9D\x3\x2\x2\x2\x1D6\x1D7\a\'\x2\x2\x1D7\x9F"+
		"\x3\x2\x2\x2\x1D8\x1D9\a\x4\x2\x2\x1D9\xA1\x3\x2\x2\x2\x1DA\x1DB\a(\x2"+
		"\x2\x1DB\xA3\x3\x2\x2\x2\x1DC\x1DD\aJ\x2\x2\x1DD\xA5\x3\x2\x2\x2\x1DE"+
		"\x1DF\a\f\x2\x2\x1DF\xA7\x3\x2\x2\x2\x1E0\x1E1\a]\x2\x2\x1E1\xA9\x3\x2"+
		"\x2\x2\x1E2\x1E3\a\x42\x2\x2\x1E3\xAB\x3\x2\x2\x2\x1E4\x1E5\a>\x2\x2\x1E5"+
		"\xAD\x3\x2\x2\x2\x1E6\x1E7\a\x44\x2\x2\x1E7\xAF\x3\x2\x2\x2\x1E8\x1E9"+
		"\a\r\x2\x2\x1E9\xB1\x3\x2\x2\x2\x1EA\x1EB\a\x34\x2\x2\x1EB\xB3\x3\x2\x2"+
		"\x2\x1EC\x1ED\a;\x2\x2\x1ED\xB5\x3\x2\x2\x2\x1EE\x1EF\a\x1B\x2\x2\x1EF"+
		"\xB7\x3\x2\x2\x2\x1F0\x1F1\aL\x2\x2\x1F1\xB9\x3\x2\x2\x2\t\xC1\xC8\xD4"+
		"\xDB\x125\x140\x148";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace AntlrTest
