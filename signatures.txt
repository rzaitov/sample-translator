cancelAllCGImageGeneration
public override void CancelAllCGImageGeneration
copyCGImageAtTime:actualTime:error:
public override CGImage CopyCGImageAtTime
assetImageGeneratorWithAsset:
public AVAssetImageGenerator FromAsset
generateCGImagesAsynchronouslyForTimes:completionHandler:
public override void GenerateCGImagesAsynchronously
apertureMode
/* property */ public override NSString get_ApertureMode
setApertureMode:
/* property */ public override void set_ApertureMode
appliesPreferredTrackTransform
/* property */ public override bool get_AppliesPreferredTrackTransform
setAppliesPreferredTrackTransform:
/* property */ public override void set_AppliesPreferredTrackTransform
asset
/* property */ public override AVAsset get_Asset
customVideoCompositor
/* property */ public override IAVVideoCompositing get_CustomVideoCompositor
maximumSize
/* property */ public override CGSize get_MaximumSize
setMaximumSize:
/* property */ public override void set_MaximumSize
requestedTimeToleranceAfter
/* property */ public override CMTime get_RequestedTimeToleranceAfter
setRequestedTimeToleranceAfter:
/* property */ public override void set_RequestedTimeToleranceAfter
requestedTimeToleranceBefore
/* property */ public override CMTime get_RequestedTimeToleranceBefore
setRequestedTimeToleranceBefore:
/* property */ public override void set_RequestedTimeToleranceBefore
videoComposition
/* property */ public override AVVideoComposition get_VideoComposition
setVideoComposition:
/* property */ public override void set_VideoComposition
assetReaderVideoCompositionOutputWithVideoTracks:videoSettings:
AVAssetReaderVideoCompositionOutput WeakFromTracks
videoTracks
/* property */ public override AVAssetTrack[] get_VideoTracks
videoSettings
/* property */ public override NSDictionary get_WeakVideoSettings
respondWithData:
public override void Respond
currentOffset
/* property */ public override Int64 get_CurrentOffset
requestedLength
/* property */ public override nint get_RequestedLength
requestedOffset
/* property */ public override Int64 get_RequestedOffset
copyWithZone:
public override NSObject Copy
mutableCopyWithZone:
public override NSObject MutableCopy
audioBufferList
/* property */ override IntPtr get_audioBufferList
format
/* property */ public override MTLVertexFormat get_Format
mutableAudioBufferList
/* property */ override IntPtr get_mutableAudioBufferList
isEqual:
public override bool IsEqual
layout
/* property */ override IntPtr get__Layout
channelCount
/* property */ public override UInt32 get_ChannelCount
layoutTag
/* property */ public override UInt32 get_LayoutTag
channelLayout
/* property */ public override AVAudioChannelLayout get_ChannelLayout
commonFormat
/* property */ public override AVAudioCommonFormat get_CommonFormat
isInterleaved
/* property */ public override bool get_Interleaved
sampleRate
/* property */ public override Double get_SampleRate
isStandard
/* property */ public override bool get_Standard
streamDescription
/* property */ public override AudioStreamBasicDescription get_StreamDescription
settings
/* property */ public override NSDictionary get_WeakSettings
averagePowerForChannel:
public override Single AveragePower
pause
public override void Pause
peakPowerForChannel:
public override Single PeakPower
play
public override void Play
playAtTime:
public override void PlayAtTime
prepareToPlay
public override void PrepareToPlay
stop
public override void Stop
updateMeters
public override void UpdateMeters
channelAssignments
/* property */ public override AVAudioSessionChannelDescription[] get_ChannelAssignments
setChannelAssignments:
/* property */ public override void set_ChannelAssignments
currentTime
/* property */ public override CMTime get_CurrentTime
setCurrentTime:
/* property */ public override void set_CurrentTime
data
/* property */ public override NSData get_Data
deviceCurrentTime
/* property */ public override Double get_DeviceCurrentTime
duration
/* property */ public override nfloat get_Duration
enableRate
/* property */ public override bool get_EnableRate
setEnableRate:
/* property */ public override void set_EnableRate
isMeteringEnabled
/* property */ public override bool get_MeteringEnabled
setMeteringEnabled:
/* property */ public override void set_MeteringEnabled
numberOfChannels
/* property */ public override nuint get_NumberOfChannels
numberOfLoops
/* property */ public override nint get_NumberOfLoops
setNumberOfLoops:
/* property */ public override void set_NumberOfLoops
pan
/* property */ public override Single get_Pan
setPan:
/* property */ public override void set_Pan
isPlaying
/* property */ public override bool get_Playing
rate
/* property */ public override Single get_Rate
setRate:
/* property */ public override void set_Rate
url
/* property */ public override NSUrl get_Url
volume
/* property */ public override Single get_Volume
setVolume:
/* property */ public override void set_Volume
delegate
/* property */ public override NSObject get_WeakDelegate
setDelegate:
/* property */ public override void set_WeakDelegate
deleteRecording
public override bool DeleteRecording
initWithURL:settings:error:
override IntPtr InitWithUrl
prepareToRecord
public override bool PrepareToRecord
record
public override bool Record
recordAtTime:
public override bool RecordAt
recordAtTime:forDuration:
public override bool RecordAt
recordForDuration:
public override bool RecordFor
isRecording
/* property */ public override bool get_Recording
preferredInputNumberOfChannels
public override nint GetPreferredInputNumberOfChannels
preferredOutputNumberOfChannels
public override nint GetPreferredOutputNumberOfChannels
overrideOutputAudioPort:error:
public override bool OverrideOutputAudioPort
requestRecordPermission:
public override void RequestRecordPermission
setActive:error:
public override bool SetActive
setActive:withFlags:error:
public override bool SetActive
setActive:withOptions:error:
public override bool SetActive
setCategory:error:
public override bool SetCategory
setCategory:withOptions:error:
public override bool SetCategory
setInputDataSource:error:
public override bool SetInputDataSource
setInputGain:error:
public override bool SetInputGain
setMode:error:
public override bool SetMode
setOutputDataSource:error:
public override bool SetOutputDataSource
setPreferredHardwareSampleRate:error:
public override bool SetPreferredHardwareSampleRate
setPreferredInput:error:
public override bool SetPreferredInput
setPreferredInputNumberOfChannels:error:
public override bool SetPreferredInputNumberOfChannels
setPreferredIOBufferDuration:error:
public override bool SetPreferredIOBufferDuration
setPreferredOutputNumberOfChannels:error:
public override bool SetPreferredOutputNumberOfChannels
setPreferredSampleRate:error:
public override bool SetPreferredSampleRate
sharedInstance
public AVAudioSession SharedInstance
availableInputs
/* property */ public override AVAudioSessionPortDescription[] get_AvailableInputs
category
/* property */ public override string get_Category
categoryOptions
/* property */ public override AVAudioSessionCategoryOptions get_CategoryOptions
currentHardwareInputNumberOfChannels
/* property */ public override nint get_CurrentHardwareInputNumberOfChannels
currentHardwareOutputNumberOfChannels
/* property */ public override nint get_CurrentHardwareOutputNumberOfChannels
currentHardwareSampleRate
/* property */ public override Double get_CurrentHardwareSampleRate
currentRoute
/* property */ public override AVAudioSessionRouteDescription get_CurrentRoute
isInputAvailable
/* property */ public override bool get_InputAvailable
inputDataSource
/* property */ public override AVAudioSessionDataSourceDescription get_InputDataSource
inputDataSources
/* property */ public override AVAudioSessionDataSourceDescription[] get_InputDataSources
inputGain
/* property */ public override Single get_InputGain
isInputGainSettable
/* property */ public override bool get_InputGainSettable
inputIsAvailable
/* property */ public override bool get_InputIsAvailable
inputLatency
/* property */ public override Double get_InputLatency
inputNumberOfChannels
/* property */ public override nint get_InputNumberOfChannels
IOBufferDuration
/* property */ public override Double get_IOBufferDuration
maximumInputNumberOfChannels
/* property */ public override nint get_MaximumInputNumberOfChannels
maximumOutputNumberOfChannels
/* property */ public override nint get_MaximumOutputNumberOfChannels
mode
/* property */ public override GLKFogMode get_Mode
isOtherAudioPlaying
/* property */ public override bool get_OtherAudioPlaying
outputDataSource
/* property */ public override AVAudioSessionDataSourceDescription get_OutputDataSource
outputDataSources
/* property */ public override AVAudioSessionDataSourceDescription[] get_OutputDataSources
outputLatency
/* property */ public override Double get_OutputLatency
outputNumberOfChannels
/* property */ public override nint get_OutputNumberOfChannels
outputVolume
/* property */ public override Single get_OutputVolume
preferredHardwareSampleRate
/* property */ public override Double get_PreferredHardwareSampleRate
preferredInput
/* property */ public override AVAudioSessionPortDescription get_PreferredInput
preferredIOBufferDuration
/* property */ public override Double get_PreferredIOBufferDuration
preferredSampleRate
/* property */ public override Double get_PreferredSampleRate
recordPermission
/* property */ public override AVAudioSessionRecordPermission get_RecordPermission
secondaryAudioShouldBeSilencedHint
/* property */ public override bool get_SecondaryAudioShouldBeSilencedHint
setPreferredPolarPattern:error:
override bool SetPreferredPolarPattern_
dataSourceID
/* property */ public override NSNumber get_DataSourceID
dataSourceName
/* property */ public override string get_DataSourceName
location
/* property */ public override nfloat get_Location
orientation
/* property */ public override UIPrintInfoOrientation get_Orientation
preferredPolarPattern
/* property */ override NSString get_PreferredPolarPattern_
selectedPolarPattern
/* property */ override NSString get_SelectedPolarPattern_
supportedPolarPatterns
/* property */ override NSString[] get_SupportedPolarPatterns_
isVideoMaxFrameDurationSupported
/* property */ override bool get__SupportsVideoMaxFrameDuration
isVideoMinFrameDurationSupported
/* property */ override bool get__SupportsVideoMinFrameDuration
isActive
/* property */ public override bool get_Active
activeVideoStabilizationMode
/* property */ public override AVCaptureVideoStabilizationMode get_ActiveVideoStabilizationMode
automaticallyAdjustsVideoMirroring
/* property */ public override bool get_AutomaticallyAdjustsVideoMirroring
setAutomaticallyAdjustsVideoMirroring:
/* property */ public override void set_AutomaticallyAdjustsVideoMirroring
audioChannels
/* property */ public override AVCaptureAudioChannel[] get_AvailableAudioChannels
isEnabled
/* property */ public override bool get_Enabled
setEnabled:
public override void SetEnabled
enablesVideoStabilizationWhenAvailable
/* property */ public override bool get_EnablesVideoStabilizationWhenAvailable
setEnablesVideoStabilizationWhenAvailable:
/* property */ public override void set_EnablesVideoStabilizationWhenAvailable
inputPorts
/* property */ public override AVCaptureInputPort[] get_InputPorts
output
/* property */ public override AVCaptureOutput get_Output
preferredVideoStabilizationMode
/* property */ public override AVCaptureVideoStabilizationMode get_PreferredVideoStabilizationMode
setPreferredVideoStabilizationMode:
/* property */ public override void set_PreferredVideoStabilizationMode
isVideoMirroringSupported
/* property */ public override bool get_SupportsVideoMirroring
isVideoOrientationSupported
/* property */ public override bool get_SupportsVideoOrientation
isVideoStabilizationSupported
/* property */ public override bool get_VideoStabilizationSupported
videoMaxFrameDuration
/* property */ public override CMTime get_VideoMaxFrameDuration
setVideoMaxFrameDuration:
/* property */ public override void set_VideoMaxFrameDuration
videoMaxScaleAndCropFactor
/* property */ public override nfloat get_VideoMaxScaleAndCropFactor
videoMinFrameDuration
/* property */ public override CMTime get_VideoMinFrameDuration
setVideoMinFrameDuration:
/* property */ public override void set_VideoMinFrameDuration
isVideoMirrored
/* property */ public override bool get_VideoMirrored
setVideoMirrored:
/* property */ public override void set_VideoMirrored
videoOrientation
/* property */ public override AVCaptureVideoOrientation get_VideoOrientation
setVideoOrientation:
/* property */ public override void set_VideoOrientation
videoPreviewLayer
/* property */ public override AVCaptureVideoPreviewLayer get_VideoPreviewLayer
videoScaleAndCropFactor
/* property */ public override nfloat get_VideoScaleAndCropFactor
setVideoScaleAndCropFactor:
/* property */ public override void set_VideoScaleAndCropFactor
isVideoStabilizationEnabled
/* property */ public override bool get_VideoStabilizationEnabled
deviceInputWithDevice:error:
public AVCaptureDeviceInput FromDevice
device
/* property */ public override IMTLDevice get_Device
startRecordingToOutputFileURL:recordingDelegate:
public override void StartRecordingToOutputFile
stopRecording
public override void StopRecording
maxRecordedDuration
/* property */ public override CMTime get_MaxRecordedDuration
setMaxRecordedDuration:
/* property */ public override void set_MaxRecordedDuration
maxRecordedFileSize
/* property */ public override Int64 get_MaxRecordedFileSize
setMaxRecordedFileSize:
/* property */ public override void set_MaxRecordedFileSize
minFreeDiskSpaceLimit
/* property */ public override Int64 get_MinFreeDiskSpaceLimit
setMinFreeDiskSpaceLimit:
/* property */ public override void set_MinFreeDiskSpaceLimit
outputFileURL
/* property */ public override NSUrl get_OutputFileURL
recordedDuration
/* property */ public override CMTime get_RecordedDuration
recordedFileSize
/* property */ public override Int64 get_RecordedFileSize
setMetadataObjectsDelegate:queue:
public override void SetDelegate
metadataObjectsCallbackQueue
/* property */ public override DispatchQueue get_CallbackQueue
metadataObjectsDelegate
/* property */ public override IAVCaptureMetadataOutputObjectsDelegate get_Delegate
rectOfInterest
/* property */ public override CGRect get_RectOfInterest
setRectOfInterest:
/* property */ public override void set_RectOfInterest
availableMetadataObjectTypes
/* property */ public override NSString[] get_WeakAvailableMetadataObjectTypes
metadataObjectTypes
/* property */ public override NSString[] get_WeakMetadataObjectTypes
setMetadataObjectTypes:
/* property */ public override void set_WeakMetadataObjectTypes
playerLayerWithPlayer:
public AVPlayerLayer FromPlayer
player
/* property */ public override GKPlayer get_Player
setPlayer:
/* property */ public override void set_Player
isReadyForDisplay
/* property */ public override bool get_ReadyForDisplay
videoRect
/* property */ public override CGRect get_VideoRect
videoGravity
/* property */ public override string get_VideoGravity
setVideoGravity:
/* property */ public override void set_VideoGravity
captureDevicePointOfInterestForPoint:
public override CGPoint CaptureDevicePointOfInterestForPoint
layerWithSessionWithNoConnection:
public AVCaptureVideoPreviewLayer CreateWithNoConnection
layerWithSession:
public AVCaptureVideoPreviewLayer FromSession
transformedMetadataObjectForMetadataObject:
public override AVMetadataObject GetTransformedMetadataObject
rectForMetadataOutputRectOfInterest:
public override CGRect GetRectForMetadataOutputRectOfInterest
metadataOutputRectOfInterestForRect:
public override CGRect GetMetadataOutputRectOfInterestForRect
pointForCaptureDevicePointOfInterest:
public override CGPoint PointForCaptureDevicePointOfInterest
setSessionWithNoConnection:
public override void SetSessionWithNoConnection
automaticallyAdjustsMirroring
/* property */ public override bool get_AutomaticallyAdjustsMirroring
setAutomaticallyAdjustsMirroring:
/* property */ public override void set_AutomaticallyAdjustsMirroring
connection
/* property */ public override NEVpnConnection get_Connection
isMirrored
/* property */ public override bool get_Mirrored
setMirrored:
/* property */ public override void set_Mirrored
isMirroringSupported
/* property */ public override bool get_MirroringSupported
setOrientation:
/* property */ public override void set_Orientation
isOrientationSupported
/* property */ public override bool get_OrientationSupported
session
/* property */ public override MCSession get_Session
setSession:
/* property */ public override void set_Session
addBoundaryTimeObserverForTimes:queue:usingBlock:
public override NSObject AddBoundaryTimeObserver
addPeriodicTimeObserverForInterval:queue:usingBlock:
public override NSObject AddPeriodicTimeObserver
cancelPendingPrerolls
public override void CancelPendingPrerolls
playerWithPlayerItem:
public AVPlayer FromPlayerItem
playerWithURL:
public AVPlayer FromUrl
mediaSelectionCriteriaForMediaCharacteristic:
public override AVPlayerMediaSelectionCriteria MediaSelectionCriteriaForMediaCharacteristic
prerollAtRate:completionHandler:
public override void Preroll
removeTimeObserver:
public override void RemoveTimeObserver
replaceCurrentItemWithPlayerItem:
public override void ReplaceCurrentItemWithPlayerItem
seekToTime:
public override void Seek
seekToTime:toleranceBefore:toleranceAfter:
public override void Seek
seekToTime:completionHandler:
public override void Seek
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
public override void Seek
seekToDate:
public override bool Seek
seekToDate:completionHandler:
public override bool Seek
setMediaSelectionCriteria:forMediaCharacteristic:
public override void SetMediaSelectionCriteria
setRate:time:atHostTime:
public override void SetRate
actionAtItemEnd
/* property */ public override AVPlayerActionAtItemEnd get_ActionAtItemEnd
setActionAtItemEnd:
/* property */ public override void set_ActionAtItemEnd
isAirPlayVideoActive
/* property */ public override bool get_AirPlayVideoActive
allowsAirPlayVideo
/* property */ public override bool get_AllowsAirPlayVideo
setAllowsAirPlayVideo:
/* property */ public override void set_AllowsAirPlayVideo
allowsExternalPlayback
/* property */ public override bool get_AllowsExternalPlayback
setAllowsExternalPlayback:
/* property */ public override void set_AllowsExternalPlayback
appliesMediaSelectionCriteriaAutomatically
/* property */ public override bool get_AppliesMediaSelectionCriteriaAutomatically
setAppliesMediaSelectionCriteriaAutomatically:
/* property */ public override void set_AppliesMediaSelectionCriteriaAutomatically
isClosedCaptionDisplayEnabled
/* property */ public override bool get_ClosedCaptionDisplayEnabled
setClosedCaptionDisplayEnabled:
/* property */ public override void set_ClosedCaptionDisplayEnabled
currentItem
/* property */ public override WKBackForwardListItem get_CurrentItem
error
/* property */ public override NSError get_Error
isExternalPlaybackActive
/* property */ public override bool get_ExternalPlaybackActive
masterClock
/* property */ public override CMClock get_MasterClock
setMasterClock:
/* property */ public override void set_MasterClock
isMuted
/* property */ public override bool get_Muted
setMuted:
/* property */ public override void set_Muted
outputObscuredDueToInsufficientExternalProtection
/* property */ public override bool get_OutputObscuredDueToInsufficientExternalProtection
status
/* property */ public override NKIssueContentStatus get_Status
usesAirPlayVideoWhileAirPlayScreenIsActive
/* property */ public override bool get_UsesAirPlayVideoWhileAirPlayScreenIsActive
setUsesAirPlayVideoWhileAirPlayScreenIsActive:
/* property */ public override void set_UsesAirPlayVideoWhileAirPlayScreenIsActive
usesExternalPlaybackWhileExternalScreenIsActive
/* property */ public override bool get_UsesExternalPlaybackWhileExternalScreenIsActive
setUsesExternalPlaybackWhileExternalScreenIsActive:
/* property */ public override void set_UsesExternalPlaybackWhileExternalScreenIsActive
externalPlaybackVideoGravity
/* property */ protected override NSString get_WeakExternalPlaybackVideoGravity
setExternalPlaybackVideoGravity:
/* property */ protected override void set_WeakExternalPlaybackVideoGravity
metadataItemFilterForSharing
/* property */ public AVMetadataItemFilter get_ForSharing
bounds
/* property */ public override CGRect get_Bounds
time
/* property */ public override CMTime get_Time
type
/* property */ public override UIInterpolatingMotionEffectType get_Type
stringValue
/* property */ public override string get_StringValue
corners
/* property */ public override NSDictionary[] get_WeakCorners
hasNewPixelBufferForItemTime:
public override bool HasNewPixelBufferForItemTime
requestNotificationOfMediaDataChangeWithAdvanceInterval:
public override void RequestNotificationOfMediaDataChange
setDelegate:queue:
public override void SetDelegate
copyPixelBufferForItemTime:itemTimeForDisplay:
protected override IntPtr WeakCopyPixelBuffer
delegateQueue
/* property */ public override NSOperationQueue get_DelegateQueue
contentOverlayView
/* property */ public override UIView get_ContentOverlayView
showsPlaybackControls
/* property */ public override bool get_ShowsPlaybackControls
setShowsPlaybackControls:
/* property */ public override void set_ShowsPlaybackControls
videoBounds
/* property */ public override CGRect get_VideoBounds
objectForKey:
public override NSObject ObjectForKey
setObject:forKey:
public override void SetObjectforKey
allKeys
/* property */ public override NSObject[] get_Keys
allTokens
public override string[] AllTokens
changedKeys
public override string[] ChangedKeys
encodeSystemFieldsWithCoder:
public override void EncodeSystemFields
encodeWithCoder:
public override void EncodeTo
creationDate
/* property */ public override NSDate get_CreationDate
creatorUserRecordID
/* property */ public override CKRecordID get_CreatorUserRecordId
recordID
/* property */ public override CKRecordID get_RecordId
lastModifiedUserRecordID
/* property */ public override CKRecordID get_LastModifiedUserRecordId
modificationDate
/* property */ public override NSDate get_ModificationDate
recordChangeTag
/* property */ public override string get_RecordChangeTag
recordType
/* property */ public override string get_RecordType
animationWithKeyPath:
public CAPropertyAnimation FromKeyPath
byValue
/* property */ public override NSObject get_By
setByValue:
/* property */ public override void set_By
fromValue
/* property */ public override NSObject get_From
setFromValue:
/* property */ public override void set_From
toValue
/* property */ public override NSObject get_To
setToValue:
/* property */ public override void set_To
animation
/* property */ public override CAAnimation get_Animation
defaultValueForKey:
public NSObject DefaultValueForKey
didChangeValueForKey:
public override void DidChangeValueForKey
runActionForKey:object:arguments:
public override void RunAction
shouldArchiveValueForKey:
public override bool ShouldArchiveValueForKey
willChangeValueForKey:
public override void WillChangeValueForKey
animationEvents
/* property */ public override SCNAnimationEvent[] get_AnimationEvents
setAnimationEvents:
/* property */ public override void set_AnimationEvents
autoreverses
/* property */ public override bool get_AutoReverses
setAutoreverses:
/* property */ public override void set_AutoReverses
beginTime
/* property */ public override Double get_BeginTime
setBeginTime:
/* property */ public override void set_BeginTime
setDuration:
/* property */ public override void set_DurationInSeconds
fadeInDuration
/* property */ public override nfloat get_FadeInDuration
setFadeInDuration:
/* property */ public override void set_FadeInDuration
fadeOutDuration
/* property */ public override nfloat get_FadeOutDuration
setFadeOutDuration:
/* property */ public override void set_FadeOutDuration
fillMode
/* property */ public override string get_FillMode
setFillMode:
/* property */ public override void set_FillMode
isRemovedOnCompletion
/* property */ public override bool get_RemovedOnCompletion
setRemovedOnCompletion:
/* property */ public override void set_RemovedOnCompletion
repeatCount
/* property */ public override Single get_RepeatCount
setRepeatCount:
/* property */ public override void set_RepeatCount
repeatDuration
/* property */ public override Double get_RepeatDuration
setRepeatDuration:
/* property */ public override void set_RepeatDuration
speed
/* property */ public override nfloat get_Speed
setSpeed:
/* property */ public override void set_Speed
timeOffset
/* property */ public override Double get_TimeOffset
setTimeOffset:
/* property */ public override void set_TimeOffset
timingFunction
/* property */ public override CAMediaTimingFunction get_TimingFunction
setTimingFunction:
public override void SetTimingFunction
usesSceneTimeBase
/* property */ public override bool get_UsesSceneTimeBase
setUsesSceneTimeBase:
/* property */ public override void set_UsesSceneTimeBase
layer
public CALayer Create
colors
/* property */ public override UIColor[] get_Colors
setColors:
/* property */ public override void set_Colors
endPoint
/* property */ public override CGPoint get_EndPoint
setEndPoint:
/* property */ public override void set_EndPoint
locations
/* property */ public override NSNumber[] get_Locations
setLocations:
/* property */ public override void set_Locations
startPoint
/* property */ public override CGPoint get_StartPoint
setStartPoint:
/* property */ public override void set_StartPoint
setType:
/* property */ public override void set_Type
calculationMode
/* property */ public override SCNMorpherCalculationMode get_CalculationMode
setCalculationMode:
/* property */ public override void set_CalculationMode
biasValues
/* property */ public override NSNumber[] get_BiasValues
setBiasValues:
/* property */ public override void set_BiasValues
continuityValues
/* property */ public override NSNumber[] get_ContinuityValues
setContinuityValues:
/* property */ public override void set_ContinuityValues
keyTimes
/* property */ public override NSNumber[] get_KeyTimes
setKeyTimes:
/* property */ public override void set_KeyTimes
path
/* property */ public override CGPath get_Path
setPath:
/* property */ public override void set_Path
rotationMode
/* property */ public override string get_RotationMode
setRotationMode:
/* property */ public override void set_RotationMode
tensionValues
/* property */ public override NSNumber[] get_TensionValues
setTensionValues:
/* property */ public override void set_TensionValues
timingFunctions
/* property */ public override CAMediaTimingFunction[] get_TimingFunctions
setTimingFunctions:
/* property */ public override void set_TimingFunctions
values
/* property */ public override NSObject[] get_Values
setValues:
/* property */ public override void set_Values
addToRunLoop:forMode:
public override void AddToRunLoop
displayLinkWithTarget:selector:
public override CADisplayLink CreateDisplayLink
invalidate
public override void Invalidate
removeFromRunLoop:forMode:
public override void RemoveFromRunLoop
frameInterval
/* property */ public override nint get_FrameInterval
setFrameInterval:
/* property */ public override void set_FrameInterval
isPaused
/* property */ public override bool get_Paused
setPaused:
/* property */ public override void set_Paused
timestamp
/* property */ public override Double get_Timestamp
actionForKey:
public override SCNAction GetAction
addAnimation:forKey:
public override void AddAnimation
addSublayer:
public override void AddSublayer
animationForKey:
public override CAAnimation GetAnimation
containsPoint:
public override bool ContainsPoint
convertPoint:fromLayer:
public override CGPoint ConvertPointFromLayer
convertPoint:toLayer:
public override CGPoint ConvertPointToLayer
convertRect:fromLayer:
public override CGRect ConvertRectFromLayer
convertRect:toLayer:
public override CGRect ConvertRectToLayer
convertTime:fromLayer:
public override Double ConvertTimeFromLayer
convertTime:toLayer:
public override Double ConvertTimeToLayer
defaultActionForKey:
public NSObject DefaultActionForKey
display
public override void Display
displayIfNeeded
public override void DisplayIfNeeded
drawInContext:
public override void DrawInContext
hitTest:
public override CALayer HitTest
insertSublayer:atIndex:
public override void InsertSublayer
insertSublayer:above:
public override void InsertSublayerAbove
insertSublayer:below:
public override void InsertSublayerBelow
layoutIfNeeded
public override void LayoutIfNeeded
layoutSublayers
public override void LayoutSublayers
needsDisplayForKey:
public bool NeedsDisplayForKey
needsLayout
public override bool NeedsLayout
preferredFrameSize
public override CGSize PreferredFrameSize
removeAllAnimations
public override void RemoveAllAnimations
removeAnimationForKey:
public override void RemoveAnimation
removeFromSuperlayer
public override void RemoveFromSuperLayer
renderInContext:
public override void RenderInContext
replaceSublayer:with:
public override void ReplaceSublayer
scrollPoint:
public override void ScrollPoint
scrollRectToVisible:
public override void ScrollRectToVisible
setNeedsDisplay
public override void SetNeedsDisplay
setNeedsDisplayInRect:
public override void SetNeedsDisplayInRect
setNeedsLayout
public override void SetNeedsLayout
actions
/* property */ public override UIAlertAction[] get_Actions
setActions:
/* property */ public override void set_Actions
affineTransform
/* property */ public override CGAffineTransform get_AffineTransform
setAffineTransform:
/* property */ public override void set_AffineTransform
allowsEdgeAntialiasing
/* property */ public override bool get_AllowsEdgeAntialiasing
setAllowsEdgeAntialiasing:
/* property */ public override void set_AllowsEdgeAntialiasing
allowsGroupOpacity
/* property */ public override bool get_AllowsGroupOpacity
setAllowsGroupOpacity:
/* property */ public override void set_AllowsGroupOpacity
anchorPoint
/* property */ public override CGPoint get_AnchorPoint
setAnchorPoint:
/* property */ public override void set_AnchorPoint
anchorPointZ
/* property */ public override nfloat get_AnchorPointZ
setAnchorPointZ:
/* property */ public override void set_AnchorPointZ
animationKeys
public override NSString[] GetAnimationKeys
backgroundColor
/* property */ public override UIColor get_BackgroundColor
setBackgroundColor:
public override void SetBackgroundColor
backgroundFilters
/* property */ public override CIFilter[] get_BackgroundFilters
setBackgroundFilters:
/* property */ public override void set_BackgroundFilters
borderColor
/* property */ public override NSObject get_BorderColor
setBorderColor:
/* property */ public override void set_BorderColor
borderWidth
/* property */ public override nfloat get_BorderWidth
setBorderWidth:
/* property */ public override void set_BorderWidth
setBounds:
/* property */ public override void set_Bounds
compositingFilter
/* property */ public override NSObject get_CompositingFilter
setCompositingFilter:
/* property */ public override void set_CompositingFilter
contents
/* property */ public override NSData get_Contents
setContents:
/* property */ public override void set_Contents
contentsAreFlipped
/* property */ public override bool get_ContentsAreFlipped
contentsCenter
/* property */ public override CGRect get_ContentsCenter
setContentsCenter:
/* property */ public override void set_ContentsCenter
contentsGravity
/* property */ public override string get_ContentsGravity
setContentsGravity:
/* property */ public override void set_ContentsGravity
contentsRect
/* property */ public override CGRect get_ContentsRect
setContentsRect:
/* property */ public override void set_ContentsRect
contentsScale
/* property */ public override nfloat get_ContentsScale
setContentsScale:
/* property */ public override void set_ContentsScale
cornerRadius
/* property */ public override nfloat get_CornerRadius
setCornerRadius:
public override void SetCornerRadius
isDoubleSided
/* property */ public override bool get_DoubleSided
setDoubleSided:
/* property */ public override void set_DoubleSided
drawsAsynchronously
/* property */ public override bool get_DrawsAsynchronously
setDrawsAsynchronously:
/* property */ public override void set_DrawsAsynchronously
edgeAntialiasingMask
/* property */ public override CAEdgeAntialiasingMask get_EdgeAntialiasingMask
setEdgeAntialiasingMask:
/* property */ public override void set_EdgeAntialiasingMask
filters
/* property */ public override CIFilter[] get_Filters
setFilters:
/* property */ public override void set_Filters
frame
/* property */ public override CGRect get_Frame
setFrame:
/* property */ public override void set_Frame
isGeometryFlipped
/* property */ public override bool get_GeometryFlipped
setGeometryFlipped:
/* property */ public override void set_GeometryFlipped
isHidden
/* property */ public override bool get_Hidden
setHidden:
public override void SetHidden
magnificationFilter
/* property */ public override SCNFilterMode get_MagnificationFilter
setMagnificationFilter:
/* property */ public override void set_MagnificationFilter
mask
/* property */ public override CALayer get_Mask
setMask:
/* property */ public override void set_Mask
masksToBounds
/* property */ public override bool get_MasksToBounds
setMasksToBounds:
/* property */ public override void set_MasksToBounds
minificationFilter
/* property */ public override SCNFilterMode get_MinificationFilter
setMinificationFilter:
/* property */ public override void set_MinificationFilter
minificationFilterBias
/* property */ public override Single get_MinificationFilterBias
setMinificationFilterBias:
/* property */ public override void set_MinificationFilterBias
modelLayer
/* property */ public override CALayer get_ModelLayer
name
/* property */ public override string get_Name
setName:
/* property */ public override void set_Name
needsDisplay
/* property */ public override bool get_NeedsDisplay
needsDisplayOnBoundsChange
/* property */ public override bool get_NeedsDisplayOnBoundsChange
setNeedsDisplayOnBoundsChange:
/* property */ public override void set_NeedsDisplayOnBoundsChange
opacity
/* property */ public override nfloat get_Opacity
setOpacity:
/* property */ public override void set_Opacity
isOpaque
/* property */ public override bool get_Opaque
setOpaque:
/* property */ public override void set_Opaque
position
/* property */ public override Vector4 get_Position
setPosition:
/* property */ public override void set_Position
presentationLayer
/* property */ public override CALayer get_PresentationLayer
rasterizationScale
/* property */ public override nfloat get_RasterizationScale
setRasterizationScale:
/* property */ public override void set_RasterizationScale
shadowColor
/* property */ public override UIColor get_ShadowColor
setShadowColor:
/* property */ public override void set_ShadowColor
shadowOffset
/* property */ public override CGSize get_ShadowOffset
setShadowOffset:
/* property */ public override void set_ShadowOffset
shadowOpacity
/* property */ public override Single get_ShadowOpacity
setShadowOpacity:
/* property */ public override void set_ShadowOpacity
shadowPath
/* property */ public override CGPath get_ShadowPath
setShadowPath:
/* property */ public override void set_ShadowPath
shadowRadius
/* property */ public override nfloat get_ShadowRadius
setShadowRadius:
/* property */ public override void set_ShadowRadius
shouldRasterize
/* property */ public override bool get_ShouldRasterize
setShouldRasterize:
/* property */ public override void set_ShouldRasterize
style
/* property */ public override UITableViewRowActionStyle get_Style
setStyle:
/* property */ public override void set_Style
sublayers
/* property */ public override CALayer[] get_Sublayers
setSublayers:
/* property */ public override void set_Sublayers
sublayerTransform
/* property */ public override CATransform3D get_SublayerTransform
setSublayerTransform:
/* property */ public override void set_SublayerTransform
superlayer
/* property */ public override CALayer get_SuperLayer
transform
/* property */ public override CGAffineTransform get_Transform
setTransform:
/* property */ public override void set_Transform
visibleRect
/* property */ public override CGRect get_VisibleRect
zPosition
/* property */ public override nfloat get_ZPosition
setZPosition:
/* property */ public override void set_ZPosition
actionForLayer:forKey:
public override NSObject ActionForLayer
displayLayer:
public override void DisplayLayer
drawLayer:inContext:
public override void DrawLayer
layoutSublayersOfLayer:
public override void LayoutSublayersOfLayer
functionWithControlPoints::::
public CAMediaTimingFunction FromControlPoints
functionWithName:
public CAValueFunction FromName
getControlPointAtIndex:values:
override void GetControlPointAtIndex
font
/* property */ public override UIFont get_Font
setFont:
/* property */ public override void set_Font
alignmentMode
/* property */ public override string get_AlignmentMode
setAlignmentMode:
/* property */ public override void set_AlignmentMode
fontSize
/* property */ public override nfloat get_FontSize
setFontSize:
/* property */ public override void set_FontSize
foregroundColor
/* property */ public override CGColor get_ForegroundColor
setForegroundColor:
/* property */ public override void set_ForegroundColor
string
/* property */ public override string get_AnalysisString
setString:
/* property */ public override void set_AnalysisString
truncationMode
/* property */ public override string get_TruncationMode
setTruncationMode:
/* property */ public override void set_TruncationMode
isWrapped
/* property */ public override bool get_Wrapped
setWrapped:
/* property */ public override void set_Wrapped
UUID
/* property */ public override NSUuid get_Uuid
identifier
/* property */ public override string get_Identifier
UUIDWithCFUUID:
public CBUUID FromCFUUID
UUIDWithData:
public CBUUID FromData
UUIDWithNSUUID:
public CBUUID FromNSUuid
UUIDWithString:
public CBUUID FromString
UUIDString
public override string AsString
cancelPeripheralConnection:
public override void CancelPeripheralConnection
connectPeripheral:options:
public override void ConnectPeripheral
retrieveConnectedPeripherals
public override void RetrieveConnectedPeripherals
retrieveConnectedPeripheralsWithServices:
public override CBPeripheral[] RetrieveConnectedPeripherals
retrievePeripherals:
override void RetrievePeripherals
retrievePeripheralsWithIdentifiers:
public override CBPeripheral[] RetrievePeripheralsWithIdentifiers
scanForPeripheralsWithServices:options:
override void ScanForPeripherals
stopScan
public override void StopScan
state
/* property */ public override NSUrlSessionTaskState get_State
discoverCharacteristics:forService:
override void DiscoverCharacteristics
discoverDescriptorsForCharacteristic:
public override void DiscoverDescriptors
discoverIncludedServices:forService:
override void DiscoverIncludedServices
discoverServices:
override void DiscoverServices
readRSSI
public override void ReadRSSI
readValueForCharacteristic:
public override void ReadValue
readValueForDescriptor:
public override void ReadValue
setNotifyValue:forCharacteristic:
public override void SetNotifyValue
writeValue:forCharacteristic:type:
public override void WriteValue
writeValue:forDescriptor:
public override void WriteValue
isConnected
/* property */ public override bool get_Connected
RSSI
/* property */ public override NSNumber get_RSSI
services
/* property */ public override HMService[] get_Services
allowsExternalBinaryDataStorage
/* property */ public override bool get_AllowsExternalBinaryDataStorage
setAllowsExternalBinaryDataStorage:
/* property */ public override void set_AllowsExternalBinaryDataStorage
attributeType
/* property */ public override MTLDataType get_AttributeType
setAttributeType:
/* property */ public override void set_AttributeType
attributeValueClassName
/* property */ public override string get_AttributeValueClassName
setAttributeValueClassName:
/* property */ public override void set_AttributeValueClassName
defaultValue
/* property */ public override NSObject get_DefaultValue
setDefaultValue:
/* property */ public override void set_DefaultValue
valueTransformerName
/* property */ public override string get_ValueTransformerName
setValueTransformerName:
/* property */ public override void set_ValueTransformerName
versionHash
/* property */ public override NSData get_VersionHash
colorWithCGColor:
public UIColor FromCGColor
colorWithRed:green:blue:
public CIColor FromRgb
colorWithRed:green:blue:alpha:
public UIColor FromRGBA
colorWithString:
public CIColor FromString
components
/* property */ public override NSDictionary get_WeakComponents
stringRepresentation
override string StringRepresentation
alpha
/* property */ public override nfloat get_Alpha
blue
/* property */ public override nfloat get_Blue
colorSpace
/* property */ public override CGColorSpace get_ColorSpace
green
/* property */ public override nfloat get_Green
numberOfComponents
/* property */ public override nint get_NumberOfComponents
red
/* property */ public override nfloat get_Red
createCGImage:fromRect:
public override CGImage CreateCGImage
createCGImage:fromRect:format:colorSpace:
public override CGImage CreateCGImage
drawImage:atPoint:fromRect:
public override void DrawImage
drawImage:inRect:fromRect:
public override void DrawImage
contextWithEAGLContext:
public CIContext FromContext
contextWithEAGLContext:options:
public CIContext FromContext
contextWithOptions:
CIContext FromOptions
render:toCVPixelBuffer:
public override void Render
render:toCVPixelBuffer:bounds:colorSpace:
public override void Render
render:toBitmap:rowBytes:bounds:format:colorSpace:
public override void RenderToBitmap
inputImageMaximumSize
/* property */ public override CGSize get_InputImageMaximumSize
outputImageMaximumSize
/* property */ public override CGSize get_OutputImageMaximumSize
featuresInImage:
public override CIFeature[] FeaturesInImage
featuresInImage:options:
public override CIFeature[] FeaturesInImage
detectorOfType:context:options:
CIDetector FromType
filterNamesInCategories:
string[] _FilterNamesInCategories
filterNamesInCategory:
public string[] FilterNamesInCategory
filterWithName:
public CIFilter FromName
filterArrayFromSerializedXMP:inputImageExtent:error:
public CIFilter[] FromSerializedXMP
filterWithName:withInputParameters:
public CIFilter GetFilter
serializedXMPFromFilters:inputImageExtent:
public NSData SerializedXMP
setDefaults
public override void SetDefaults
setValue:forKey:
public void SetValueForKey
valueForKey:
public override NSObject ValueForKey
attributes
/* property */ public override MTLVertexAttributeDescriptorArray get_Attributes
inputKeys
/* property */ public override string[] get_InputKeys
outputImage
/* property */ public override CIImage get_OutputImage
outputKeys
/* property */ public override string[] get_OutputKeys
autoAdjustmentFilters
override NSArray _GetAutoAdjustmentFilters
autoAdjustmentFiltersWithOptions:
override NSArray _GetAutoAdjustmentFilters
imageByClampingToExtent
public override CIImage CreateByClampingToExtent
imageByCompositingOverImage:
public override CIImage CreateByCompositingOverImage
imageByApplyingFilter:withInputParameters:
public override CIImage CreateByFiltering
imageByApplyingOrientation:
public override CIImage CreateWithOrientation
imageWithCGImage:
public UIImage FromImage
imageWithCGImage:options:
public CIImage FromCGImage
imageWithBitmapData:bytesPerRow:size:format:colorSpace:
CIImage FromData
imageWithData:
public UIImage LoadFromData
imageWithData:options:
public CIImage FromData
imageWithCVPixelBuffer:
public CIImage FromImageBuffer
imageWithCVPixelBuffer:options:
public CIImage FromImageBuffer
imageWithContentsOfURL:
public CIImage FromUrl
imageWithContentsOfURL:options:
public CIImage FromUrl
imageTransformForOrientation:
public override CGAffineTransform GetImageTransform
regionOfInterestForImage:inRect:
public override CGRect GetRegionOfInterest
imageByApplyingTransform:
public override CIImage ImageByApplyingTransform
imageByCroppingToRect:
public override CIImage ImageByCroppingToRect
imageWithColor:
public CIImage ImageWithColor
imageWithTexture:size:flipped:colorSpace:
public CIImage ImageWithTexture
emptyImage
/* property */ public CIImage get_EmptyImage
extent
/* property */ public override CGRect get_Extent
properties
/* property */ public override EAWiFiUnconfiguredAccessoryProperties get_Properties
vectorWithValues:count:
CIVector _FromValues
vectorWithX:
public CIVector Create
vectorWithX:Y:
public CIVector Create
vectorWithX:Y:Z:
public CIVector Create
vectorWithX:Y:Z:W:
public CIVector Create
vectorWithCGPoint:
public CIVector Create
vectorWithCGRect:
public CIVector Create
vectorWithCGAffineTransform:
public CIVector Create
vectorWithString:
public CIVector FromString
valueAtIndex:
public override JSValue GetValueAt
CGAffineTransformValue
/* property */ public override CGAffineTransform get_CGAffineTransformValue
count
/* property */ public override nint get_Count
CGPointValue
/* property */ public override CGPoint get_CGPointValue
CGRectValue
/* property */ public override CGRect get_CGRectValue
W
/* property */ public override nfloat get_W
X
/* property */ public override nfloat get_X
Y
/* property */ public override nfloat get_Y
Z
/* property */ public override nfloat get_Z
allowDeferredLocationUpdatesUntilTraveled:timeout:
public override void AllowDeferredLocationUpdatesUntil
disallowDeferredLocationUpdates
public override void DisallowDeferredLocationUpdates
dismissHeadingCalibrationDisplay
public override void DismissHeadingCalibrationDisplay
isMonitoringAvailableForClass:
public bool IsMonitoringAvailable
requestAlwaysAuthorization
public override void RequestAlwaysAuthorization
requestStateForRegion:
public override void RequestState
requestWhenInUseAuthorization
public override void RequestWhenInUseAuthorization
startMonitoringForRegion:desiredAccuracy:
public override void StartMonitoring
startMonitoringForRegion:
public override void StartMonitoring
startMonitoringSignificantLocationChanges
public override void StartMonitoringSignificantLocationChanges
startMonitoringVisits
public override void StartMonitoringVisits
startRangingBeaconsInRegion:
public override void StartRangingBeacons
startUpdatingHeading
public override void StartUpdatingHeading
startUpdatingLocation
public override void StartUpdatingLocation
stopMonitoringForRegion:
public override void StopMonitoring
stopMonitoringSignificantLocationChanges
public override void StopMonitoringSignificantLocationChanges
stopMonitoringVisits
public override void StopMonitoringVisits
stopRangingBeaconsInRegion:
public override void StopRangingBeacons
stopUpdatingHeading
public override void StopUpdatingHeading
stopUpdatingLocation
public override void StopUpdatingLocation
headingAvailable
/* property */ bool get__HeadingAvailableStatic
locationServicesEnabled
/* property */ bool get__LocationServicesEnabledStatic
activityType
/* property */ public override NSString get_ActivityType
setActivityType:
/* property */ public override void set_ActivityType
deferredLocationUpdatesAvailable
/* property */ public bool get_DeferredLocationUpdatesAvailable
desiredAccuracy
/* property */ public override Double get_DesiredAccuracy
setDesiredAccuracy:
/* property */ public override void set_DesiredAccuracy
distanceFilter
/* property */ public override Double get_DistanceFilter
setDistanceFilter:
/* property */ public override void set_DistanceFilter
heading
/* property */ public override Double get_Heading
headingFilter
/* property */ public override Double get_HeadingFilter
setHeadingFilter:
/* property */ public override void set_HeadingFilter
headingOrientation
/* property */ public override CLDeviceOrientation get_HeadingOrientation
setHeadingOrientation:
/* property */ public override void set_HeadingOrientation
isRangingAvailable
/* property */ public bool get_IsRangingAvailable
maximumRegionMonitoringDistance
/* property */ public override Double get_MaximumRegionMonitoringDistance
monitoredRegions
/* property */ public override NSSet get_MonitoredRegions
pausesLocationUpdatesAutomatically
/* property */ public override bool get_PausesLocationUpdatesAutomatically
setPausesLocationUpdatesAutomatically:
/* property */ public override void set_PausesLocationUpdatesAutomatically
purpose
/* property */ public override string get_Purpose
setPurpose:
/* property */ public override void set_Purpose
rangedRegions
/* property */ public override NSSet get_RangedRegions
regionMonitoringAvailable
/* property */ public bool get_RegionMonitoringAvailable
regionMonitoringEnabled
/* property */ public bool get_RegionMonitoringEnabled
significantLocationChangeMonitoringAvailable
/* property */ public bool get_SignificantLocationChangeMonitoringAvailable
authorizationStatus
/* property */ public ALAuthorizationStatus get_AuthorizationStatus
firstDayOfTheWeek
/* property */ override nint get__FirstDayOfTheWeek
calendarIdentifier
/* property */ public override string get_CalendarIdentifier
daysOfTheMonth
/* property */ public override NSNumber[] get_DaysOfTheMonth
daysOfTheWeek
/* property */ public override EKRecurrenceDayOfWeek[] get_DaysOfTheWeek
daysOfTheYear
/* property */ public override NSNumber[] get_DaysOfTheYear
frequency
/* property */ public override nfloat get_Frequency
interval
/* property */ public override Double get_Interval
monthsOfTheYear
/* property */ public override NSNumber[] get_MonthsOfTheYear
recurrenceEnd
/* property */ public override EKRecurrenceEnd get_RecurrenceEnd
setRecurrenceEnd:
/* property */ public override void set_RecurrenceEnd
setPositions
/* property */ public override NSObject[] get_SetPositions
weeksOfTheYear
/* property */ public override NSNumber[] get_WeeksOfTheYear
dayOfWeek:
EKRecurrenceDayOfWeek _FromDay
dayOfWeek:weekNumber:
EKRecurrenceDayOfWeek _FromDay
dayOfTheWeek
/* property */ public override nint get_DayOfTheWeek
weekNumber
/* property */ public override nint get_WeekNumber
cancelFetchRequest:
public override void CancelFetchRequest
commit:
public override bool Commit
enumerateEventsMatchingPredicate:usingBlock:
public override void EnumerateEvents
eventWithIdentifier:
public override EKEvent EventFromIdentifier
eventsMatchingPredicate:
public override EKEvent[] EventsMatching
fetchRemindersMatchingPredicate:completion:
public override IntPtr FetchReminders
authorizationStatusForEntityType:
public EKAuthorizationStatus GetAuthorizationStatus
calendarWithIdentifier:
public override EKCalendar GetCalendar
calendarItemWithIdentifier:
public override EKCalendarItem GetCalendarItem
calendarItemsWithExternalIdentifier:
public override EKCalendarItem[] GetCalendarItems
calendarsForEntityType:
public override NSSet GetCalendars
sourceWithIdentifier:
public override EKSource GetSource
predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:
public override NSPredicate PredicateForCompleteReminders
predicateForEventsWithStartDate:endDate:calendars:
public override NSPredicate PredicateForEvents
predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:
public override NSPredicate PredicateForIncompleteReminders
predicateForRemindersInCalendars:
public override NSPredicate PredicateForReminders
refreshSourcesIfNecessary
public override void RefreshSourcesIfNecessary
removeCalendar:commit:error:
public override bool RemoveCalendar
removeEvent:span:commit:error:
public override bool RemoveEvent
removeEvent:span:error:
public override bool RemoveEvents
removeReminder:commit:error:
public override bool RemoveReminder
requestAccessToEntityType:completion:
public override void RequestAccess
reset
public override void Reset
saveCalendar:commit:error:
public override bool SaveCalendar
saveEvent:span:error:
public override bool SaveEvent
saveEvent:span:commit:error:
public override bool SaveEvent
saveReminder:commit:error:
public override bool SaveReminder
calendars
/* property */ public override NSSet get_Calendars
defaultCalendarForNewEvents
/* property */ public override EKCalendar get_DefaultCalendarForNewEvents
defaultCalendarForNewReminders
/* property */ public override EKCalendar get_DefaultCalendarForNewReminders
eventStoreIdentifier
/* property */ public override string get_EventStoreIdentifier
sources
/* property */ public override NSSet get_Sources
compareStartDateWithEvent:
public override NSComparisonResult CompareStartDateWithEvent
eventWithEventStore:
public EKEvent FromStore
refresh
public override bool Refresh
isAllDay
/* property */ public override bool get_AllDay
setAllDay:
/* property */ public override void set_AllDay
availability
/* property */ public override EKEventAvailability get_Availability
setAvailability:
/* property */ public override void set_Availability
birthdayPersonID
/* property */ public override nint get_BirthdayPersonID
endDate
/* property */ public override NSDate get_EndDate
setEndDate:
/* property */ public override void set_EndDate
eventIdentifier
/* property */ public override string get_EventIdentifier
isDetached
/* property */ public override bool get_IsDetached
organizer
/* property */ public override EKParticipant get_Organizer
startDate
/* property */ public override NSDate get_StartDate
setStartDate:
/* property */ public override void set_StartDate
filteredArrayUsingPredicate:
public NSArray FilterUsingPredicate
arrayWithContentsOfFile:
public NSMutableArray FromFile
arrayWithObjects:count:
NSArray FromObjects
sortedArrayUsingComparator:
public override NSArray Sort
objectAtIndex:
public override NSObject ObjectAt
writeToFile:atomically:
public override bool WriteToFile
drawAtPoint:
public override void Draw
drawInRect:
public override void Draw
drawWithRect:options:context:
public override void DrawString
enumerateAttribute:inRange:options:usingBlock:
public override void EnumerateAttribute
enumerateAttributesInRange:options:usingBlock:
public override void EnumerateAttributes
attribute:atIndex:effectiveRange:
public override NSObject GetAttribute
attribute:atIndex:longestEffectiveRange:inRange:
public override NSObject GetAttribute
attributesAtIndex:longestEffectiveRange:inRange:
public override NSDictionary GetAttributes
boundingRectWithSize:options:context:
public override CGRect GetBoundingRect
dataFromRange:documentAttributes:error:
public override NSData GetDataFromRange
fileWrapperFromRange:documentAttributes:error:
public override NSFileWrapper GetFileWrapperFromRange
isEqualToAttributedString:
public override bool IsEqual
attributesAtIndex:effectiveRange:
public override IntPtr LowLevelGetAttributes
attributedSubstringFromRange:
override NSAttributedString Substring
length
/* property */ public override nfloat get_Length
size
/* property */ public override CGSize get_Size
classNamed:
public override Class ClassNamed
bundleForClass:
public NSBundle FromClass
bundleWithIdentifier:
public NSBundle FromIdentifier
bundleWithPath:
public NSBundle FromPath
bundleWithURL:
public NSBundle FromUrl
pathsForResourcesOfType:inDirectory:
public override string[] PathsForResources
URLForResource:withExtension:subdirectory:inBundleWithURL:
public NSUrl GetUrlForResource
URLForResource:withExtension:
public override NSUrl GetUrlForResource
URLForResource:withExtension:subdirectory:
public override NSUrl GetUrlForResource
URLForResource:withExtension:subdirectory:localization:
public override NSUrl GetUrlForResource
URLsForResourcesWithExtension:subdirectory:inBundleWithURL:
public NSUrl[] GetUrlsForResourcesWithExtension
URLsForResourcesWithExtension:subdirectory:
public override NSUrl[] GetUrlsForResourcesWithExtension
URLsForResourcesWithExtension:subdirectory:localization:
public override NSUrl[] GetUrlsForResourcesWithExtension
load
public override bool Load
loadNibNamed:owner:options:
public override NSArray LoadNib
localizedStringForKey:value:table:
public override string LocalizedString
objectForInfoDictionaryKey:
public override NSObject ObjectForInfoDictionary
pathForAuxiliaryExecutable:
public override string PathForAuxiliaryExecutable
pathForResource:ofType:
public override string PathForResource
pathForResource:ofType:inDirectory:
public string PathForResourceAbsolute
pathForResource:ofType:inDirectory:forLocalization:
public override string PathForResource
pathsForResourcesOfType:inDirectory:forLocalization:
public override string[] PathsForResources
unload
public override bool Unload
URLForAuxiliaryExecutable:
public override NSUrl UrlForAuxiliaryExecutable
allBundles
/* property */ public NSBundle[] get__AllBundles
allFrameworks
/* property */ public NSBundle[] get_AllFrameworks
appStoreReceiptURL
/* property */ public override NSUrl get_AppStoreReceiptUrl
builtInPlugInsPath
/* property */ public override string get_BuiltinPluginsPath
builtInPlugInsURL
/* property */ public override NSUrl get_BuiltInPluginsUrl
bundleIdentifier
/* property */ public override string get_BundleIdentifier
bundlePath
/* property */ public override string get_BundlePath
bundleURL
/* property */ public override NSUrl get_BundleUrl
developmentLocalization
/* property */ public override string get_DevelopmentLocalization
executablePath
/* property */ public override string get_ExecutablePath
executableURL
/* property */ public override NSUrl get_ExecutableUrl
infoDictionary
/* property */ public override NSDictionary get_InfoDictionary
isLoaded
/* property */ public override bool get_Loaded
localizations
/* property */ public override string[] get_Localizations
mainBundle
/* property */ public NSBundle get_MainBundle
preferredLocalizations
/* property */ public override string[] get_PreferredLocalizations
principalClass
/* property */ public override Class get_PrincipalClass
privateFrameworksPath
/* property */ public override string get_PrivateFrameworksPath
privateFrameworksURL
/* property */ public override NSUrl get_PrivateFrameworksUrl
resourcePath
/* property */ public override string get_ResourcePath
resourceURL
/* property */ public override NSUrl get_ResourceUrl
sharedFrameworksPath
/* property */ public override string get_SharedFrameworksPath
sharedFrameworksURL
/* property */ public override NSUrl get_SharedFrameworksUrl
sharedSupportPath
/* property */ public override string get_SharedSupportPath
sharedSupportURL
/* property */ public override NSUrl get_SharedSupportUrl
compareDate:toDate:toUnitGranularity:
public override NSComparisonResult CompareDate
components:fromDate:
public override NSDateComponents Components
components:fromDate:toDate:options:
public override NSDateComponents Components
components:fromDateComponents:toDateComponents:options:
public override NSDateComponents ComponentsFromDateToDate
componentsInTimeZone:fromDate:
public override NSDateComponents ComponentsInTimeZone
dateWithEra:year:month:day:hour:minute:second:nanosecond:
public override NSDate Date
dateByAddingComponents:toDate:options:
public override NSDate DateByAddingComponents
dateByAddingUnit:value:toDate:options:
public override NSDate DateByAddingUnit
dateBySettingHour:minute:second:ofDate:options:
public override NSDate DateBySettingsHour
dateBySettingUnit:value:ofDate:options:
public override NSDate DateBySettingUnit
dateWithEra:yearForWeekOfYear:weekOfYear:weekday:hour:minute:second:nanosecond:
public override NSDate DateForWeekOfYear
dateFromComponents:
public override NSDate DateFromComponents
enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:
public override void EnumerateDatesStartingAfterDate
nextDateAfterDate:matchingComponents:options:
public override NSDate FindNextDateAfterDateMatching
nextDateAfterDate:matchingHour:minute:second:options:
public override NSDate FindNextDateAfterDateMatching
nextDateAfterDate:matchingUnit:value:options:
public override NSDate FindNextDateAfterDateMatching
nextWeekendStartDate:interval:options:afterDate:
public override bool FindNextWeekend
component:fromDate:
public override nint GetComponentFromDate
getEra:year:month:day:fromDate:
public override void GetComponentsFromDate
getEra:yearForWeekOfYear:weekOfYear:weekday:fromDate:
public override void GetComponentsFromDateForWeekOfYear
getHour:minute:second:nanosecond:fromDate:
public override void GetHourComponentsFromDate
isDateInToday:
public override bool IsDateInToday
isDateInTomorrow:
public override bool IsDateInTomorrow
isDateInWeekend:
public override bool IsDateInWeekend
isDateInYesterday:
public override bool IsDateInYesterday
isDate:equalToDate:toUnitGranularity:
public override bool IsEqualToUnitGranularity
isDate:inSameDayAsDate:
public override bool IsInSameDay
date:matchesComponents:
public override bool Matches
rangeOfWeekendStartDate:interval:containingDate:
public override bool RangeOfWeekendContainingDate
startOfDayForDate:
public override NSDate StartOfDayForDate
AMSymbol
/* property */ public override string get_AMSymbol
currentCalendar
/* property */ public NSCalendar get_CurrentCalendar
eraSymbols
/* property */ public override string[] get_EraSymbols
firstWeekday
/* property */ public override nuint get_FirstWeekDay
setFirstWeekday:
/* property */ public override void set_FirstWeekDay
locale
/* property */ public override NSLocale get_Locale
setLocale:
/* property */ public override void set_Locale
longEraSymbols
/* property */ public override string[] get_LongEraSymbols
minimumDaysInFirstWeek
/* property */ public override nuint get_MinimumDaysInFirstWeek
setMinimumDaysInFirstWeek:
/* property */ public override void set_MinimumDaysInFirstWeek
monthSymbols
/* property */ public override string[] get_MonthSymbols
PMSymbol
/* property */ public override string get_PMSymbol
quarterSymbols
/* property */ public override string[] get_QuarterSymbols
shortMonthSymbols
/* property */ public override string[] get_ShortMonthSymbols
shortQuarterSymbols
/* property */ public override string[] get_ShortQuarterSymbols
shortStandaloneMonthSymbols
/* property */ public override string[] get_ShortStandaloneMonthSymbols
shortStandaloneQuarterSymbols
/* property */ public override string[] get_ShortStandaloneQuarterSymbols
shortStandaloneWeekdaySymbols
/* property */ public override string[] get_ShortStandaloneWeekdaySymbols
shortWeekdaySymbols
/* property */ public override string[] get_ShortWeekdaySymbols
standaloneMonthSymbols
/* property */ public override string[] get_StandaloneMonthSymbols
standaloneQuarterSymbols
/* property */ public override string[] get_StandaloneQuarterSymbols
standaloneWeekdaySymbols
/* property */ public override string[] get_StandaloneWeekdaySymbols
timeZone
/* property */ public override NSTimeZone get_TimeZone
setTimeZone:
public override void SetTimeZone
veryShortMonthSymbols
/* property */ public override string[] get_VeryShortMonthSymbols
veryShortStandaloneMonthSymbols
/* property */ public override string[] get_VeryShortStandaloneMonthSymbols
veryShortStandaloneWeekdaySymbols
/* property */ public override string[] get_VeryShortStandaloneWeekdaySymbols
veryShortWeekdaySymbols
/* property */ public override string[] get_VeryShortWeekdaySymbols
weekdaySymbols
/* property */ public override string[] get_WeekdaySymbols
containsValueForKey:
public override bool ContainsKey
decodeBoolForKey:
public override bool DecodeBool
decodeBytesForKey:returnedLength:
public override IntPtr DecodeBytes
decodeBytesWithReturnedLength:
public override IntPtr DecodeBytes
decodeDoubleForKey:
public override Double DecodeDouble
decodeFloatForKey:
public override Single DecodeFloat
decodeInt32ForKey:
public override int DecodeInt
decodeInt64ForKey:
public override Int64 DecodeLong
decodeIntegerForKey:
public override nint DecodeNInt
decodeObject
public override NSObject DecodeObject
decodeObjectForKey:
public override NSObject DecodeObject
encodeObject:
public override void Encode
encodeObject:forKey:
public override void Encode
encodeBool:forKey:
public override void Encode
encodeDouble:forKey:
public override void Encode
encodeFloat:forKey:
public override void Encode
encodeInt32:forKey:
public override void Encode
encodeInt64:forKey:
public override void Encode
encodeInteger:forKey:
public override void Encode
encodeBytes:length:forKey:
public override void EncodeBlock
encodeConditionalObject:forKey:
public override void EncodeConditionalObject
encodeRootObject:
public override void EncodeRoot
requiresSecureCoding
public override bool RequiresSecureCoding
allowedClasses
/* property */ public override NSSet get_AllowedClasses
writeToFile:options:error:
override bool _Save
writeToURL:options:error:
override bool _Save
enumerateByteRangesUsingBlock:
public override void EnumerateByteRange
rangeOfData:options:range:
public override NSRange Find
dataWithBytes:length:
public NSData FromBytes
dataWithBytesNoCopy:length:
public NSData FromBytesNoCopy
dataWithBytesNoCopy:length:freeWhenDone:
public NSData FromBytesNoCopy
dataWithData:
public NSData FromData
dataWithContentsOfFile:
public NSData FromFile
dataWithContentsOfFile:options:error:
public NSData FromFile
dataWithContentsOfURL:
public NSData FromUrl
dataWithContentsOfURL:options:error:
public NSData FromUrl
base64EncodedDataWithOptions:
public override NSData GetBase64EncodedData
base64EncodedStringWithOptions:
public override string GetBase64EncodedString
writeToURL:atomically:
public override bool WriteToUrl
bytes
/* property */ public override IntPtr get_Bytes
dateByAddingTimeInterval:
public override NSDate AddSeconds
compare:
public override NSComparisonResult Compare
descriptionWithLocale:
public override string DescriptionWithLocale
earlierDate:
public override NSDate EarlierDate
dateWithTimeIntervalSince1970:
public NSDate FromTimeIntervalSince1970
dateWithTimeIntervalSinceNow:
public NSDate FromTimeIntervalSinceNow
dateWithTimeIntervalSinceReferenceDate:
public NSDate FromTimeIntervalSinceReferenceDate
isEqualToDate:
public override bool IsEqualToDate
laterDate:
public override NSDate LaterDate
distantFuture
/* property */ public NSDate get_DistantFuture
distantPast
/* property */ public NSDate get_DistantPast
date
/* property */ public override NSDate get_Date
timeIntervalSinceReferenceDate
/* property */ public override Double get_SecondsSinceReferenceDate
dictionaryWithDictionary:
public NSMutableDictionary FromDictionary
dictionaryWithContentsOfFile:
public NSMutableDictionary FromFile
dictionaryWithObject:forKey:
public NSMutableDictionary FromObjectAndKey
dictionaryWithObjects:forKeys:count:
NSMutableDictionary FromObjectsAndKeysInternalCount
dictionaryWithObjects:forKeys:
NSMutableDictionary FromObjectsAndKeysInternal
dictionaryWithContentsOfURL:
public NSMutableDictionary FromUrl
sharedKeySetForKeys:
public NSObject GetSharedKeySetForKeys
isEqualToDictionary:
public override bool IsEqualToDictionary
allKeysForObject:
public override NSObject[] KeysForObject
objectsForKeys:notFoundMarker:
public override NSObject[] ObjectsForKeys
descriptionInStringsFileFormat
/* property */ public override string get_DescriptionInStringsFileFormat
objectEnumerator
override NSEnumerator _GetEnumerator
allValues
/* property */ public override NSObject[] get_Values
skipDescendents
public override void SkipDescendents
directoryAttributes
/* property */ public override NSDictionary get_DirectoryAttributes
fileAttributes
/* property */ public override NSDictionary get_FileAttributes
level
/* property */ public override nuint get_Level
attributesOfItemAtPath:error:
override NSDictionary _GetAttributes
attributesOfFileSystemForPath:error:
override NSDictionary _GetFileSystemAttributes
changeCurrentDirectoryPath:
public override bool ChangeCurrentDirectory
componentsToDisplayForPath:
public override string[] ComponentsToDisplay
contentsAtPath:
public override NSData Contents
contentsEqualAtPath:andPath:
public override bool ContentsEqual
copyItemAtPath:toPath:error:
public override bool Copy
copyItemAtURL:toURL:error:
public override bool Copy
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
public override bool CreateDirectory
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
public override bool CreateDirectory
createFileAtPath:contents:attributes:
public override bool CreateFile
createSymbolicLinkAtPath:withDestinationPath:error:
public override bool CreateSymbolicLink
createSymbolicLinkAtURL:withDestinationURL:error:
public override bool CreateSymbolicLink
displayNameAtPath:
public override string DisplayName
evictUbiquitousItemAtURL:error:
public override bool EvictUbiquitous
fileExistsAtPath:
public override bool FileExists
fileExistsAtPath:isDirectory:
public override bool FileExists
containerURLForSecurityApplicationGroupIdentifier:
public override NSUrl GetContainerUrl
currentDirectoryPath
public override string GetCurrentDirectory
contentsOfDirectoryAtPath:error:
public override string[] GetDirectoryContent
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
public override NSUrl[] GetDirectoryContent
subpathsOfDirectoryAtPath:error:
public override string[] GetDirectoryContentRecursive
enumeratorAtPath:
public override NSDirectoryEnumerator GetEnumerator
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
public override NSDirectoryEnumerator GetEnumerator
mountedVolumeURLsIncludingResourceValuesForKeys:options:
public override NSUrl[] GetMountedVolumes
getRelationship:ofDirectory:inDomain:toItemAtURL:error:
public override bool GetRelationship
getRelationship:ofDirectoryAtURL:toItemAtURL:error:
public override bool GetRelationship
destinationOfSymbolicLinkAtPath:error:
public override string GetSymbolicLinkDestination
URLForDirectory:inDomain:appropriateForURL:create:error:
public override NSUrl GetUrl
URLForPublishingUbiquitousItemAtURL:expirationDate:error:
public override NSUrl GetUrlForPublishingUbiquitousItem
URLForUbiquityContainerIdentifier:
public override NSUrl GetUrlForUbiquityContainer
URLsForDirectory:inDomains:
public override NSUrl[] GetUrls
isDeletableFileAtPath:
public override bool IsDeletableFile
isExecutableFileAtPath:
public override bool IsExecutableFile
isReadableFileAtPath:
public override bool IsReadableFile
isUbiquitousItemAtURL:
public override bool IsUbiquitous
isWritableFileAtPath:
public override bool IsWritableFile
linkItemAtPath:toPath:error:
public override bool Link
linkItemAtURL:toURL:error:
public override bool Link
moveItemAtPath:toPath:error:
public override bool Move
moveItemAtURL:toURL:error:
public override bool Move
removeItemAtPath:error:
public override bool Remove
removeItemAtURL:error:
public override bool Remove
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
public override bool Replace
setAttributes:ofItemAtPath:error:
public override bool SetAttributes
setUbiquitous:itemAtURL:destinationURL:error:
public override bool SetUbiquitous
startDownloadingUbiquitousItemAtURL:error:
public override bool StartDownloadingUbiquitous
subpathsAtPath:
public override string[] Subpaths
defaultManager
/* property */ public PHImageManager get_DefaultManager
ubiquityIdentityToken
/* property */ public override NSObject get_UbiquityIdentityToken
attributedStringForObjectValue:withDefaultAttributes:
public override NSAttributedString GetAttributedString
editingStringForObjectValue:
public override string GetEditingString
getObjectValue:forString:errorDescription:
public override bool GetObjectValue
stringForObjectValue:
public override string StringForObjectValue
isPartialStringValid:newEditingString:errorDescription:
public override bool IsPartialStringValid
isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:
public override bool IsPartialStringValid
cookieWithProperties:
public NSHttpCookie CookieFromProperties
cookiesWithResponseHeaderFields:forURL:
public NSHttpCookie[] CookiesWithResponseHeaderFields
requestHeaderFieldsWithCookies:
public NSDictionary RequestHeaderFieldsWithCookies
comment
/* property */ public override string get_Comment
commentURL
/* property */ public override NSUrl get_CommentUrl
domain
/* property */ public override string get_Domain
expiresDate
/* property */ public override NSDate get_ExpiresDate
isHTTPOnly
/* property */ public override bool get_IsHttpOnly
isSecure
/* property */ public override bool get_IsSecure
isSessionOnly
/* property */ public override bool get_IsSessionOnly
portList
/* property */ public override NSNumber[] get_PortList
value
/* property */ public override Double get_Value
version
/* property */ public override PHVideoRequestOptionsVersion get_Version
cookiesForURL:
public override NSHttpCookie[] CookiesForUrl
deleteCookie:
public override void DeleteCookie
getCookiesForTask:completionHandler:
public override void GetCookiesForTask
sortedCookiesUsingDescriptors:
public override NSHttpCookie[] GetSortedCookies
removeCookiesSinceDate:
public override void RemoveCookiesSinceDate
setCookie:
public override void SetCookie
setCookies:forURL:mainDocumentURL:
public override void SetCookies
storeCookies:forTask:
public override void StoreCookies
cookieAcceptPolicy
/* property */ public override NSHttpCookieAcceptPolicy get_AcceptPolicy
setCookieAcceptPolicy:
/* property */ public override void set_AcceptPolicy
cookies
/* property */ public override NSHttpCookie[] get_Cookies
sharedHTTPCookieStorage
/* property */ public NSHttpCookieStorage get_SharedStorage
indexPathWithIndexes:length:
NSIndexPath _FromIndex
getIndexes:
override void _GetIndexes
indexPathWithIndex:
public NSIndexPath FromIndex
indexPathForItem:inSection:
public NSIndexPath FromItemSection
indexPathForRow:inSection:
public NSIndexPath FromRowSection
indexAtPosition:
public override nuint IndexAtPosition
indexPathByAddingIndex:
public override NSIndexPath IndexPathByAddingIndex
indexPathByRemovingLastIndex
public override NSIndexPath IndexPathByRemovingLastIndex
item
/* property */ public override NSObject get_Item
row
/* property */ public override nint get_LongRow
section
/* property */ public override nint get_LongSection
read:maxLength:
public override nint Read
_setCFClientFlags:callback:context:
protected override bool SetCFClientFlags
getBuffer:length:
protected override bool GetBuffer
inputStreamWithData:
public NSInputStream FromData
inputStreamWithFileAtPath:
public NSInputStream FromFile
inputStreamWithURL:
public NSInputStream FromUrl
hasBytesAvailable
public override bool HasBytesAvailable
JSONObjectWithData:options:error:
public NSObject Deserialize
JSONObjectWithStream:options:error:
public NSObject Deserialize
isValidJSONObject:
public bool IsValidJSONObject
dataWithJSONObject:options:error:
public NSData Serialize
writeJSONObject:toStream:options:error:
public nint Serialize
archivedDataWithRootObject:
public NSData ArchivedDataWithRootObject
archiveRootObject:toFile:
public bool ArchiveRootObjectToFile
finishEncoding
public override void FinishEncoding
classNameForClass:
public override string GetClassName
setClassName:forClass:
public override void SetClassName
setRequiresSecureCoding:
public override void SetRequiresSecureCoding
outputFormat
/* property */ public override NSPropertyListFormat get_PropertyListFormat
setOutputFormat:
/* property */ public override void set_PropertyListFormat
finishDecoding
public override void FinishDecoding
classForClassName:
public override Class GetClass
setClass:forClassName:
public override void SetClass
unarchiveObjectWithFile:
public NSObject UnarchiveFile
unarchiveObjectWithData:
public NSObject UnarchiveObject
activateConstraints:
public void ActivateConstraints
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
public NSLayoutConstraint Create
deactivateConstraints:
public void DeactivateConstraints
constraintsWithVisualFormat:options:metrics:views:
public NSLayoutConstraint[] FromVisualFormat
setActive:
/* property */ public override void set_Active
constant
/* property */ public override nfloat get_Constant
setConstant:
/* property */ public override void set_Constant
firstAttribute
/* property */ public override NSLayoutAttribute get_FirstAttribute
firstItem
/* property */ public override NSObject get_FirstItem
multiplier
/* property */ public override NSNumber get_Multiplier
priority
/* property */ public override Single get_Priority
setPriority:
/* property */ public override void set_Priority
relation
/* property */ public override NSLayoutRelation get_Relation
secondAttribute
/* property */ public override NSLayoutAttribute get_SecondAttribute
secondItem
/* property */ public override NSObject get_SecondItem
shouldBeArchived
/* property */ public override bool get_ShouldBeArchived
setShouldBeArchived:
/* property */ public override void set_ShouldBeArchived
canonicalLanguageIdentifierFromString:
public string CanonicalLanguageIdentifierFromString
canonicalLocaleIdentifierFromString:
public string CanonicalLocaleIdentifierFromString
componentsFromLocaleIdentifier:
public NSDictionary ComponentsFromLocaleIdentifier
displayNameForKey:value:
override NSString DisplayNameForKey
localeWithLocaleIdentifier:
public NSLocale FromLocaleIdentifier
characterDirectionForLanguage:
public NSLocaleLanguageDirection GetCharacterDirection
lineDirectionForLanguage:
public NSLocaleLanguageDirection GetLineDirection
localeIdentifierFromComponents:
public string LocaleIdentifierFromComponents
autoupdatingCurrentLocale
/* property */ public NSLocale get_AutoUpdatingCurrentLocale
availableLocaleIdentifiers
/* property */ public string[] get_AvailableLocaleIdentifiers
commonISOCurrencyCodes
/* property */ public string[] get_CommonISOCurrencyCodes
currentLocale
/* property */ public NSLocale get_CurrentLocale
ISOCountryCodes
/* property */ public string[] get_ISOCountryCodes
ISOCurrencyCodes
/* property */ public string[] get_ISOCurrencyCodes
ISOLanguageCodes
/* property */ public string[] get_ISOLanguageCodes
localeIdentifier
/* property */ public override string get_LocaleIdentifier
preferredLanguages
/* property */ public override string[] get_PreferredLanguages
systemLocale
/* property */ public NSLocale get_SystemLocale
valueForAttribute:
public override NSObject ValueForAttribute
valuesForAttributes:
public override NSDictionary ValuesForAttributes
addObject:
public override void Add
addObjectsFromArray:
public override void AddObjects
arrayWithContentsOfURL:
public NSMutableArray FromUrl
insertObject:atIndex:
public override void Insert
insertObjects:atIndexes:
public override void InsertObjects
removeAllObjects
public override void RemoveAllObjects
removeLastObject
public override void RemoveLastObject
removeObjectAtIndex:
public override void Remove
removeObjectsAtIndexes:
public override void RemoveObjects
replaceObjectAtIndex:withObject:
public override void Replace
addAttribute:value:range:
public override void AddAttribute
addAttributes:range:
public override void AddAttributes
appendAttributedString:
public override void Append
beginEditing
public override void BeginEditing
deleteCharactersInRange:
public override void DeleteCharacters
endEditing
public override void EndEditing
insertAttributedString:atIndex:
public override void Insert
setAttributes:range:
public override void LowLevelSetAttributes
readFromData:options:documentAttributes:error:
public override bool ReadFromData
readFromFileURL:options:documentAttributes:error:
public override bool ReadFromFile
removeAttribute:range:
public override void RemoveAttribute
replaceCharactersInRange:withString:
public override void Replace
replaceCharactersInRange:withAttributedString:
public override void Replace
setAttributedString:
public override void SetString
appendBytes:length:
public override void AppendBytes
appendData:
public override void AppendData
dataWithCapacity:
public NSMutableData FromCapacity
dataWithLength:
public NSMutableData FromLength
setData:
public override void SetData
setLength:
/* property */ public override void set_Length
mutableBytes
/* property */ public override IntPtr get_MutableBytes
dictionaryWithSharedKeySet:
public NSDictionary FromSharedKeySet
removeObjectForKey:
public override void RemoveObjectForKey
minusSet:
override void MinusSet
removeObject:
public override void RemoveObject
appendString:
public override void Append
insertString:atIndex:
public override void Insert
replaceOccurrencesOfString:withString:options:range:
public override nuint ReplaceOcurrences
requestWithURL:
public NSUrlRequest FromUrl
valueForHTTPHeaderField:
override string Header
allowsCellularAccess
/* property */ public override bool get_AllowsCellularAccess
HTTPBody
/* property */ public override NSData get_Body
HTTPBodyStream
/* property */ public override NSInputStream get_BodyStream
cachePolicy
/* property */ public override NSUrlRequestCachePolicy get_CachePolicy
allHTTPHeaderFields
/* property */ public override NSDictionary get_Headers
HTTPMethod
/* property */ public override string get_HttpMethod
mainDocumentURL
/* property */ public override NSUrl get_MainDocumentURL
networkServiceType
/* property */ public override NSUrlRequestNetworkServiceType get_NetworkServiceType
HTTPShouldHandleCookies
/* property */ public override bool get_ShouldHandleCookies
timeoutInterval
/* property */ public override Double get_TimeoutInterval
URL
/* property */ public override NSUrl get_Url
setValue:forHTTPHeaderField:
override void _SetValue
setAllowsCellularAccess:
/* property */ public override void set_AllowsCellularAccess
setHTTPBody:
/* property */ public override void set_Body
setHTTPBodyStream:
/* property */ public override void set_BodyStream
setCachePolicy:
/* property */ public override void set_CachePolicy
setAllHTTPHeaderFields:
/* property */ public override void set_Headers
setHTTPMethod:
/* property */ public override void set_HttpMethod
setMainDocumentURL:
/* property */ public override void set_MainDocumentURL
setNetworkServiceType:
/* property */ public override void set_NetworkServiceType
setHTTPShouldHandleCookies:
/* property */ public override void set_ShouldHandleCookies
setTimeoutInterval:
/* property */ public override void set_TimeoutInterval
setURL:
/* property */ public override void set_Url
dataFromTXTRecordDictionary:
public NSData DataFromTxtRecord
dictionaryFromTXTRecordData:
public NSDictionary DictionaryFromTxtRecord
getInputStream:outputStream:
override bool GetStreams
TXTRecordData
public override NSData GetTxtRecordData
publish
public override void Publish
publishWithOptions:
public override void Publish
resolve
public override void Resolve
resolveWithTimeout:
public override void Resolve
scheduleInRunLoop:forMode:
public override void ScheduleInRunLoop
setTXTRecordData:
public override bool SetTxtRecordData
startMonitoring
public override void StartMonitoring
stopMonitoring
public override void StopMonitoring
addresses
/* property */ public override NSData[] get_Addresses
hostName
/* property */ public override string get_HostName
includesPeerToPeer
/* property */ public override bool get_IncludesPeerToPeer
setIncludesPeerToPeer:
/* property */ public override void set_IncludesPeerToPeer
port
public NSPort Create
post:
public void Post
addObserver:selector:name:object:
public override void AddObserver
addObserverForName:object:queue:usingBlock:
public override NSObject AddObserver
postNotification:
public override void PostNotification
postNotificationName:object:
public override void PostNotificationName
postNotificationName:object:userInfo:
public override void PostNotificationName
removeObserver:
public override void RemoveObserver
removeObserver:name:object:
public override void RemoveObserver
defaultCenter
/* property */ public MPNowPlayingInfoCenter get_DefaultCenter
numberWithBool:
public NSNumber FromBoolean
numberWithUnsignedChar:
public NSNumber FromByte
numberWithDouble:
public NSNumber FromDouble
numberWithFloat:
public NSNumber FromFloat
numberWithShort:
public NSNumber FromInt16
numberWithInt:
public NSNumber FromInt32
numberWithLongLong:
public NSNumber FromInt64
numberWithLong:
public NSNumber FromLong
numberWithInteger:
public NSNumber FromNInt
numberWithUnsignedInteger:
public NSNumber FromNUInt
numberWithChar:
public NSNumber FromSByte
numberWithUnsignedShort:
public NSNumber FromUInt16
numberWithUnsignedInt:
public NSNumber FromUInt32
numberWithUnsignedLongLong:
public NSNumber FromUInt64
numberWithUnsignedLong:
public NSNumber FromUnsignedLong
isEqualToNumber:
override bool IsEqualToNumber
boolValue
/* property */ public override bool get_BoolValue
unsignedCharValue
/* property */ public override Byte get_ByteValue
doubleValue
/* property */ public override Double get_DoubleValue
floatValue
/* property */ public override Single get_FloatValue
shortValue
/* property */ public override Int16 get_Int16Value
intValue
/* property */ public override int get_Int32Value
longLongValue
/* property */ public override Int64 get_Int64Value
longValue
/* property */ public override nint get_LongValue
integerValue
/* property */ public override nint get_NIntValue
decimalValue
/* property */ public override NSDecimal get_NSDecimalValue
unsignedIntegerValue
/* property */ public override nuint get_NUIntValue
charValue
/* property */ public override SByte get_SByteValue
unsignedShortValue
/* property */ public override UInt16 get_UInt16Value
unsignedIntValue
/* property */ public override UInt32 get_UInt32Value
unsignedLongLongValue
/* property */ public override UInt64 get_UInt64Value
unsignedLongValue
/* property */ public override nuint get_UnsignedLongValue
array
override IntPtr _ToArray
set
public override void SetColor
containsObject:
public override bool Contains
firstObject
/* property */ public override NSObject get_firstObject
reversedOrderedSet
public override NSOrderedSet GetReverseOrderedSet
indexOfObject:
public override nint IndexOf
intersectsOrderedSet:
public override bool Intersects
intersectsSet:
public override bool IntersectsSet
isEqualToOrderedSet:
public override bool IsEqualToOrderedSet
isSubsetOfOrderedSet:
public override bool IsSubset
isSubsetOfSet:
public override bool IsSubsetOf
lastObject
/* property */ public override NSObject get_LastObject
exchangeObjectAtIndex:withObjectAtIndex:
public override void ExchangeObject
intersectOrderedSet:
public override void Intersect
moveObjectsAtIndexes:toIndex:
public override void MoveObjects
removeObjectsInRange:
public override void RemoveObjects
removeObjectsInArray:
public override void RemoveObjects
replaceObjectsAtIndexes:withObjects:
public override void ReplaceObjects
setObject:atIndex:
public override void SetObject
sortUsingComparator:
public override void Sort
sortWithOptions:usingComparator:
public override void Sort
sortRange:options:usingComparator:
public override void SortRange
unionSet:
override void UnionSet
outputStreamToFileAtPath:append:
public NSOutputStream CreateFile
hasSpaceAvailable
public override bool HasSpaceAvailable
outputStreamToMemory
public NSObject OutputStreamToMemory
predicateWithFormat:argumentArray:
NSPredicate _FromFormat
allowEvaluation
public override void AllowEvaluation
evaluateWithObject:
public override bool EvaluateWithObject
evaluateWithObject:substitutionVariables:
public override bool EvaluateWithObject
predicateWithBlock:
public NSPredicate FromExpression
predicateWithValue:
public NSPredicate FromValue
predicateWithSubstitutionVariables:
public override NSPredicate PredicateWithSubstitutionVariables
predicateFormat
/* property */ public override string get_PredicateFormat
acceptInputForMode:beforeDate:
public override void AcceptInputForMode
addTimer:forMode:
public override void AddTimer
getCFRunLoop
public override CFRunLoop GetCFRunLoop
limitDateForMode:
public override NSDate LimitDateForMode
run
public override void Run
runUntilDate:
public override void RunUntil
runMode:beforeDate:
public override bool RunUntil
currentRunLoop
/* property */ public NSRunLoop get_Current
currentMode
/* property */ public override UIScreenMode get_CurrentMode
mainRunLoop
/* property */ public NSRunLoop get_Main
allObjects
override IntPtr _AllObjects
enumerateObjectsUsingBlock:
public override void Enumerate
isEqualToSet:
public override bool IsEqualToSet
member:
public override NSObject LookupMember
setByAddingObjectsFromSet:
override NSSet SetByAddingObjectsFromSet
anyObject
/* property */ public override NSObject get_AnyObject
close
public override void Close
getBoundStreamsWithBufferSize:inputStream:outputStream:
public void GetBoundStreams
getStreamsToHostWithName:port:inputStream:outputStream:
public void GetStreamsToHost
open
public override void Open
propertyForKey:
public override NSObject GetProperty
setProperty:forKey:
override bool SetPropertyForKey
streamError
/* property */ public override NSError get_Error
streamStatus
/* property */ public override NSStreamStatus get_Status
characterAtIndex:
override Char _characterAtIndex
stringByAbbreviatingWithTildeInPath
public override NSString AbbreviateTildeInPath
stringByAppendingPathComponent:
public override NSString AppendPathComponent
stringByAppendingPathExtension:
public override NSString AppendPathExtension
stringsByAppendingPaths:
public override string[] AppendPaths
capitalizedStringWithLocale:
public override string Capitalize
compare:options:
public override NSComparisonResult Compare
compare:options:range:
public override NSComparisonResult Compare
compare:options:range:locale:
public override NSComparisonResult Compare
containsString:
public override bool Contains
stringByDeletingLastPathComponent
public override NSString DeleteLastPathComponent
stringByDeletingPathExtension
public override NSString DeletePathExtension
stringEncodingForData:encodingOptions:convertedString:usedLossyConversion:
public nuint DetectStringEncoding
stringByExpandingTildeInPath
public override NSString ExpandTildeInPath
getLineStart:end:contentsEnd:forRange:
public override void GetLineStart
isEqualToString:
override bool IsEqualTo
lineRangeForRange:
public override NSRange LineRangeForRange
localizedCaseInsensitiveContainsString:
public override bool LocalizedCaseInsensitiveContains
pathWithComponents:
public string[] PathWithComponents
stringByReplacingCharactersInRange:withString:
public override NSString Replace
stringByResolvingSymlinksInPath
public override NSString ResolveSymlinksInPath
stringByStandardizingPath
public override NSString StandarizePath
lowercaseStringWithLocale:
public override string ToLower
uppercaseStringWithLocale:
public override string ToUpper
isAbsolutePath
/* property */ public override bool get_IsAbsolutePath
lastPathComponent
/* property */ public override string get_LastPathComponent
pathComponents
/* property */ public override string[] get_PathComponents
pathExtension
/* property */ public override string get_PathExtension
threadPriority
/* property */ public override Double get_ThreadPriority
setThreadPriority:
/* property */ public override void set_ThreadPriority
cancel
public override void Cancel
exit
public void Exit
main
public override void Main
sleepForTimeInterval:
public void SleepFor
sleepUntilDate:
public void SleepUntil
start
public override void Start
currentThread
/* property */ public NSThread get_Current
isCancelled
/* property */ public override bool get_IsCancelled
isExecuting
/* property */ public override bool get_Executing
isFinished
/* property */ public override bool get_IsFinished
isMainThread
/* property */ public override bool get_IsMainThread
isMultiThreaded
/* property */ public override bool get_IsMultiThreaded
mainThread
/* property */ public NSThread get_MainThread
qualityOfService
/* property */ public override NSQualityOfService get_QualityOfService
setQualityOfService:
/* property */ public override void set_QualityOfService
stackSize
/* property */ public override nuint get_StackSize
setStackSize:
/* property */ public override void set_StackSize
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
public NSTimer CreateScheduledTimer
timerWithTimeInterval:target:selector:userInfo:repeats:
public NSTimer CreateTimer
fire
public override void Fire
fireDate
/* property */ public override NSDate get_FireDate
setFireDate:
/* property */ public override void set_FireDate
isValid
/* property */ public override bool get_IsValid
timeInterval
/* property */ public override Double get_TimeInterval
tolerance
/* property */ public override Double get_Tolerance
setTolerance:
/* property */ public override void set_Tolerance
userInfo
/* property */ public override NSDictionary get_UserInfo
setArray:forKey:
override void _SetArray
setBool:forKey:
public override void SetBool
setData:forKey:
override void _SetData
setDictionary:forKey:
override void _SetDictionary
setDouble:forKey:
public override void SetDouble
setLongLong:forKey:
override void _SetLong
setString:forKey:
override void _SetString
arrayForKey:
public override NSObject[] ArrayForKey
boolForKey:
public override bool BoolForKey
dataForKey:
public override NSData DataForKey
dictionaryForKey:
public override NSDictionary DictionaryForKey
doubleForKey:
public override Double DoubleForKey
longLongForKey:
public override Int64 GetLong
stringForKey:
public override string StringForKey
synchronize
public override bool Synchronize
dictionaryRepresentation
/* property */ public override NSDictionary get_ToDictionary
defaultStore
/* property */ public NSUbiquitousKeyValueStore get_DefaultStore
URLWithString:relativeToURL:
NSUrl _FromStringRelative
URLByAppendingPathComponent:isDirectory:
public override NSUrl Append
URLByAppendingPathExtension:
public override NSUrl AppendPathExtension
bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:
public override NSData CreateBookmarkData
fileURLWithPathComponents:
public NSUrl CreateFileUrl
URLWithString:
public NSUrl FromString
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
public NSUrl FromUTF8Pointer
getFileSystemRepresentation:maxLength:
public override bool GetFileSystemRepresentation
getResourceValue:forKey:error:
override bool GetResourceValue
resourceValuesForKeys:error:
public override NSDictionary GetResourceValues
removeAllCachedResourceValues
public override void RemoveAllCachedResourceValues
removeCachedResourceValueForKey:
public override void RemoveCachedResourceValueForKey
URLByDeletingLastPathComponent
public override NSUrl RemoveLastPathComponent
URLByDeletingPathExtension
public override NSUrl RemovePathExtension
URLByResolvingAliasFileAtURL:options:error:
public NSUrl ResolveAlias
setResourceValue:forKey:error:
override bool SetResourceValue
setTemporaryResourceValue:forKey:
public override void SetTemporaryResourceValue
startAccessingSecurityScopedResource
public override bool StartAccessingSecurityScopedResource
stopAccessingSecurityScopedResource
public override void StopAccessingSecurityScopedResource
absoluteString
/* property */ public override string get_AbsoluteString
absoluteURL
/* property */ public override NSUrl get_AbsoluteUrl
baseURL
/* property */ public override NSUrl get_BaseUrl
fragment
/* property */ public override string get_Fragment
fileSystemRepresentation
/* property */ public override IntPtr get_GetFileSystemRepresentationAsUtf8Ptr
host
/* property */ public override MidiNetworkHost get_Host
isFileURL
/* property */ public override bool get_IsFileUrl
parameterString
/* property */ public override string get_ParameterString
password
/* property */ public override string get_Password
query
/* property */ public override CKQuery get_Query
relativePath
/* property */ public override string get_RelativePath
relativeString
/* property */ public override string get_RelativeString
resourceSpecifier
/* property */ public override string get_ResourceSpecifier
scheme
/* property */ public override string get_Scheme
standardizedURL
/* property */ public override NSUrl get_StandardizedUrl
user
/* property */ public override string get_User
componentsWithString:
public NSUrlComponents FromString
componentsWithURL:resolvingAgainstBaseURL:
public NSUrlComponents FromUrl
URLRelativeToURL:
public override NSUrl GetRelativeUrl
setFragment:
/* property */ public override void set_Fragment
setHost:
/* property */ public override void set_Host
setPassword:
/* property */ public override void set_Password
percentEncodedFragment
/* property */ public override string get_PercentEncodedFragment
setPercentEncodedFragment:
/* property */ public override void set_PercentEncodedFragment
percentEncodedHost
/* property */ public override string get_PercentEncodedHost
setPercentEncodedHost:
/* property */ public override void set_PercentEncodedHost
percentEncodedPassword
/* property */ public override string get_PercentEncodedPassword
setPercentEncodedPassword:
/* property */ public override void set_PercentEncodedPassword
percentEncodedPath
/* property */ public override string get_PercentEncodedPath
setPercentEncodedPath:
/* property */ public override void set_PercentEncodedPath
percentEncodedQuery
/* property */ public override string get_PercentEncodedQuery
setPercentEncodedQuery:
/* property */ public override void set_PercentEncodedQuery
percentEncodedUser
/* property */ public override string get_PercentEncodedUser
setPercentEncodedUser:
/* property */ public override void set_PercentEncodedUser
setPort:
/* property */ public override void set_Port
setQuery:
/* property */ public override void set_Query
queryItems
/* property */ public override NSUrlQueryItem[] get_QueryItems
setQueryItems:
/* property */ public override void set_QueryItems
setScheme:
/* property */ public override void set_Scheme
setUser:
/* property */ public override void set_User
cancelAuthenticationChallenge:
public override void CancelAuthenticationChallenge
canHandleRequest:
public bool CanHandleRequest
continueWithoutCredentialForAuthenticationChallenge:
public override void ContinueWithoutCredential
connectionWithRequest:delegate:
public NSUrlConnection FromRequest
performDefaultHandlingForAuthenticationChallenge:
public override void PerformDefaultHandling
rejectProtectionSpaceAndContinueWithChallenge:
public override void RejectProtectionSpaceAndContinue
sendAsynchronousRequest:queue:completionHandler:
public void SendAsynchronousRequest
setDelegateQueue:
public override void SetDelegateQueue
unscheduleFromRunLoop:forMode:
public override void Unschedule
useCredential:forAuthenticationChallenge:
public override void UseCredential
currentRequest
/* property */ public override NSUrlRequest get_CurrentRequest
newsstandAssetDownload
/* property */ public override NKAssetDownload get_NewsstandAssetDownload
originalRequest
/* property */ public override NSUrlRequest get_OriginalRequest
credentialWithIdentity:certificates:persistence:
NSUrlCredential FromIdentityCertificatesPersistanceInternal
credentialForTrust:
NSUrlCredential FromTrust
credentialWithUser:password:persistence:
public NSUrlCredential FromUserPasswordPersistance
certificates
/* property */ public override SecCertificate[] get_Certificates
hasPassword
/* property */ public override bool get_HasPassword
identity
/* property */ override IntPtr get_Identity
persistence
/* property */ public override NSUrlCredentialPersistence get_Persistence
initWithHost:port:protocol:realm:authenticationMethod:
override IntPtr Init
initWithProxyHost:port:type:realm:authenticationMethod:
override IntPtr InitWithProxy
authenticationMethod
/* property */ public override NEVpnIkeAuthenticationMethod get_AuthenticationMethod
distinguishedNames
/* property */ public override NSData[] get_DistinguishedNames
isProxy
/* property */ public override bool get_IsProxy
protocol
/* property */ public override NEVpnProtocol get_Protocol
proxyType
/* property */ public override string get_ProxyType
realm
/* property */ public override string get_Realm
receivesCredentialSecurely
/* property */ public override bool get_ReceivesCredentialSecurely
serverTrust
/* property */ override IntPtr get_ServerTrust
canInitWithRequest:
public bool CanInitWithRequest
canonicalRequestForRequest:
public NSUrlRequest GetCanonicalRequest
propertyForKey:inRequest:
public NSObject GetProperty
requestIsCacheEquivalent:toRequest:
public bool IsRequestCacheEquivalent
registerClass:
public bool RegisterClass
removePropertyForKey:inRequest:
public void RemoveProperty
setProperty:forKey:inRequest:
public void SetProperty
startLoading
public override void StartLoading
stopLoading
public override void StopLoading
unregisterClass:
public void UnregisterClass
cachedResponse
/* property */ public override NSCachedUrlResponse get_CachedResponse
client
/* property */ public override IGKVoiceChatClient get_Client
request
/* property */ public override NSUrlRequest get_Request
addSuiteNamed:
public override void AddSuite
floatForKey:
public override Single FloatForKey
volatileDomainForName:
public override NSDictionary GetVolatileDomain
initWithSuiteName:
override IntPtr InitWithSuiteName
initWithUser:
override IntPtr InitWithUserName
integerForKey:
public override nint IntForKey
objectIsForcedForKey:
public override bool ObjectIsForced
objectIsForcedForKey:inDomain:
public override bool ObjectIsForced
persistentDomainForName:
public override NSDictionary PersistentDomainForName
persistentDomainNames
public override string[] PersistentDomainNames
registerDefaults:
public override void RegisterDefaults
removePersistentDomainForName:
public override void RemovePersistentDomain
removeSuiteNamed:
public override void RemoveSuite
removeVolatileDomainForName:
public override void RemoveVolatileDomain
resetStandardUserDefaults
public void ResetStandardUserDefaults
setFloat:forKey:
public override void SetFloat
setInteger:forKey:
public override void SetInt
setPersistentDomain:forName:
public override void SetPersistentDomain
setVolatileDomain:forName:
public override void SetVolatileDomain
stringArrayForKey:
public override string[] StringArrayForKey
volatileDomainNames
public override string[] VolatileDomainNames
standardUserDefaults
/* property */ public NSUserDefaults get_StandardUserDefaults
getUUIDBytes:
override void GetUuidBytes
beginUndoGrouping
public override void BeginUndoGrouping
disableUndoRegistration
public override void DisableUndoRegistration
enableUndoRegistration
public override void EnableUndoRegistration
endUndoGrouping
public override void EndUndoGrouping
prepareWithInvocationTarget:
public override NSObject PrepareWithInvocationTarget
redo
public override void Redo
redoMenuTitleForUndoActionName:
public override string RedoMenuTitleForUndoActionName
registerUndoWithTarget:selector:object:
public override void RegisterUndoWithTarget
removeAllActions
public override void RemoveAllActions
removeAllActionsWithTarget:
public override void RemoveAllActions
setActionIsDiscardable:
public override void SetActionIsDiscardable
setActionName:
public override void SetActionname
undo
public override void Undo
undoMenuTitleForUndoActionName:
public override string UndoMenuTitleForUndoActionName
undoNestedGroup
public override void UndoNestedGroup
canRedo
/* property */ public override bool get_CanRedo
canUndo
/* property */ public override bool get_CanUndo
groupingLevel
/* property */ public override nint get_GroupingLevel
groupsByEvent
/* property */ public override bool get_GroupsByEvent
setGroupsByEvent:
/* property */ public override void set_GroupsByEvent
isRedoing
/* property */ public override bool get_IsRedoing
isUndoing
/* property */ public override bool get_IsUndoing
isUndoRegistrationEnabled
/* property */ public override bool get_IsUndoRegistrationEnabled
levelsOfUndo
/* property */ public override nint get_LevelsOfUndo
setLevelsOfUndo:
/* property */ public override void set_LevelsOfUndo
redoActionIsDiscardable
/* property */ public override bool get_RedoActionIsDiscardable
redoActionName
/* property */ public override string get_RedoActionName
redoMenuItemTitle
/* property */ public override string get_RedoMenuItemTitle
runLoopModes
/* property */ public override string[] get_RunLoopModes
setRunLoopModes:
/* property */ public override void set_RunLoopModes
undoActionIsDiscardable
/* property */ public override bool get_UndoActionIsDiscardable
undoActionName
/* property */ public override string get_UndoActionName
undoMenuItemTitle
/* property */ public override string get_UndoMenuItemTitle
cubeMapWithContentsOfFiles:options:queue:completionHandler:
override void BeginLoadCubeMap
cubeMapWithContentsOfFile:options:queue:completionHandler:
public override void BeginLoadCubeMap
cubeMapWithContentsOfURL:options:queue:completionHandler:
public override void BeginLoadCubeMap
textureWithContentsOfFile:options:queue:completionHandler:
public override void BeginTextureLoad
textureWithContentsOfURL:options:queue:completionHandler:
public override void BeginTextureLoad
textureWithContentsOfData:options:queue:completionHandler:
public override void BeginTextureLoad
textureWithCGImage:options:queue:completionHandler:
public override void BeginTextureLoad
cubeMapWithContentsOfFile:options:error:
public GLKTextureInfo CubeMapFromFile
cubeMapWithContentsOfFiles:options:error:
GLKTextureInfo CubeMapFromFiles
cubeMapWithContentsOfURL:options:error:
public GLKTextureInfo CubeMapFromUrl
textureWithContentsOfData:options:error:
public GLKTextureInfo FromData
textureWithContentsOfFile:options:error:
public GLKTextureInfo FromFile
textureWithCGImage:options:error:
public GLKTextureInfo FromImage
textureWithContentsOfURL:options:error:
public GLKTextureInfo FromUrl
startWirelessControllerDiscoveryWithCompletionHandler:
public void StartWirelessControllerDiscovery
stopWirelessControllerDiscovery
public void StopWirelessControllerDiscovery
isAttachedToDevice
/* property */ public override bool get_AttachedToDevice
controllerPausedHandler
/* property */ public override Action`1 get_ControllerPausedHandler
setControllerPausedHandler:
/* property */ public override void set_ControllerPausedHandler
controllers
/* property */ public GCController[] get_Controllers
extendedGamepad
/* property */ public override GCExtendedGamepad get_ExtendedGamepad
gamepad
/* property */ public override GCGamepad get_Gamepad
motion
/* property */ public override GCMotion get_Motion
playerIndex
/* property */ public override nint get_PlayerIndex
setPlayerIndex:
/* property */ public override void set_PlayerIndex
vendorName
/* property */ public override string get_VendorName
snapshotData
/* property */ public override NSData get_SnapshotData
setSnapshotData:
/* property */ public override void set_SnapshotData
setDataReceiveHandler:withContext:
override void _SetDataReceiveHandler
acceptConnectionFromPeer:error:
public override bool AcceptConnection
cancelConnectToPeer:
public override void CancelConnect
connectToPeer:withTimeout:
public override void Connect
denyConnectionFromPeer:
public override void DenyConnection
disconnectFromAllPeers
public override void DisconnectFromAllPeers
disconnectPeerFromAllPeers:
public override void DisconnectPeerFromAllPeers
displayNameForPeer:
public override string DisplayNameForPeer
peersWithConnectionState:
public override string[] PeersWithConnectionState
sendData:toPeers:withDataMode:error:
public override bool SendData
sendDataToAllPeers:withDataMode:error:
public override bool SendDataToAllPeers
isAvailable
/* property */ public override bool get_Available
setAvailable:
/* property */ public override void set_Available
disconnectTimeout
/* property */ public override Double get_DisconnectTimeout
setDisconnectTimeout:
/* property */ public override void set_DisconnectTimeout
displayName
/* property */ public override string get_DisplayName
peerID
/* property */ public override string get_PeerID
sessionID
/* property */ public override string get_SessionID
sessionMode
/* property */ public override GKSessionMode get_SessionMode
cancelWithLocalizableMessageKey:arguments:completionHandler:
public override void Cancel
replyWithLocalizableMessageKey:arguments:data:completionHandler:
public override void Reply
completionDate
/* property */ public override NSDate get_CompletionDate
exchangeID
/* property */ public override string get_ExchangeID
message
/* property */ public override string get_Message
recipients
/* property */ public override GKPlayer[] get_Recipients
replies
/* property */ public override GKTurnBasedExchangeReply[] get_Replies
sendDate
/* property */ public override NSDate get_SendDate
sender
/* property */ public override GKPlayer get_Sender
timeoutDate
/* property */ public override NSDate get_TimeoutDate
recipient
/* property */ public override GKTurnBasedParticipant get_Recipient
replyDate
/* property */ public override NSDate get_ReplyDate
decline
public override void Decline
loadReceivedChallengesWithCompletionHandler:
public void LoadReceivedChallenges
issueDate
/* property */ public override NSDate get_IssueDate
issuingPlayer
/* property */ public override GKPlayer get_IssuingPlayer
issuingPlayerID
/* property */ public override string get_IssuingPlayerID
receivingPlayer
/* property */ public override GKPlayer get_ReceivingPlayer
receivingPlayerID
/* property */ public override string get_ReceivingPlayerID
chooseBestHostingPlayerWithCompletionHandler:
public override void ChooseBestHostingPlayer
chooseBestHostPlayerWithCompletionHandler:
public override void ChooseBestHostPlayer
disconnect
public override void Disconnect
rematchWithCompletionHandler:
public override void Rematch
sendData:toPlayers:withDataMode:error:
public override bool SendData
sendData:toPlayers:dataMode:error:
public override bool SendData
sendDataToAllPlayers:withDataMode:error:
public override bool SendDataToAllPlayers
voiceChatWithName:
public override GKVoiceChat VoiceChatWithName
expectedPlayerCount
/* property */ public override nint get_ExpectedPlayerCount
players
/* property */ public override GKPlayer[] get_Players
playerIDs
/* property */ public override string[] get_PlayerIDs
objectForKeyedSubscript:
public override SKNode GetObjectsMatching
setObject:forKeyedSubscript:
override void _SetObject
evaluateScript:withSourceURL:
public override JSValue EvaluateScript
evaluateScript:
public override JSValue EvaluateScript
contextWithJSGlobalContextRef:
public JSContext FromJSGlobalContextRef
currentArguments
/* property */ public JSValue[] get_CurrentArguments
currentCallee
/* property */ public JSValue get_CurrentCallee
currentContext
/* property */ public EAGLContext get_CurrentContext
currentThis
/* property */ public JSValue get_CurrentThis
exception
/* property */ public override JSValue get_Exception
setException:
/* property */ public override void set_Exception
exceptionHandler
/* property */ public override JSContextExceptionHandler get_ExceptionHandler
setExceptionHandler:
/* property */ public override void set_ExceptionHandler
globalObject
/* property */ public override JSValue get_GlobalObject
JSGlobalContextRef
/* property */ public override IntPtr get_JSGlobalContextRefPtr
virtualMachine
/* property */ public override JSVirtualMachine get_VirtualMachine
objectAtIndexedSubscript:
override NSObject _ObjectAtIndexedSubscript
setObject:atIndexedSubscript:
override void SetObject
toString
override string _ToString
callWithArguments:
public override JSValue Call
constructWithArguments:
public override JSValue Construct
valueWithNewArrayInContext:
public JSValue CreateArray
valueWithNewErrorFromMessage:inContext:
public JSValue CreateError
valueWithNewObjectInContext:
public JSValue CreateObject
valueWithNewRegularExpressionFromPattern:flags:inContext:
public JSValue CreateRegularExpression
defineProperty:descriptor:
public override void DefineProperty
deleteProperty:
public override bool DeleteProperty
valueWithObject:inContext:
public JSValue From
valueWithBool:inContext:
public JSValue From
valueWithDouble:inContext:
public JSValue From
valueWithInt32:inContext:
public JSValue From
valueWithUInt32:inContext:
public JSValue From
valueWithPoint:inContext:
public JSValue From
valueWithRange:inContext:
public JSValue From
valueWithRect:inContext:
public JSValue From
valueWithSize:inContext:
public JSValue From
valueWithJSValueRef:inContext:
public JSValue FromJSJSValueRef
valueForProperty:
public override NSObject ValueForProperty
hasProperty:
public override bool HasProperty
invokeMethod:withArguments:
public override JSValue Invoke
isEqualToObject:
public override bool IsEqualTo
isEqualWithTypeCoercionToObject:
public override bool IsEqualWithTypeCoercionTo
isInstanceOf:
public override bool IsInstanceOf
valueWithNullInContext:
public JSValue Null
setValue:forProperty:
public override void SetProperty
setValue:atIndex:
public override void SetValue
toArray
public override JSValue[] ToArray
toBool
public override bool ToBool
toDate
public override NSDate ToDate
toDictionary
public override NSDictionary ToDictionary
toDouble
public override Double ToDouble
toInt32
public override int ToInt32
toNumber
public override NSNumber ToNumber
toObject
public override NSObject ToObject
toObjectOfClass:
public override NSObject ToObject
toPoint
public override CGPoint ToPoint
toRange
public override NSRange ToRange
toRect
public override CGRect ToRect
toSize
public override CGSize ToSize
toUInt32
public override UInt32 ToUInt32
valueWithUndefinedInContext:
public JSValue Undefined
context
/* property */ public override IntPtr get_Context
isBoolean
/* property */ public override bool get_IsBoolean
isNull
/* property */ public override bool get_IsNull
isNumber
/* property */ public override bool get_IsNumber
isObject
/* property */ public override bool get_IsObject
isString
/* property */ public override bool get_IsString
isUndefined
/* property */ public override bool get_IsUndefined
JSValueRef
/* property */ public override IntPtr get_JSValueRefPtr
circleWithCenterCoordinate:radius:
public MKCircle Circle
circleWithMapRect:
public MKCircle CircleWithMapRect
intersectsMapRect:
public override bool Intersects
boundingMapRect
/* property */ public override MKMapRect get_BoundingMapRect
canReplaceMapContent
/* property */ public override bool get_CanReplaceMapContent
coordinate
/* property */ public override CLLocationCoordinate2D get_Coordinate
radius
/* property */ public override nfloat get_Radius
polylineWithCoordinates:count:
MKPolyline _FromCoordinates
polylineWithPoints:count:
MKPolyline _FromPoints
startWithCompletionHandler:
public override void Start
isSearching
/* property */ public override bool get_IsSearching
openInMapsWithLaunchOptions:
override bool _OpenInMaps
openMapsWithItems:launchOptions:
bool _OpenMaps
mapItemForCurrentLocation
public MKMapItem MapItemForCurrentLocation
isCurrentLocation
/* property */ public override bool get_IsCurrentLocation
phoneNumber
/* property */ public override string get_PhoneNumber
setPhoneNumber:
/* property */ public override void set_PhoneNumber
placemark
/* property */ public override MKPlacemark get_Placemark
setUrl:
/* property */ public override void set_Url
getCoordinates:range:
override void GetCoords
points
/* property */ override IntPtr get__Points
pointCount
/* property */ public override nint get_PointCount
canDrawMapRect:zoomScale:
public override bool CanDrawMapRect
drawMapRect:zoomScale:inContext:
public override void DrawMapRect
mapPointForPoint:
public override MKMapPoint MapPointForPoint
mapRectForRect:
public override MKMapRect MapRectForRect
pointForMapPoint:
public override CGPoint PointForMapPoint
rectForMapRect:
public override CGRect RectForMapRect
setNeedsDisplayInMapRect:
public override void SetNeedsDisplay
setNeedsDisplayInMapRect:zoomScale:
public override void SetNeedsDisplay
overlay
/* property */ public override IMKOverlay get_Overlay
polygonWithCoordinates:count:
MKPolygon _FromCoordinates
polygonWithCoordinates:count:interiorPolygons:
MKPolygon _FromCoordinates
polygonWithPoints:count:
MKPolygon _FromPoints
polygonWithPoints:count:interiorPolygons:
MKPolygon _FromPoints
interiorPolygons
/* property */ public override MKPolygon[] get_InteriorPolygons
textWithString:extrusionDepth:
public SCNText Create
chamferProfile
/* property */ public override UIBezierPath get_ChamferProfile
setChamferProfile:
/* property */ public override void set_ChamferProfile
chamferRadius
/* property */ public override nfloat get_ChamferRadius
setChamferRadius:
/* property */ public override void set_ChamferRadius
containerFrame
/* property */ public override CGRect get_ContainerFrame
setContainerFrame:
/* property */ public override void set_ContainerFrame
extrusionDepth
/* property */ public override nfloat get_ExtrusionDepth
setExtrusionDepth:
/* property */ public override void set_ExtrusionDepth
flatness
/* property */ public override nfloat get_Flatness
setFlatness:
/* property */ public override void set_Flatness
isAnimationForKeyPaused:
public override bool IsAnimationPaused
pauseAnimationForKey:
public override void PauseAnimation
removeAnimationForKey:fadeOutDuration:
public override void RemoveAnimation
resumeAnimationForKey:
public override void ResumeAnimation
geometryWithSources:elements:
public SCNGeometry Create
geometry
/* property */ public override SCNGeometry get_Geometry
getBoundingBoxMin:max:
public override bool GetBoundingBox
getBoundingSphereCenter:radius:
public override bool GetBoundingSphere
geometryElementAtIndex:
public override SCNGeometryElement GetGeometryElement
geometrySourcesForSemantic:
public override SCNGeometrySource[] GetGeometrySourcesForSemantic
materialWithName:
public override SCNMaterial GetMaterial
handleBindingOfSymbol:usingBlock:
public override void HandleBinding
handleUnbindingOfSymbol:usingBlock:
public override void HandleUnbinding
insertMaterial:atIndex:
public override void InsertMaterial
removeMaterialAtIndex:
public override void RemoveMaterial
replaceMaterialAtIndex:withMaterial:
public override void ReplaceMaterial
setBoundingBoxMin:max:
public override void SetBoundingBox
edgeCreasesElement
/* property */ public override SCNGeometryElement get_EdgeCreasesElement
setEdgeCreasesElement:
/* property */ public override void set_EdgeCreasesElement
edgeCreasesSource
/* property */ public override SCNGeometrySource get_EdgeCreasesSource
setEdgeCreasesSource:
/* property */ public override void set_EdgeCreasesSource
firstMaterial
/* property */ public override SCNMaterial get_FirstMaterial
setFirstMaterial:
/* property */ public override void set_FirstMaterial
geometryElementCount
/* property */ public override nint get_GeometryElementCount
levelsOfDetail
/* property */ public override nint get_LevelsOfDetail
setLevelsOfDetail:
/* property */ public override void set_LevelsOfDetail
materials
/* property */ public override SCNMaterial[] get_Materials
setMaterials:
/* property */ public override void set_Materials
program
/* property */ public override SCNProgram get_Program
setProgram:
/* property */ public override void set_Program
subdivisionLevel
/* property */ public override nuint get_SubdivisionLevel
setSubdivisionLevel:
/* property */ public override void set_SubdivisionLevel
shaderModifiers
/* property */ public override NSDictionary get_WeakShaderModifiers
setShaderModifiers:
/* property */ public override void set_WeakShaderModifiers
geometrySourceWithData:semantic:vectorCount:floatComponents:componentsPerVector:bytesPerComponent:dataOffset:dataStride:
public SCNGeometrySource FromData
geometrySourceWithNormals:count:
SCNGeometrySource FromNormals
geometrySourceWithTextureCoordinates:count:
SCNGeometrySource FromTextureCoordinates
geometrySourceWithVertices:count:
SCNGeometrySource FromVertices
bytesPerComponent
/* property */ public override nint get_BytesPerComponent
componentsPerVector
/* property */ public override nint get_ComponentsPerVector
dataOffset
/* property */ public override nint get_DataOffset
dataStride
/* property */ public override nint get_DataStride
floatComponents
/* property */ public override bool get_FloatComponents
semantic
/* property */ public override NSString get_Semantic
vectorCount
/* property */ public override nint get_VectorCount
addChildNode:
public override void AddChildNode
addParticleSystem:
public override void AddParticleSystem
clone
public override SCNNode Clone
convertPosition:fromNode:
public override SCNVector3 ConvertPositionFromNode
convertPosition:toNode:
public override SCNVector3 ConvertPositionToNode
convertTransform:fromNode:
public override SCNMatrix4 ConvertTransformFromNode
convertTransform:toNode:
public override SCNMatrix4 ConvertTransformToNode
node
/* property */ public override SKNode get_Node
enumerateChildNodesUsingBlock:
public override void EnumerateChildNodes
childNodeWithName:recursively:
public override SCNNode FindChildNode
childNodesPassingTest:
public override SCNNode[] FindNodes
flattenedClone
public override SCNNode FlattenedClone
nodeWithGeometry:
public SCNNode FromGeometry
hasActions
public override bool HasActions
hitTestWithSegmentFromPoint:toPoint:options:
public override SCNHitTestResult[] HitTest
insertChildNode:atIndex:
public override void InsertChildNode
removeActionForKey:
public override void RemoveAction
removeAllParticleSystems
public override void RemoveAllParticleSystems
removeFromParentNode
public SCNAction RemoveFromParentNode
removeParticleSystem:
public override void RemoveParticleSystem
replaceChildNode:with:
public override void ReplaceChildNode
runAction:
public override void RunAction
runAction:completionHandler:
public override void RunAction
runAction:forKey:
public override void RunAction
runAction:forKey:completionHandler:
public override void RunAction
camera
public SCNCamera Create
setCamera:
/* property */ public override void set_Camera
castsShadow
/* property */ public override bool get_CastsShadow
setCastsShadow:
/* property */ public override void set_CastsShadow
categoryBitMask
/* property */ public override UInt32 get_CategoryBitMask
setCategoryBitMask:
/* property */ public override void set_CategoryBitMask
childNodes
/* property */ public override SCNNode[] get_ChildNodes
constraints
/* property */ public override NSLayoutConstraint[] get_Constraints
setConstraints:
/* property */ public override void set_Constraints
eulerAngles
/* property */ public override SCNVector3 get_EulerAngles
setEulerAngles:
/* property */ public override void set_EulerAngles
setGeometry:
/* property */ public override void set_Geometry
light
public SCNLight Create
setLight:
/* property */ public override void set_Light
morpher
/* property */ public override SCNMorpher get_Morpher
setMorpher:
/* property */ public override void set_Morpher
parentNode
/* property */ public override SCNNode get_ParentNode
particleSystems
/* property */ public override SCNParticleSystem[] get_ParticleSystems
physicsBody
/* property */ public override SKPhysicsBody get_PhysicsBody
setPhysicsBody:
/* property */ public override void set_PhysicsBody
physicsField
/* property */ public override SCNPhysicsField get_PhysicsField
setPhysicsField:
/* property */ public override void set_PhysicsField
pivot
/* property */ public override SCNMatrix4 get_Pivot
setPivot:
/* property */ public override void set_Pivot
presentationNode
/* property */ public override SCNNode get_PresentationNode
renderingOrder
/* property */ public override nint get_RenderingOrder
setRenderingOrder:
/* property */ public override void set_RenderingOrder
rotation
/* property */ public override nfloat get_Rotation
setRotation:
/* property */ public override void set_Rotation
scale
/* property */ public override Single get_Scale
setScale:
/* property */ public override void set_Scale
skinner
/* property */ public override SCNSkinner get_Skinner
setSkinner:
/* property */ public override void set_Skinner
rendererDelegate
/* property */ public override NSObject get_WeakRendererDelegate
setRendererDelegate:
/* property */ public override void set_WeakRendererDelegate
worldTransform
/* property */ public override SCNMatrix4 get_WorldTransform
addModifierForProperties:atStage:withBlock:
public override void AddModifier
particleSystem
public SCNParticleSystem Create
particleSystemNamed:inDirectory:
public SCNParticleSystem Create
handleEvent:forProperties:withBlock:
public override void HandleEvent
removeAllModifiers
public override void RemoveAllModifiers
removeModifiersOfStage:
public override void RemoveModifiers
acceleration
/* property */ public override CMAcceleration get_Acceleration
setAcceleration:
/* property */ public override void set_Acceleration
affectedByGravity
/* property */ public override bool get_AffectedByGravity
setAffectedByGravity:
/* property */ public override void set_AffectedByGravity
affectedByPhysicsFields
/* property */ public override bool get_AffectedByPhysicsFields
setAffectedByPhysicsFields:
/* property */ public override void set_AffectedByPhysicsFields
birthDirection
/* property */ public override SCNParticleBirthDirection get_BirthDirection
setBirthDirection:
/* property */ public override void set_BirthDirection
birthLocation
/* property */ public override SCNParticleBirthLocation get_BirthLocation
setBirthLocation:
/* property */ public override void set_BirthLocation
birthRate
/* property */ public override Single get_BirthRate
setBirthRate:
/* property */ public override void set_BirthRate
birthRateVariation
/* property */ public override nfloat get_BirthRateVariation
setBirthRateVariation:
/* property */ public override void set_BirthRateVariation
isBlackPassEnabled
/* property */ public override bool get_BlackPassEnabled
setBlackPassEnabled:
/* property */ public override void set_BlackPassEnabled
blendMode
/* property */ public override SKBlendMode get_BlendMode
setBlendMode:
/* property */ public override void set_BlendMode
colliderNodes
/* property */ public override SCNNode[] get_ColliderNodes
setColliderNodes:
/* property */ public override void set_ColliderNodes
dampingFactor
/* property */ public override nfloat get_DampingFactor
setDampingFactor:
/* property */ public override void set_DampingFactor
emissionDuration
/* property */ public override nfloat get_EmissionDuration
setEmissionDuration:
/* property */ public override void set_EmissionDuration
emissionDurationVariation
/* property */ public override nfloat get_EmissionDurationVariation
setEmissionDurationVariation:
/* property */ public override void set_EmissionDurationVariation
emitterShape
/* property */ public override string get_Shape
setEmitterShape:
/* property */ public override void set_Shape
emittingDirection
/* property */ public override SCNVector3 get_EmittingDirection
setEmittingDirection:
/* property */ public override void set_EmittingDirection
fresnelExponent
/* property */ public override nfloat get_FresnelExponent
setFresnelExponent:
/* property */ public override void set_FresnelExponent
idleDuration
/* property */ public override nfloat get_IdleDuration
setIdleDuration:
/* property */ public override void set_IdleDuration
idleDurationVariation
/* property */ public override nfloat get_IdleDurationVariation
setIdleDurationVariation:
/* property */ public override void set_IdleDurationVariation
imageSequenceAnimationMode
/* property */ public override SCNParticleImageSequenceAnimationMode get_ImageSequenceAnimationMode
setImageSequenceAnimationMode:
/* property */ public override void set_ImageSequenceAnimationMode
imageSequenceColumnCount
/* property */ public override nuint get_ImageSequenceColumnCount
setImageSequenceColumnCount:
/* property */ public override void set_ImageSequenceColumnCount
imageSequenceFrameRate
/* property */ public override nfloat get_ImageSequenceFrameRate
setImageSequenceFrameRate:
/* property */ public override void set_ImageSequenceFrameRate
imageSequenceFrameRateVariation
/* property */ public override nfloat get_ImageSequenceFrameRateVariation
setImageSequenceFrameRateVariation:
/* property */ public override void set_ImageSequenceFrameRateVariation
imageSequenceInitialFrame
/* property */ public override nfloat get_ImageSequenceInitialFrame
setImageSequenceInitialFrame:
/* property */ public override void set_ImageSequenceInitialFrame
imageSequenceInitialFrameVariation
/* property */ public override nfloat get_ImageSequenceInitialFrameVariation
setImageSequenceInitialFrameVariation:
/* property */ public override void set_ImageSequenceInitialFrameVariation
imageSequenceRowCount
/* property */ public override nuint get_ImageSequenceRowCount
setImageSequenceRowCount:
/* property */ public override void set_ImageSequenceRowCount
isLightingEnabled
/* property */ public override bool get_LightingEnabled
setLightingEnabled:
/* property */ public override void set_LightingEnabled
isLocal
/* property */ public override bool get_Local
setLocal:
/* property */ public override void set_Local
loops
/* property */ public override bool get_Loops
setLoops:
/* property */ public override void set_Loops
orientationMode
/* property */ public override SCNParticleOrientationMode get_OrientationMode
setOrientationMode:
/* property */ public override void set_OrientationMode
particleAngle
/* property */ public override nfloat get_ParticleAngle
setParticleAngle:
/* property */ public override void set_ParticleAngle
particleAngleVariation
/* property */ public override nfloat get_ParticleAngleVariation
setParticleAngleVariation:
/* property */ public override void set_ParticleAngleVariation
particleAngularVelocity
/* property */ public override nfloat get_ParticleAngularVelocity
setParticleAngularVelocity:
/* property */ public override void set_ParticleAngularVelocity
particleAngularVelocityVariation
/* property */ public override nfloat get_ParticleAngularVelocityVariation
setParticleAngularVelocityVariation:
/* property */ public override void set_ParticleAngularVelocityVariation
particleBounce
/* property */ public override nfloat get_ParticleBounce
setParticleBounce:
/* property */ public override void set_ParticleBounce
particleBounceVariation
/* property */ public override nfloat get_ParticleBounceVariation
setParticleBounceVariation:
/* property */ public override void set_ParticleBounceVariation
particleCharge
/* property */ public override nfloat get_ParticleCharge
setParticleCharge:
/* property */ public override void set_ParticleCharge
particleChargeVariation
/* property */ public override nfloat get_ParticleChargeVariation
setParticleChargeVariation:
/* property */ public override void set_ParticleChargeVariation
particleColor
/* property */ public override UIColor get_ParticleColor
setParticleColor:
/* property */ public override void set_ParticleColor
particleColorVariation
/* property */ public override SCNVector4 get_ParticleColorVariation
setParticleColorVariation:
/* property */ public override void set_ParticleColorVariation
particleDiesOnCollision
/* property */ public override bool get_ParticleDiesOnCollision
setParticleDiesOnCollision:
/* property */ public override void set_ParticleDiesOnCollision
particleFriction
/* property */ public override nfloat get_ParticleFriction
setParticleFriction:
/* property */ public override void set_ParticleFriction
particleFrictionVariation
/* property */ public override nfloat get_ParticleFrictionVariation
setParticleFrictionVariation:
/* property */ public override void set_ParticleFrictionVariation
particleImage
/* property */ public override NSObject get_ParticleImage
setParticleImage:
/* property */ public override void set_ParticleImage
particleLifeSpan
/* property */ public override nfloat get_ParticleLifeSpan
setParticleLifeSpan:
/* property */ public override void set_ParticleLifeSpan
particleLifeSpanVariation
/* property */ public override nfloat get_ParticleLifeSpanVariation
setParticleLifeSpanVariation:
/* property */ public override void set_ParticleLifeSpanVariation
particleMass
/* property */ public override nfloat get_ParticleMass
setParticleMass:
/* property */ public override void set_ParticleMass
particleMassVariation
/* property */ public override nfloat get_ParticleMassVariation
setParticleMassVariation:
/* property */ public override void set_ParticleMassVariation
particleSize
/* property */ public override CGSize get_ParticleSize
setParticleSize:
/* property */ public override void set_ParticleSize
particleSizeVariation
/* property */ public override nfloat get_ParticleSizeVariation
setParticleSizeVariation:
/* property */ public override void set_ParticleSizeVariation
particleVelocity
/* property */ public override nfloat get_ParticleVelocity
setParticleVelocity:
/* property */ public override void set_ParticleVelocity
particleVelocityVariation
/* property */ public override nfloat get_ParticleVelocityVariation
setParticleVelocityVariation:
/* property */ public override void set_ParticleVelocityVariation
sortingMode
/* property */ public override SCNParticleSortingMode get_SortingMode
setSortingMode:
/* property */ public override void set_SortingMode
speedFactor
/* property */ public override nfloat get_SpeedFactor
setSpeedFactor:
/* property */ public override void set_SpeedFactor
spreadingAngle
/* property */ public override nfloat get_SpreadingAngle
setSpreadingAngle:
/* property */ public override void set_SpreadingAngle
stretchFactor
/* property */ public override nfloat get_StretchFactor
setStretchFactor:
/* property */ public override void set_StretchFactor
systemSpawnedOnCollision
/* property */ public override SCNParticleSystem get_SystemSpawnedOnCollision
setSystemSpawnedOnCollision:
/* property */ public override void set_SystemSpawnedOnCollision
systemSpawnedOnDying
/* property */ public override SCNParticleSystem get_SystemSpawnedOnDying
setSystemSpawnedOnDying:
/* property */ public override void set_SystemSpawnedOnDying
systemSpawnedOnLiving
/* property */ public override SCNParticleSystem get_SystemSpawnedOnLiving
setSystemSpawnedOnLiving:
/* property */ public override void set_SystemSpawnedOnLiving
warmupDuration
/* property */ public override nfloat get_WarmupDuration
setWarmupDuration:
/* property */ public override void set_WarmupDuration
propertyControllers
/* property */ public override NSDictionary get_WeakPropertyControllers
setPropertyControllers:
/* property */ public override void set_WeakPropertyControllers
shapeWithShapes:transforms:
SCNPhysicsShape Create
shapeWithGeometry:options:
public SCNPhysicsShape Create
shapeWithNode:options:
public SCNPhysicsShape Create
addParticleSystem:withTransform:
public override void AddParticleSystem
scene
/* property */ public override SKScene get_Scene
sceneNamed:
public SCNScene FromFile
sceneNamed:inDirectory:options:
public SCNScene FromFile
sceneWithURL:options:error:
public SCNScene FromUrl
attributeForKey:
public override NSObject GetAttribute
setAttribute:forKey:
public override void SetAttribute
background
/* property */ public override UIImage get_Background
fogColor
/* property */ public override NSObject get_FogColor
setFogColor:
/* property */ public override void set_FogColor
fogDensityExponent
/* property */ public override nfloat get_FogDensityExponent
setFogDensityExponent:
/* property */ public override void set_FogDensityExponent
fogEndDistance
/* property */ public override nfloat get_FogEndDistance
setFogEndDistance:
/* property */ public override void set_FogEndDistance
fogStartDistance
/* property */ public override nfloat get_FogStartDistance
setFogStartDistance:
/* property */ public override void set_FogStartDistance
physicsWorld
/* property */ public override SKPhysicsWorld get_PhysicsWorld
rootNode
/* property */ public override SCNNode get_RootNode
entriesPassingTest:
public override NSObject[] EntriesPassingTest
sceneSourceWithData:options:
public SCNSceneSource FromData
sceneSourceWithURL:options:
public SCNSceneSource FromUrl
entryWithIdentifier:withClass:
public override NSObject GetEntryWithIdentifier
identifiersOfEntriesWithClass:
public override string[] GetIdentifiersOfEntries
sceneWithOptions:statusHandler:
public override SCNScene SceneFromOptions
sceneWithOptions:error:
public override SCNScene SceneWithOption
skinnerWithBaseGeometry:bones:boneInverseBindTransforms:boneWeights:boneIndices:
SCNSkinner _Create
boneInverseBindTransforms
/* property */ override NSArray get__BoneInverseBindTransforms
baseGeometry
/* property */ public override SCNGeometry get_BaseGeometry
setBaseGeometry:
/* property */ public override void set_BaseGeometry
baseGeometryBindTransform
/* property */ public override SCNMatrix4 get_BaseGeometryBindTransform
setBaseGeometryBindTransform:
/* property */ public override void set_BaseGeometryBindTransform
boneIndices
/* property */ public override SCNGeometrySource get_BoneIndices
bones
/* property */ public override SCNNode[] get_Bones
boneWeights
/* property */ public override SCNGeometrySource get_BoneWeights
skeleton
/* property */ public override SCNNode get_Skeleton
setSkeleton:
/* property */ public override void set_Skeleton
techniqueWithDictionary:
public SCNTechnique Create
techniqueBySequencingTechniques:
public SCNTechnique Create
addImage:
public override bool AddImage
addURL:
public override bool AddUrl
composeViewControllerForServiceType:
public SLComposeViewController FromService
isAvailableForServiceType:
public bool IsAvailable
removeAllImages
public override bool RemoveAllImages
removeAllURLs
public override bool RemoveAllUrls
setInitialText:
public override bool SetInitialText
completionHandler
/* property */ public override Action`2 get_CompletionHandler
setCompletionHandler:
/* property */ public override void set_CompletionHandler
serviceType
/* property */ public override string get_ServiceType
addMultipartData:withName:type:filename:
public override void AddMultipartData
requestForServiceType:requestMethod:URL:parameters:
public SLRequest Create
preparedURLRequest
public override NSUrlRequest GetPreparedUrlRequest
performRequestWithHandler:
public override void PerformRequest
account
/* property */ public override ACAccount get_Account
setAccount:
/* property */ public override void set_Account
parameters
/* property */ public override NSDictionary get_Parameters
requestMethod
/* property */ public override TWRequestMethod get_RequestMethod
animateWithTextures:timePerFrame:
public SKAction AnimateWithTextures
animateWithTextures:timePerFrame:resize:restore:
public SKAction AnimateWithTextures
colorizeWithColor:colorBlendFactor:duration:
public SKAction ColorizeWithColor
colorizeWithColorBlendFactor:duration:
public SKAction ColorizeWithColorBlendFactor
customActionWithDuration:actionBlock:
public SCNAction CustomAction
fadeAlphaBy:duration:
public SKAction FadeAlphaBy
fadeAlphaTo:duration:
public SKAction FadeAlphaTo
fadeInWithDuration:
public SCNAction FadeIn
fadeOutWithDuration:
public SCNAction FadeOut
falloffBy:duration:
public SKAction Falloff
followPath:duration:
public SKAction FollowPath
followPath:asOffset:orientToPath:duration:
public SKAction FollowPath
followPath:speed:
public SKAction FollowPath
followPath:asOffset:orientToPath:speed:
public SKAction FollowPath
group:
public SCNAction Group
hide
public SKAction Hide
moveByX:y:duration:
public SKAction MoveBy
moveBy:duration:
public SCNAction MoveBy
moveTo:duration:
public SCNAction MoveTo
moveToX:duration:
public SKAction MoveToX
moveToY:duration:
public SKAction MoveToY
performSelector:onTarget:
public SKAction PerformSelector
playSoundFileNamed:waitForCompletion:
public SKAction PlaySoundFileNamed
reachTo:rootNode:duration:
public SKAction ReachTo
reachTo:rootNode:velocity:
public SKAction ReachTo
reachToNode:rootNode:duration:
public SKAction ReachToNode
reachToNode:rootNode:velocity:
public SKAction ReachToNode
removeFromParent
public override void RemoveFromParent
repeatAction:count:
public SCNAction RepeatAction
repeatActionForever:
public SCNAction RepeatActionForever
resizeByWidth:height:duration:
public SKAction ResizeByWidth
resizeToWidth:height:duration:
public SKAction ResizeTo
resizeToHeight:duration:
public SKAction ResizeToHeight
resizeToWidth:duration:
public SKAction ResizeToWidth
rotateByAngle:duration:
public SKAction RotateByAngle
rotateToAngle:duration:
public SKAction RotateToAngle
rotateToAngle:duration:shortestUnitArc:
public SKAction RotateToAngle
runBlock:
public SCNAction Run
runBlock:queue:
public SCNAction Run
runAction:onChildWithName:
public SKAction RunAction
scaleBy:duration:
public SCNAction ScaleBy
scaleXBy:y:duration:
public SKAction ScaleBy
scaleTo:duration:
public SCNAction ScaleTo
scaleXTo:y:duration:
public SKAction ScaleTo
scaleXTo:duration:
public SKAction ScaleXTo
scaleYTo:duration:
public SKAction ScaleYTo
sequence:
public SCNAction Sequence
setTexture:
/* property */ public override void set_Texture
setTexture:resize:
public SKAction SetTexture
speedBy:duration:
public SKAction SpeedBy
speedTo:duration:
public SKAction SpeedTo
strengthBy:duration:
public SKAction StrengthBy
strengthTo:duration:
public SKAction StrengthTo
unhide
public SKAction Unhide
waitForDuration:
public SCNAction Wait
waitForDuration:withRange:
public SCNAction Wait
reversedAction
public override SCNAction ReversedAction
timingMode
/* property */ public override SCNActionTimingMode get_TimingMode
setTimingMode:
/* property */ public override void set_TimingMode
addKeyframeValue:time:
public override void AddKeyframeValue
getKeyframeTimeForIndex:
public override nfloat GetKeyframeTime
getKeyframeValueForIndex:
public override NSObject GetKeyframeValue
removeKeyframeAtIndex:
public override void RemoveKeyframe
removeLastKeyframe
public override void RemoveLastKeyframe
sampleAtTime:
public override NSObject SampleAtTime
setKeyframeTime:forIndex:
public override void SetKeyframeTime
setKeyframeValue:forIndex:
public override void SetKeyframeValue
setKeyframeValue:time:forIndex:
public override void SetKeyframeValue
interpolationMode
/* property */ public override SKInterpolationMode get_InterpolationMode
setInterpolationMode:
/* property */ public override void set_InterpolationMode
repeatMode
/* property */ public override MPMusicRepeatMode get_RepeatMode
setRepeatMode:
/* property */ public override void set_RepeatMode
addChild:
public override void AddChild
calculateAccumulatedFrame
public override CGRect CalculateAccumulatedFrame
convertPoint:fromNode:
public override CGPoint ConvertPointFromNode
convertPoint:toNode:
public override CGPoint ConvertPointToNode
enumerateChildNodesWithName:usingBlock:
public override void EnumerateChildNodes
childNodeWithName:
public override SKNode GetChildNode
nodeAtPoint:
public override SKNode GetNodeAtPoint
nodesAtPoint:
public override SKNode[] GetNodesAtPoint
inParentHierarchy:
public override bool InParentHierarchy
insertChild:atIndex:
public override void InsertChild
intersectsNode:
public override bool IntersectsNode
removeAllChildren
public override void RemoveAllChildren
removeChildrenInArray:
public override void RemoveChildren
runAction:completion:
public override void RunAction
runAction:withKey:
public override void RunAction
setAlpha:
public override void SetAlpha
children
/* property */ public override SKNode[] get_Children
parent
/* property */ public override SKNode get_Parent
reachConstraints
/* property */ public override SKReachConstraints get_ReachConstraints
setReachConstraints:
/* property */ public override void set_ReachConstraints
userData
/* property */ public override NSMutableDictionary get_UserData
setUserData:
/* property */ public override void set_UserData
isUserInteractionEnabled
/* property */ public override bool get_UserInteractionEnabled
setUserInteractionEnabled:
/* property */ public override void set_UserInteractionEnabled
xScale
/* property */ public override nfloat get_XScale
setXScale:
/* property */ public override void set_XScale
yScale
/* property */ public override nfloat get_YScale
setYScale:
/* property */ public override void set_YScale
zRotation
/* property */ public override nfloat get_ZRotation
setZRotation:
/* property */ public override void set_ZRotation
customFieldWithEvaluationBlock:
public SCNPhysicsField CustomField
dragField
public SCNPhysicsField CreateDragField
electricField
public SCNPhysicsField CreateElectricField
linearGravityFieldWithVector:
public SKFieldNode CreateLinearGravityField
magneticField
/* property */ public override CMMagneticField get_MagneticField
noiseFieldWithSmoothness:animationSpeed:
public SCNPhysicsField CreateNoiseField
radialGravityField
public SCNPhysicsField CreateRadialGravityField
springField
public SCNPhysicsField CreateSpringField
turbulenceFieldWithSmoothness:animationSpeed:
public SCNPhysicsField CreateTurbulenceField
velocityFieldWithVector:
public SKFieldNode CreateVelocityField
velocityFieldWithTexture:
public SKFieldNode CreateVelocityField
vortexField
public SCNPhysicsField CreateVortexField
animationSpeed
/* property */ public override Single get_AnimationSpeed
setAnimationSpeed:
/* property */ public override void set_AnimationSpeed
direction
/* property */ public override SCNVector3 get_Direction
setDirection:
/* property */ public override void set_Direction
isExclusive
/* property */ public override bool get_Exclusive
setExclusive:
/* property */ public override void set_Exclusive
falloff
/* property */ public override nfloat get_Falloff
setFalloff:
/* property */ public override void set_Falloff
minimumRadius
/* property */ public override Single get_MinimumRadius
setMinimumRadius:
/* property */ public override void set_MinimumRadius
region
/* property */ public override CLRegion get_Region
setRegion:
public override void SetRegion
smoothness
/* property */ public override Single get_Smoothness
setSmoothness:
/* property */ public override void set_Smoothness
strength
/* property */ public override nfloat get_Strength
setStrength:
/* property */ public override void set_Strength
texture
/* property */ public override IMTLTexture get_Texture
receiptProperties
/* property */ public override NSDictionary get_WeakReceiptProperties
allowsResizing
/* property */ override NSNumber get_allowsResizing
height
/* property */ public override nuint get_Height
menuBarVisibility
/* property */ override NSNumber get_menuBarVisibility
statusBarVisibility
/* property */ override NSNumber get_statusBarVisibility
toolbarsVisibility
/* property */ override NSNumber get_toolbarsVisibility
width
/* property */ public override nuint get_Width
x
/* property */ public override Double get_X
y
/* property */ public override Double get_Y
xamarinApplySelector
public void Apply
xamarinFireSelector:
public void Fire
errorWithDomain:code:userInfo:
public NSError FromDomain
code
/* property */ public override nint get_Code
helpAnchor
/* property */ public override string get_HelpAnchor
localizedDescription
/* property */ public override string get_LocalizedDescription
localizedFailureReason
/* property */ public override string get_LocalizedFailureReason
localizedRecoveryOptions
/* property */ public override string[] get_LocalizedRecoveryOptions
localizedRecoverySuggestion
/* property */ public override string get_LocalizedRecoverySuggestion
conformsToProtocol:
public override bool ConformsToProtocol
awakeFromNib
public override void AwakeFromNib
addObserver:forKeyPath:options:context:
public override void AddObserver
automaticallyNotifiesObserversForKey:
public bool AutomaticallyNotifiesObserversForKey
cancelPreviousPerformRequestsWithTarget:
public void CancelPreviousPerformRequest
cancelPreviousPerformRequestsWithTarget:selector:object:
public void CancelPreviousPerformRequest
copy
public override NSObject Copy
didChange:valuesAtIndexes:forKey:
public override void DidChange
didChangeValueForKey:withSetMutation:usingObjects:
public override void DidChangeValueForKey
doesNotRecognizeSelector:
public override void DoesNotRecognizeSelector
dictionaryWithValuesForKeys:
public override NSDictionary GetDictionaryOfValuesFromKeys
keyPathsForValuesAffectingValueForKey:
public NSSet GetKeyPathsForValuesAffecting
hash
public override nuint GetNativeHash
isKindOfClass:
public override bool IsKindOfClass
isMemberOfClass:
public override bool IsMemberOfClass
mutableCopy
public override NSObject MutableCopy
observeValueForKeyPath:ofObject:change:context:
public override void ObserveValueForKeyPath
performSelector:withObject:afterDelay:inModes:
public override void PerformSelector
performSelector:withObject:afterDelay:
public override void PerformSelector
performSelector:onThread:withObject:waitUntilDone:
public override void PerformSelector
performSelector:onThread:withObject:waitUntilDone:modes:
public override void PerformSelector
performSelector:
public override NSObject PerformSelector
performSelector:withObject:
public override NSObject PerformSelector
performSelector:withObject:withObject:
public override NSObject PerformSelector
prepareForInterfaceBuilder
public override void PrepareForInterfaceBuilder
removeObserver:forKeyPath:context:
public override void RemoveObserver
removeObserver:forKeyPath:
public override void RemoveObserver
respondsToSelector:
public override bool RespondsToSelector
setNilValueForKey:
public override void SetNilValueForKey
setValue:forKeyPath:
public override void SetValueForKeyPath
setValue:forUndefinedKey:
public override void SetValueForUndefinedKey
setValuesForKeysWithDictionary:
public override void SetValuesForKeysWithDictionary
valueForKeyPath:
public override NSObject ValueForKeyPath
valueForUndefinedKey:
public override NSObject ValueForUndefinedKey
willChange:valuesAtIndexes:forKey:
public override void WillChange
willChangeValueForKey:withSetMutation:usingObjects:
public override void WillChangeValueForKey
class
/* property */ public override Class get_Class
debugDescription
/* property */ public override string get_DebugDescription
description
/* property */ public override string get_Description
retainCount
/* property */ public override nuint get_RetainCount
self
/* property */ public override NSObject get_Self
superclass
/* property */ public override Class get_Superclass
zone
/* property */ public override NSZone get_Zone
valueWithCATransform3D:
public NSValue FromCATransform3D
valueWithCGAffineTransform:
public NSValue FromCGAffineTransform
valueWithCGPoint:
public NSValue FromCGPoint
valueWithCGRect:
public NSValue FromCGRect
valueWithCGSize:
public NSValue FromCGSize
valueWithCGVector:
public NSValue FromCGVector
valueWithCMTime:
public NSValue FromCMTime
valueWithCMTimeMapping:
public NSValue FromCMTimeMapping
valueWithCMTimeRange:
public NSValue FromCMTimeRange
valueWithMKCoordinate:
public NSValue FromMKCoordinate
valueWithMKCoordinateSpan:
public NSValue FromMKCoordinateSpan
valueWithRange:
public NSValue FromRange
valueWithSCNMatrix4:
public NSValue FromSCNMatrix4
valueWithUIEdgeInsets:
public NSValue FromUIEdgeInsets
valueWithUIOffset:
public NSValue FromUIOffset
valueWithSCNVector3:
public NSValue FromVector
valueWithSCNVector4:
public NSValue FromVector
isEqualToValue:
public override bool IsEqualTo
objCType
override IntPtr ObjCTypePtr
getValue:
public override void StoreValueAtAddress
valueWithNonretainedObject:
public NSValue ValueFromNonretainedObject
valueWithPointer:
public NSValue ValueFromPointer
CATransform3DValue
/* property */ public override CATransform3D get_CATransform3DValue
CGSizeValue
/* property */ public override CGSize get_CGSizeValue
CGVectorValue
/* property */ public override CGVector get_CGVectorValue
CMTimeMappingValue
/* property */ public override CMTimeMapping get_CMTimeMappingValue
CMTimeRangeValue
/* property */ public override CMTimeRange get_CMTimeRangeValue
CMTimeValue
/* property */ public override CMTime get_CMTimeValue
MKCoordinateSpanValue
/* property */ public override MKCoordinateSpan get_CoordinateSpanValue
MKCoordinateValue
/* property */ public override CLLocationCoordinate2D get_CoordinateValue
nonretainedObjectValue
/* property */ public override NSObject get_NonretainedObjectValue
pointerValue
/* property */ public override IntPtr get_PointerValue
SCNMatrix4Value
/* property */ public override SCNMatrix4 get_SCNMatrix4Value
UIEdgeInsetsValue
/* property */ public override UIEdgeInsets get_UIEdgeInsetsValue
UIOffsetValue
/* property */ public override UIOffset get_UIOffsetValue
SCNVector3Value
/* property */ public override SCNVector3 get_Vector3Value
SCNVector4Value
/* property */ public override SCNVector4 get_Vector4Value
callID
/* property */ public override string get_CallID
callState
/* property */ public override string get_CallState
canPrintData:
public bool CanPrint
canPrintURL:
public bool CanPrint
dismissAnimated:
public override void Dismiss
presentAnimated:completionHandler:
public override bool Present
presentFromBarButtonItem:animated:completionHandler:
public override bool PresentFromBarButtonItem
presentFromRect:inView:animated:completionHandler:
public override bool PresentFromRect
printToPrinter:completionHandler:
public override bool PrintToPrinter
printableUTIs
/* property */ public NSSet get_PrintableUTIs
printFormatter
/* property */ public override UIPrintFormatter get_PrintFormatter
setPrintFormatter:
/* property */ public override void set_PrintFormatter
printInfo
/* property */ public UIPrintInfo get_PrintInfo
setPrintInfo:
/* property */ public override void set_PrintInfo
isPrintingAvailable
/* property */ public bool get_PrintingAvailable
printingItem
/* property */ public override NSObject get_PrintingItem
setPrintingItem:
/* property */ public override void set_PrintingItem
printingItems
/* property */ public override NSObject[] get_PrintingItems
setPrintingItems:
/* property */ public override void set_PrintingItems
printPageRenderer
/* property */ public override UIPrintPageRenderer get_PrintPageRenderer
setPrintPageRenderer:
/* property */ public override void set_PrintPageRenderer
printPaper
/* property */ public override UIPrintPaper get_PrintPaper
sharedPrintController
/* property */ public UIPrintInteractionController get_SharedPrintController
showsNumberOfCopies
/* property */ public override bool get_ShowsNumberOfCopies
setShowsNumberOfCopies:
/* property */ public override void set_ShowsNumberOfCopies
showsPageRange
/* property */ public override bool get_ShowsPageRange
setShowsPageRange:
/* property */ public override void set_ShowsPageRange
showsPaperSelectionForLoadedPapers
/* property */ public override bool get_ShowsPaperSelectionForLoadedPapers
setShowsPaperSelectionForLoadedPapers:
/* property */ public override void set_ShowsPaperSelectionForLoadedPapers
fontDescriptorByAddingAttributes:
public override UIFontDescriptor CreateWithAttributes
fontDescriptorWithFace:
public override UIFontDescriptor CreateWithFace
fontDescriptorWithFamily:
public override UIFontDescriptor CreateWithFamily
fontDescriptorWithMatrix:
public override UIFontDescriptor CreateWithMatrix
fontDescriptorWithSize:
public override UIFontDescriptor CreateWithSize
fontDescriptorWithSymbolicTraits:
public override UIFontDescriptor CreateWithTraits
fontDescriptorWithFontAttributes:
public UIFontDescriptor FromAttributes
fontDescriptorWithName:size:
public UIFontDescriptor FromName
fontDescriptorWithName:matrix:
public UIFontDescriptor FromName
matchingFontDescriptorsWithMandatoryKeys:
public override UIFontDescriptor[] GetMatchingFontDescriptors
preferredFontDescriptorWithTextStyle:
public UIFontDescriptor GetPreferredDescriptorForTextStyle
matrix
/* property */ public override Matrix3 get_Matrix
pointSize
/* property */ public override nfloat get_PointSize
postscriptName
/* property */ public override string get_PostscriptName
symbolicTraits
/* property */ public override UIFontDescriptorSymbolicTraits get_SymbolicTraits
fontAttributes
/* property */ public override NSDictionary get_WeakFontAttributes
addressBook
/* property */ override IntPtr get__AddressBook
setAddressBook:
/* property */ override void set__AddressBook
displayedPerson
/* property */ override IntPtr get__DisplayedPerson
setDisplayedPerson:
/* property */ override void set__DisplayedPerson
parentGroup
/* property */ override IntPtr get__ParentGroup
setParentGroup:
/* property */ override void set__ParentGroup
newPersonViewDelegate
/* property */ public override NSObject get_WeakDelegate
setNewPersonViewDelegate:
/* property */ public override void set_WeakDelegate
displayedProperties
/* property */ override NSNumber[] get__DisplayedProperties
setDisplayedProperties:
/* property */ override void set__DisplayedProperties
predicateForEnablingPerson
/* property */ public override NSPredicate get_PredicateForEnablingPerson
setPredicateForEnablingPerson:
/* property */ public override void set_PredicateForEnablingPerson
predicateForSelectionOfPerson
/* property */ public override NSPredicate get_PredicateForSelectionOfPerson
setPredicateForSelectionOfPerson:
/* property */ public override void set_PredicateForSelectionOfPerson
predicateForSelectionOfProperty
/* property */ public override NSPredicate get_PredicateForSelectionOfProperty
setPredicateForSelectionOfProperty:
/* property */ public override void set_PredicateForSelectionOfProperty
peoplePickerDelegate
/* property */ public override NSObject get_WeakDelegate
setPeoplePickerDelegate:
/* property */ public override void set_WeakDelegate
setHighlightedItemForProperty:withIdentifier:
override void SetHighlightedItemForProperty
allowsActions
/* property */ public override bool get_AllowsActions
setAllowsActions:
/* property */ public override void set_AllowsActions
allowsEditing
/* property */ public override bool get_AllowsEditing
setAllowsEditing:
/* property */ public override void set_AllowsEditing
shouldShowLinkedPeople
/* property */ public override bool get_ShouldShowLinkedPeople
setShouldShowLinkedPeople:
/* property */ public override void set_ShouldShowLinkedPeople
personViewDelegate
/* property */ public override NSObject get_WeakDelegate
setPersonViewDelegate:
/* property */ public override void set_WeakDelegate
allowsAddingToAddressBook
/* property */ public override bool get_AllowsAddingToAddressBook
setAllowsAddingToAddressBook:
/* property */ public override void set_AllowsAddingToAddressBook
alternateName
/* property */ public override string get_AlternateName
setAlternateName:
/* property */ public override void set_AlternateName
setMessage:
/* property */ public override void set_Message
unknownPersonViewDelegate
/* property */ public override NSObject get_WeakDelegate
setUnknownPersonViewDelegate:
/* property */ public override void set_WeakDelegate
aspectRatioThumbnail
public override CGImage AspectRatioThumbnail
representationForUTI:
public override ALAssetRepresentation RepresentationForUti
setImageData:metadata:completionBlock:
public override void SetImageData
setVideoAtPath:completionBlock:
public override void SetVideoAtPath
writeModifiedImageDataToSavedPhotosAlbum:metadata:completionBlock:
public override void WriteModifiedImageToSavedToPhotosAlbum
writeModifiedVideoAtPathToSavedPhotosAlbum:completionBlock:
public override void WriteModifiedVideoToSavedPhotosAlbum
defaultRepresentation
/* property */ public override ALAssetRepresentation get_DefaultRepresentation
isEditable
/* property */ public override bool get_Editable
originalAsset
/* property */ public override ALAsset get_OriginalAsset
thumbnail
/* property */ public override CGImage get_Thumbnail
addAsset:
public override bool AddAsset
enumerateAssetsUsingBlock:
public override void Enumerate
enumerateAssetsWithOptions:usingBlock:
public override void Enumerate
enumerateAssetsAtIndexes:options:usingBlock:
public override void Enumerate
setAssetsFilter:
public override void SetAssetsFilter
numberOfAssets
/* property */ public override nint get_Count
posterImage
/* property */ public override CGImage get_PosterImage
outputSettingsAssistantWithPreset:
public AVOutputSettingsAssistant FromPreset
availableOutputSettingsPresets
/* property */ public string[] get_AvailableOutputSettingsPresets
outputFileType
/* property */ public override string get_OutputFileType
sourceAudioFormat
/* property */ public override CMAudioFormatDescription get_SourceAudioFormat
setSourceAudioFormat:
/* property */ public override void set_SourceAudioFormat
sourceVideoAverageFrameDuration
/* property */ public override CMTime get_SourceVideoAverageFrameDuration
setSourceVideoAverageFrameDuration:
/* property */ public override void set_SourceVideoAverageFrameDuration
sourceVideoFormat
/* property */ public override CMVideoFormatDescription get_SourceVideoFormat
setSourceVideoFormat:
/* property */ public override void set_SourceVideoFormat
sourceVideoMinFrameDuration
/* property */ public override CMTime get_SourceVideoMinFrameDuration
setSourceVideoMinFrameDuration:
/* property */ public override void set_SourceVideoMinFrameDuration
audioSettings
/* property */ override NSDictionary get_AudioSettings
andPredicateWithSubpredicates:
public NSCompoundPredicate CreateAndPredicate
notPredicateWithSubpredicate:
public NSCompoundPredicate CreateNotPredicate
orPredicateWithSubpredicates:
public NSCompoundPredicate CreateOrPredicate
subpredicates
/* property */ public override NSPredicate[] get_Subpredicates
compoundPredicateType
/* property */ public override NSCompoundPredicateType get_Type
abbreviation
public override string Abbreviation
abbreviationForDate:
public override string Abbreviation
daylightSavingTimeOffsetForDate:
public override Double DaylightSavingTimeOffset
timeZoneWithAbbreviation:
public NSTimeZone FromAbbreviation
timeZoneWithName:
public NSTimeZone FromName
timeZoneWithName:data:
public NSTimeZone FromName
localizedName:locale:
public override string GetLocalizedName
isDaylightSavingTimeForDate:
public override bool IsDaylightSavingsTime
nextDaylightSavingTimeTransitionAfterDate:
public override NSDate NextDaylightSavingTimeTransitionAfter
resetSystemTimeZone
public void ResetSystemTimeZone
secondsFromGMTForDate:
public override nint SecondsFromGMT
knownTimeZoneNames
/* property */ string[] get__KnownTimeZoneNames
abbreviationDictionary
/* property */ public NSDictionary get_Abbreviations
timeZoneDataVersion
/* property */ public string get_DataVersion
defaultTimeZone
/* property */ public NSTimeZone get_DefaultTimeZone
setDefaultTimeZone:
/* property */ public void set_DefaultTimeZone
secondsFromGMT
/* property */ public override nint get_GetSecondsFromGMT
localTimeZone
/* property */ public NSTimeZone get_LocalTimeZone
systemTimeZone
/* property */ public NSTimeZone get_SystemTimeZone
challengeComposeControllerWithPlayers:message:completionHandler:
public override UIViewController ChallengeComposeController
challengeComposeControllerWithMessage:players:completionHandler:
public override UIViewController ChallengeComposeController
initWithCategory:
override IntPtr InitWithCategory
initWithLeaderboardIdentifier:
override IntPtr InitWithLeaderboardIdentifier
issueChallengeToPlayers:message:
public override void IssueChallengeToPlayers
reportScoreWithCompletionHandler:
public override void ReportScore
reportScores:withCompletionHandler:
public void ReportScores
reportScores:withEligibleChallenges:withCompletionHandler:
public void ReportScores
setCategory:
/* property */ public override void set_Category
setContext:
/* property */ public override void set_Context
formattedValue
/* property */ public override string get_FormattedValue
leaderboardIdentifier
/* property */ public override string get_LeaderboardIdentifier
setLeaderboardIdentifier:
/* property */ public override void set_LeaderboardIdentifier
rank
/* property */ public override nint get_Rank
shouldSetDefaultLeaderboard
/* property */ public override bool get_ShouldSetDefaultLeaderboard
setShouldSetDefaultLeaderboard:
/* property */ public override void set_ShouldSetDefaultLeaderboard
setValue:
public override void SetValue
isCompatibleWithUnit:
public override bool IsCompatible
aggregationStyle
/* property */ public override HKQuantityAggregationStyle get_AggregationStyle
jouleUnitWithMetricPrefix:
public HKUnit CreateJouleUnit
literUnitWithMetricPrefix:
public HKUnit CreateLiterUnit
meterUnitWithMetricPrefix:
public HKUnit CreateMeterUnit
moleUnitWithMetricPrefix:molarMass:
public HKUnit CreateMoleUnit
moleUnitWithMolarMass:
public HKUnit CreateMoleUnit
pascalUnitWithMetricPrefix:
public HKUnit CreatePascalUnit
secondUnitWithMetricPrefix:
public HKUnit CreateSecondUnit
siemenUnitWithMetricPrefix:
public HKUnit CreateSiemenUnit
unitFromEnergyFormatterUnit:
public HKUnit FromEnergyFormatterUnit
gramUnitWithMetricPrefix:
public HKUnit FromGramUnit
unitFromLengthFormatterUnit:
public HKUnit FromLengthFormatterUnit
unitFromMassFormatterUnit:
public HKUnit FromMassFormatterUnit
unitFromString:
public HKUnit FromString
energyFormatterUnitFromUnit:
public NSEnergyFormatterUnit GetEnergyFormatterUnit
lengthFormatterUnitFromUnit:
public NSLengthFormatterUnit GetLengthFormatterUnit
massFormatterUnitFromUnit:
public NSMassFormatterUnit GetMassFormatterUnit
reciprocalUnit
public override HKUnit ReciprocalUnit
unitDividedByUnit:
public override HKUnit UnitDividedBy
unitMultipliedByUnit:
public override HKUnit UnitMultipliedBy
unitRaisedToPower:
public override HKUnit UnitRaisedToPower
atmosphereUnit
/* property */ public HKUnit get_Atmosphere
calorieUnit
/* property */ public HKUnit get_Calorie
centimeterOfWaterUnit
/* property */ public HKUnit get_CentimeterOfWater
countUnit
/* property */ public HKUnit get_Count
dayUnit
/* property */ public HKUnit get_Day
degreeCelsiusUnit
/* property */ public HKUnit get_DegreeCelsius
degreeFahrenheitUnit
/* property */ public HKUnit get_DegreeFahrenheit
fluidOunceImperialUnit
/* property */ public HKUnit get_FluidOunceImperialUnit
fluidOunceUSUnit
/* property */ public HKUnit get_FluidOunceUSUnit
footUnit
/* property */ public HKUnit get_Foot
gramUnit
/* property */ public HKUnit get_Gram
hourUnit
/* property */ public HKUnit get_Hour
inchUnit
/* property */ public HKUnit get_Inch
jouleUnit
/* property */ public HKUnit get_Joule
kelvinUnit
/* property */ public HKUnit get_Kelvin
kilocalorieUnit
/* property */ public HKUnit get_Kilocalorie
literUnit
/* property */ public HKUnit get_Liter
meterUnit
/* property */ public HKUnit get_Meter
mileUnit
/* property */ public HKUnit get_Mile
millimeterOfMercuryUnit
/* property */ public HKUnit get_MillimeterOfMercury
minuteUnit
/* property */ public HKUnit get_Minute
ounceUnit
/* property */ public HKUnit get_Ounce
pascalUnit
/* property */ public HKUnit get_Pascal
percentUnit
/* property */ public HKUnit get_Percent
pintImperialUnit
/* property */ public HKUnit get_PintImperialUnit
pintUSUnit
/* property */ public HKUnit get_PintUSUnit
poundUnit
/* property */ public HKUnit get_Pound
secondUnit
/* property */ public HKUnit get_Second
siemenUnit
/* property */ public HKUnit get_Siemen
stoneUnit
/* property */ public HKUnit get_Stone
unitString
/* property */ public override string get_UnitString
limit
/* property */ public override nuint get_Limit
sortDescriptors
/* property */ public override NSSortDescriptor[] get_SortDescriptors
enableNotification:completionHandler:
public override void EnableNotification
readValueWithCompletionHandler:
public override void ReadValue
updateAuthorizationData:completionHandler:
public override void UpdateAuthorizationData
writeValue:completionHandler:
public override void WriteValue
characteristicType
/* property */ override NSString get__CharacteristicType
metadata
/* property */ public override NSDictionary get_WeakMetadata
isNotificationEnabled
/* property */ public override bool get_NotificationEnabled
service
/* property */ public override CBService get_Service
units
/* property */ public override MKDistanceFormatterUnits get_Units
manufacturerDescription
/* property */ public override string get_ManufacturerDescription
maximumValue
/* property */ public override Double get_MaximumValue
maxLength
/* property */ public override nfloat get_MaxLength
minimumValue
/* property */ public override Double get_MinimumValue
stepValue
/* property */ public override Double get_StepValue
servicesWithTypes:
override HMService[] _ServicesWithTypes
addAccessory:completionHandler:
public override void AddAccessory
addActionSetWithName:completionHandler:
public override void AddActionSet
addRoomWithName:completionHandler:
public override void AddRoom
addServiceGroupWithName:completionHandler:
public override void AddServiceGroup
addTrigger:completionHandler:
public override void AddTrigger
addUserWithCompletionHandler:
public override void AddUser
addZoneWithName:completionHandler:
public override void AddZone
assignAccessory:toRoom:completionHandler:
public override void AssignAccessory
executeActionSet:completionHandler:
public override void ExecuteActionSet
roomForEntireHome
public override HMRoom GetRoomForEntireHome
removeAccessory:completionHandler:
public override void RemoveAccessory
removeActionSet:completionHandler:
public override void RemoveActionSet
removeRoom:completionHandler:
public override void RemoveRoom
removeServiceGroup:completionHandler:
public override void RemoveServiceGroup
removeTrigger:completionHandler:
public override void RemoveTrigger
removeUser:completionHandler:
public override void RemoveUser
removeZone:completionHandler:
public override void RemoveZone
unblockAccessory:completionHandler:
public override void UnblockAccessory
updateName:completionHandler:
public override void UpdateName
accessories
/* property */ public override HMAccessory[] get_Accessories
actionSets
/* property */ public override HMActionSet[] get_ActionSets
isPrimary
/* property */ public override bool get_Primary
rooms
/* property */ public override HMRoom[] get_Rooms
serviceGroups
/* property */ public override HMServiceGroup[] get_ServiceGroups
triggers
/* property */ public override HMTrigger[] get_Triggers
users
/* property */ public override HMUser[] get_Users
zones
/* property */ public override HMZone[] get_Zones
updateAssociatedServiceType:completionHandler:
public override void UpdateAssociatedServiceType
accessory
/* property */ public override EAAccessory get_Accessory
associatedServiceType
/* property */ public override string get_AssociatedServiceType
characteristics
/* property */ public override CBCharacteristic[] get_Characteristics
persistentIDPropertyForGroupingType:
public string GetPersistentIDProperty
titlePropertyForGroupingType:
public string GetTitleProperty
addFilterPredicate:
public override void AddFilterPredicate
removeFilterPredicate:
public override void RemoveFilterPredicate
albumsQuery
/* property */ public MPMediaQuery get_AlbumsQuery
artistsQuery
/* property */ public MPMediaQuery get_ArtistsQuery
audiobooksQuery
/* property */ public MPMediaQuery get_AudiobooksQuery
collections
/* property */ public override MPMediaItemCollection[] get_Collections
collectionSections
/* property */ public override MPMediaQuerySection[] get_CollectionSections
compilationsQuery
/* property */ public MPMediaQuery get_CompilationsQuery
composersQuery
/* property */ public MPMediaQuery get_ComposersQuery
filterPredicates
/* property */ public override NSSet get_FilterPredicates
setFilterPredicates:
/* property */ public override void set_FilterPredicates
genresQuery
/* property */ public MPMediaQuery get_GenresQuery
groupingType
/* property */ public override MPMediaGrouping get_GroupingType
setGroupingType:
/* property */ public override void set_GroupingType
items
/* property */ public override UITabBarItem[] get_Items
itemSections
/* property */ public override MPMediaQuerySection[] get_ItemSections
playlistsQuery
/* property */ public MPMediaQuery get_PlaylistsQuery
podcastsQuery
/* property */ public MPMediaQuery get_PodcastsQuery
songsQuery
/* property */ public MPMediaQuery get_SongsQuery
beginSeekingBackward
public override void BeginSeekingBackward
beginSeekingForward
public override void BeginSeekingForward
cancelAllThumbnailImageRequests
public override void CancelAllThumbnailImageRequests
endSeeking
public override void EndSeeking
requestThumbnailImagesAtTimes:timeOption:
public override void RequestThumbnails
setFullscreen:animated:
public override void SetFullscreen
thumbnailImageAtTime:timeOption:
public override UIImage ThumbnailImageAt
accessLog
/* property */ public override AVPlayerItemAccessLog get_AccessLog
allowsAirPlay
/* property */ public override bool get_AllowsAirPlay
setAllowsAirPlay:
/* property */ public override void set_AllowsAirPlay
backgroundView
/* property */ public override UIView get_BackgroundView
contentURL
/* property */ public override NSUrl get_ContentUrl
setContentURL:
/* property */ public override void set_ContentUrl
controlStyle
/* property */ public override MPMovieControlStyle get_ControlStyle
setControlStyle:
/* property */ public override void set_ControlStyle
currentPlaybackRate
/* property */ public override Single get_CurrentPlaybackRate
setCurrentPlaybackRate:
/* property */ public override void set_CurrentPlaybackRate
currentPlaybackTime
/* property */ public override Double get_CurrentPlaybackTime
setCurrentPlaybackTime:
/* property */ public override void set_CurrentPlaybackTime
endPlaybackTime
/* property */ public override Double get_EndPlaybackTime
setEndPlaybackTime:
/* property */ public override void set_EndPlaybackTime
errorLog
/* property */ public override AVPlayerItemErrorLog get_ErrorLog
isFullscreen
/* property */ public override bool get_Fullscreen
setFullscreen:
/* property */ public override void set_Fullscreen
initialPlaybackTime
/* property */ public override Double get_InitialPlaybackTime
setInitialPlaybackTime:
/* property */ public override void set_InitialPlaybackTime
isPreparedToPlay
/* property */ public override bool get_IsPreparedToPlay
loadState
/* property */ public override MPMovieLoadState get_LoadState
movieControlMode
/* property */ public override MPMovieControlMode get_MovieControlMode
setMovieControlMode:
/* property */ public override void set_MovieControlMode
movieMediaTypes
/* property */ public override MPMovieMediaType get_MovieMediaTypes
naturalSize
/* property */ public override CGSize get_NaturalSize
playableDuration
/* property */ public override Double get_PlayableDuration
playbackState
/* property */ public override MPMusicPlaybackState get_PlaybackState
readyForDisplay
/* property */ public override bool get_ReadyForDisplay
scalingMode
/* property */ public override MPMovieScalingMode get_ScalingMode
setScalingMode:
/* property */ public override void set_ScalingMode
shouldAutoplay
/* property */ public override bool get_ShouldAutoplay
setShouldAutoplay:
/* property */ public override void set_ShouldAutoplay
movieSourceType
/* property */ public override MPMovieSourceType get_SourceType
setMovieSourceType:
/* property */ public override void set_SourceType
timedMetadata
/* property */ public override NSObject[] get_TimedMetadata
useApplicationAudioSession
/* property */ public override bool get_UseApplicationAudioSession
setUseApplicationAudioSession:
/* property */ public override void set_UseApplicationAudioSession
view
/* property */ public override UIView get_View
nowPlayingInfo
/* property */ override NSDictionary get__NowPlayingInfo
setNowPlayingInfo:
/* property */ override void set__NowPlayingInfo
preferredIntervals
/* property */ override NSArray get__PreferredIntervals
setPreferredIntervals:
/* property */ override void set__PreferredIntervals
addAttachmentData:mimeType:fileName:
public override void AddAttachmentData
setBccRecipients:
public override void SetBccRecipients
setCcRecipients:
public override void SetCcRecipients
setMessageBody:isHTML:
public override void SetMessageBody
setSubject:
/* property */ public override void set_Subject
setToRecipients:
public override void SetToRecipients
canSendMail
/* property */ public bool get_CanSendMail
mailComposeDelegate
/* property */ public override NSObject get_WeakMailComposeDelegate
setMailComposeDelegate:
/* property */ public override void set_WeakMailComposeDelegate
addAttachmentURL:withAlternateFilename:
public override bool AddAttachment
addAttachmentData:typeIdentifier:filename:
public override bool AddAttachment
disableUserAttachments
public override void DisableUserAttachments
attachments
/* property */ public override NSItemProvider[] get_Attachments
isSupportedAttachmentUTI:
public bool IsSupportedAttachment
body
/* property */ public override NSObject get_Body
setBody:
/* property */ public override void set_Body
canSendAttachments
/* property */ public bool get_CanSendAttachments
canSendSubject
/* property */ public bool get_CanSendSubject
canSendText
/* property */ public bool get_CanSendText
setRecipients:
/* property */ public override void set_Recipients
subject
/* property */ public override string get_Subject
messageComposeDelegate
/* property */ public override NSObject get_WeakMessageComposeDelegate
setMessageComposeDelegate:
/* property */ public override void set_WeakMessageComposeDelegate
cancelConnectPeer:
public override void CancelConnectPeer
connectPeer:withNearbyConnectionData:
public override void ConnectPeer
initWithPeer:securityIdentity:encryptionPreference:
override IntPtr Init
nearbyConnectionDataForPeer:withCompletionHandler:
public override void NearbyConnectionDataForPeer
sendData:toPeers:withMode:error:
public override bool SendData
sendResourceAtURL:withName:toPeer:withCompletionHandler:
public override NSProgress SendResource
startStreamWithName:toPeer:error:
public override NSOutputStream StartStream
connectedPeers
/* property */ public override MCPeerID[] get_ConnectedPeers
encryptionPreference
/* property */ public override MCEncryptionPreference get_EncryptionPreference
myPeerID
/* property */ public override MCPeerID get_MyPeerID
securityIdentity
/* property */ public override NSArray get_SecurityIdentity
objectsAtIndexes:
override IntPtr _ObjectsAt
countOfAssetsWithMediaType:
public override nuint CountOfAssetsWithMediaType
enumerateObjectsWithOptions:usingBlock:
public override void Enumerate
enumerateObjectsAtIndexes:options:usingBlock:
public override void Enumerate
indexOfObject:inRange:
public override nint IndexOf
performChanges:completionHandler:
public override void PerformChanges
performChangesAndWait:error:
public override bool PerformChangesAndWait
registerChangeObserver:
public override void RegisterChangeObserver
requestAuthorization:
public void RequestAuthorization
unregisterChangeObserver:
public override void UnregisterChangeObserver
sharedPhotoLibrary
/* property */ public PHPhotoLibrary get_SharedPhotoLibrary
addTextContainer:
public override void AddTextContainer
attachmentSizeForGlyphAtIndex:
public override CGSize AttachmentSizeForGlyphAtIndex
boundingRectForGlyphRange:inTextContainer:
public override CGRect BoundingRectForGlyphRange
characterIndexForGlyphAtIndex:
public override nuint CharacterIndexForGlyphAtIndex
characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:
public override nuint CharacterIndexForPoint
characterRangeForGlyphRange:actualGlyphRange:
override NSRange CharacterRangeForGlyphRangeInternal
drawBackgroundForGlyphRange:atPoint:
public override void DrawBackgroundForGlyphRange
drawGlyphsForGlyphRange:atPoint:
public override void DrawGlyphs
drawsOutsideLineFragmentForGlyphAtIndex:
public override bool DrawsOutsideLineFragmentForGlyphAtIndex
drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:
public override void DrawStrikethrough
drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:
public override void DrawUnderline
ensureGlyphsForCharacterRange:
public override void EnsureGlyphsForCharacterRange
ensureGlyphsForGlyphRange:
public override void EnsureGlyphsForGlyphRange
ensureLayoutForBoundingRect:inTextContainer:
public override void EnsureLayoutForBoundingRect
ensureLayoutForCharacterRange:
public override void EnsureLayoutForCharacterRange
ensureLayoutForGlyphRange:
public override void EnsureLayoutForGlyphRange
ensureLayoutForTextContainer:
public override void EnsureLayoutForTextContainer
enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:
public override void EnumerateEnclosingRects
enumerateLineFragmentsForGlyphRange:usingBlock:
public override void EnumerateLineFragments
fractionOfDistanceThroughGlyphForPoint:inTextContainer:
public override nfloat FractionOfDistanceThroughGlyphForPoint
getFirstUnlaidCharacterIndex:glyphIndex:
public override void GetFirstUnlaidCharacterIndex
glyphRangeForTextContainer:
public override NSRange GetGlyphRange
getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:
override nuint GetGlyphsInternal
getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:
override nuint GetLineFragmentInsertionPoints
usedRectForTextContainer:
public override CGRect GetUsedRectForTextContainer
glyphAtIndex:isValidIndex:
public override UInt16 GlyphAtIndex
glyphAtIndex:
public override UInt16 GlyphAtIndex
glyphIndexForCharacterAtIndex:
public override nuint GlyphIndexForCharacterAtIndex
glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:
public override nuint GlyphIndexForPoint
glyphIndexForPoint:inTextContainer:
public override nuint GlyphIndexForPoint
glyphRangeForBoundingRect:inTextContainer:
public override NSRange GlyphRangeForBoundingRect
glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:
public override NSRange GlyphRangeForBoundingRectWithoutAdditionalLayout
glyphRangeForCharacterRange:actualCharacterRange:
override NSRange GlyphRangeForCharacterRangeInternal
insertTextContainer:atIndex:
public override void InsertTextContainer
invalidateDisplayForCharacterRange:
public override void InvalidateDisplayForCharacterRange
invalidateDisplayForGlyphRange:
public override void InvalidateDisplayForGlyphRange
invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:
public override void InvalidateGlyphs
invalidateLayoutForCharacterRange:actualCharacterRange:
public override void InvalidateLayout
isValidGlyphIndex:
public override bool IsValidGlyphIndex
lineFragmentRectForGlyphAtIndex:effectiveRange:
override CGRect LineFragmentRectForGlyphAtIndexInternal
lineFragmentUsedRectForGlyphAtIndex:effectiveRange:
override CGRect LineFragmentUsedRectForGlyphAtIndexInternal
locationForGlyphAtIndex:
public override CGPoint LocationForGlyphAtIndex
notShownAttributeForGlyphAtIndex:
public override bool NotShownAttributeForGlyphAtIndex
processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:
public override void ProcessEditing
propertyForGlyphAtIndex:
public override NSGlyphProperty PropertyForGlyphAtIndex
rangeOfNominallySpacedGlyphsContainingIndex:
public override NSRange RangeOfNominallySpacedGlyphsContainingIndex
removeTextContainerAtIndex:
public override void RemoveTextContainer
setAttachmentSize:forGlyphRange:
public override void SetAttachmentSize
setDrawsOutsideLineFragment:forGlyphAtIndex:
public override void SetDrawsOutsideLineFragment
setExtraLineFragmentRect:usedRect:textContainer:
public override void SetExtraLineFragmentRect
setGlyphs:properties:characterIndexes:font:forGlyphRange:
public override void SetGlyphs
setLineFragmentRect:forGlyphRange:usedRect:
public override void SetLineFragmentRect
setLocation:forStartOfGlyphRange:
public override void SetLocation
setNotShownAttribute:forGlyphAtIndex:
public override void SetNotShownAttribute
setTextContainer:forGlyphRange:
public override void SetTextContainer
showCGGlyphs:positions:count:font:matrix:attributes:inContext:
override void ShowCGGlyphsInternal
strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:
public override void Strikethrough
textContainerChangedGeometry:
public override void TextContainerChangedGeometry
textContainerForGlyphAtIndex:effectiveRange:
override NSTextContainer TextContainerForGlyphAtIndexInternal
truncatedGlyphRangeInLineFragmentForGlyphAtIndex:
public override NSRange TruncatedGlyphRangeInLineFragmentForGlyphAtIndex
underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:
public override void Underline
allowsNonContiguousLayout
/* property */ public override bool get_AllowsNonContiguousLayout
setAllowsNonContiguousLayout:
/* property */ public override void set_AllowsNonContiguousLayout
extraLineFragmentRect
/* property */ public override CGRect get_ExtraLineFragmentRect
extraLineFragmentTextContainer
/* property */ public override NSTextContainer get_ExtraLineFragmentTextContainer
extraLineFragmentUsedRect
/* property */ public override CGRect get_ExtraLineFragmentUsedRect
firstUnlaidCharacterIndex
/* property */ public override nuint get_FirstUnlaidCharacterIndex
firstUnlaidGlyphIndex
/* property */ public override nuint get_FirstUnlaidGlyphIndex
hasNonContiguousLayout
/* property */ public override bool get_HasNonContiguousLayout
hyphenationFactor
/* property */ public override Single get_HyphenationFactor
setHyphenationFactor:
/* property */ public override void set_HyphenationFactor
numberOfGlyphs
/* property */ public override nuint get_NumberOfGlyphs
showsControlCharacters
/* property */ public override bool get_ShowsControlCharacters
setShowsControlCharacters:
/* property */ public override void set_ShowsControlCharacters
showsInvisibleCharacters
/* property */ public override bool get_ShowsInvisibleCharacters
setShowsInvisibleCharacters:
/* property */ public override void set_ShowsInvisibleCharacters
textContainers
/* property */ public override NSTextContainer[] get_TextContainers
textStorage
/* property */ public override NSTextStorage get_TextStorage
setTextStorage:
/* property */ public override void set_TextStorage
usesFontLeading
/* property */ public override bool get_UsesFontLeading
setUsesFontLeading:
/* property */ public override void set_UsesFontLeading
selector
/* property */ public override Selector get_Selector
setSelector:
/* property */ public override void set_Selector
target
/* property */ public override SCNNode get_Target
setTarget:
/* property */ public override void set_Target
addButtonWithTitle:
public override nint AddButton
buttonTitleAtIndex:
public override string ButtonTitle
dismissWithClickedButtonIndex:animated:
public override void DismissWithClickedButtonIndex
showFromBarButtonItem:animated:
public override void ShowFrom
showFromRect:inView:animated:
public override void ShowFrom
showFromTabBar:
public override void ShowFromTabBar
showFromToolbar:
public override void ShowFromToolbar
showInView:
public override void ShowInView
numberOfButtons
/* property */ public override nint get_ButtonCount
cancelButtonIndex
/* property */ public override nint get_CancelButtonIndex
setCancelButtonIndex:
/* property */ public override void set_CancelButtonIndex
destructiveButtonIndex
/* property */ public override nint get_DestructiveButtonIndex
setDestructiveButtonIndex:
/* property */ public override void set_DestructiveButtonIndex
firstOtherButtonIndex
/* property */ public override nint get_FirstOtherButtonIndex
actionSheetStyle
/* property */ public override UIActionSheetStyle get_Style
setActionSheetStyle:
/* property */ public override void set_Style
title
/* property */ public override string get_Title
setTitle:
public override void SetTitle
isVisible
/* property */ public override bool get_Visible
textFieldAtIndex:
public override UITextField GetTextField
show
public override void Show
alertViewStyle
/* property */ public override UIAlertViewStyle get_AlertViewStyle
setAlertViewStyle:
/* property */ public override void set_AlertViewStyle
beginBackgroundTaskWithExpirationHandler:
public override nint BeginBackgroundTask
beginBackgroundTaskWithName:expirationHandler:
public override nint BeginBackgroundTask
beginIgnoringInteractionEvents
public override void BeginIgnoringInteractionEvents
beginReceivingRemoteControlEvents
public override void BeginReceivingRemoteControlEvents
cancelAllLocalNotifications
public override void CancelAllLocalNotifications
cancelLocalNotification:
public override void CancelLocalNotification
canOpenURL:
public override bool CanOpenUrl
clearKeepAliveTimeout
public override void ClearKeepAliveTimeout
completeStateRestoration
public override void CompleteStateRestoration
endBackgroundTask:
public override void EndBackgroundTask
endIgnoringInteractionEvents
public override void EndIgnoringInteractionEvents
endReceivingRemoteControlEvents
public override void EndReceivingRemoteControlEvents
extendStateRestoration
public override void ExtendStateRestoration
ignoreSnapshotOnNextApplicationLaunch
public override void IgnoreSnapshotOnNextApplicationLaunch
openURL:
public override bool OpenUrl
presentLocalNotificationNow:
public override void PresentLocalNotificationNow
registerForRemoteNotifications
public override void RegisterForRemoteNotifications
registerForRemoteNotificationTypes:
public override void RegisterForRemoteNotificationTypes
registerObjectForStateRestoration:restorationIdentifier:
public void RegisterObjectForStateRestoration
registerUserNotificationSettings:
public override void RegisterUserNotificationSettings
scheduleLocalNotification:
public override void ScheduleLocalNotification
sendAction:to:from:forEvent:
public override bool SendAction
sendEvent:
public override void SendEvent
setKeepAliveTimeout:handler:
public override bool SetKeepAliveTimeout
setMinimumBackgroundFetchInterval:
public override void SetMinimumBackgroundFetchInterval
setNewsstandIconImage:
public override void SetNewsstandIconImage
setStatusBarHidden:withAnimation:
public override void SetStatusBarHidden
setStatusBarHidden:animated:
public override void SetStatusBarHidden
setStatusBarOrientation:animated:
public override void SetStatusBarOrientation
setStatusBarStyle:animated:
public override void SetStatusBarStyle
supportedInterfaceOrientationsForWindow:
public override UIInterfaceOrientationMask SupportedInterfaceOrientationsForWindow
unregisterForRemoteNotifications
public override void UnregisterForRemoteNotifications
applicationIconBadgeNumber
/* property */ public override nint get_ApplicationIconBadgeNumber
setApplicationIconBadgeNumber:
/* property */ public override void set_ApplicationIconBadgeNumber
applicationState
/* property */ public override UIApplicationState get_ApplicationState
applicationSupportsShakeToEdit
/* property */ public override bool get_ApplicationSupportsShakeToEdit
setApplicationSupportsShakeToEdit:
/* property */ public override void set_ApplicationSupportsShakeToEdit
backgroundRefreshStatus
/* property */ public override UIBackgroundRefreshStatus get_BackgroundRefreshStatus
backgroundTimeRemaining
/* property */ public override Double get_BackgroundTimeRemaining
currentUserNotificationSettings
/* property */ public override UIUserNotificationSettings get_CurrentUserNotificationSettings
enabledRemoteNotificationTypes
/* property */ public override UIRemoteNotificationType get_EnabledRemoteNotificationTypes
isIdleTimerDisabled
/* property */ public override bool get_IdleTimerDisabled
setIdleTimerDisabled:
/* property */ public override void set_IdleTimerDisabled
isIgnoringInteractionEvents
/* property */ public override bool get_IsIgnoringInteractionEvents
isRegisteredForRemoteNotifications
/* property */ public override bool get_IsRegisteredForRemoteNotifications
keyWindow
/* property */ public override UIWindow get_KeyWindow
isNetworkActivityIndicatorVisible
/* property */ public override bool get_NetworkActivityIndicatorVisible
setNetworkActivityIndicatorVisible:
/* property */ public override void set_NetworkActivityIndicatorVisible
preferredContentSizeCategory
/* property */ override NSString get__PreferredContentSizeCategory
isProtectedDataAvailable
/* property */ public override bool get_ProtectedDataAvailable
scheduledLocalNotifications
/* property */ public override UILocalNotification[] get_ScheduledLocalNotifications
setScheduledLocalNotifications:
/* property */ public override void set_ScheduledLocalNotifications
sharedApplication
/* property */ public UIApplication get_SharedApplication
statusBarFrame
/* property */ public override CGRect get_StatusBarFrame
isStatusBarHidden
/* property */ public override bool get_StatusBarHidden
setStatusBarHidden:
/* property */ public override void set_StatusBarHidden
statusBarOrientation
/* property */ public override UIInterfaceOrientation get_StatusBarOrientation
setStatusBarOrientation:
/* property */ public override void set_StatusBarOrientation
statusBarOrientationAnimationDuration
/* property */ public override Double get_StatusBarOrientationAnimationDuration
statusBarStyle
/* property */ public override UIStatusBarStyle get_StatusBarStyle
setStatusBarStyle:
/* property */ public override void set_StatusBarStyle
userInterfaceLayoutDirection
/* property */ public override UIUserInterfaceLayoutDirection get_UserInterfaceLayoutDirection
windows
/* property */ public override UIWindow[] get_Windows
accessibilityPerformMagicTap
public override bool AccessibilityPerformMagicTap
applicationSignificantTimeChange:
public override void ApplicationSignificantTimeChange
application:didChangeStatusBarFrame:
public override void ChangedStatusBarFrame
application:continueUserActivity:restorationHandler:
public override bool ContinueUserActivity
application:didChangeStatusBarOrientation:
public override void DidChangeStatusBarOrientation
application:didDecodeRestorableStateWithCoder:
public override void DidDecodeRestorableState
applicationDidEnterBackground:
public override void DidEnterBackground
application:didFailToContinueUserActivityWithType:error:
public override void DidFailToContinueUserActivitiy
application:didReceiveRemoteNotification:fetchCompletionHandler:
public override void DidReceiveRemoteNotification
application:didRegisterUserNotificationSettings:
public override void DidRegisterUserNotificationSettings
application:didFailToRegisterForRemoteNotificationsWithError:
public override void FailedToRegisterForRemoteNotifications
applicationDidFinishLaunching:
public override void FinishedLaunching
application:didFinishLaunchingWithOptions:
public override bool FinishedLaunching
application:supportedInterfaceOrientationsForWindow:
public override UIInterfaceOrientationMask GetSupportedInterfaceOrientations
application:viewControllerWithRestorationIdentifierPath:coder:
public override UIViewController GetViewController
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
public override void HandleAction
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
public override void HandleAction
application:handleEventsForBackgroundURLSession:completionHandler:
public override void HandleEventsForBackgroundUrl
application:handleOpenURL:
public override bool HandleOpenURL
application:handleWatchKitExtensionRequest:reply:
public override void HandleWatchKitExtensionRequest
applicationDidBecomeActive:
public override void OnActivated
applicationWillResignActive:
public override void OnResignActivation
application:openURL:sourceApplication:annotation:
public override bool OpenUrl
application:performFetchWithCompletionHandler:
public override void PerformFetch
applicationProtectedDataDidBecomeAvailable:
public override void ProtectedDataDidBecomeAvailable
applicationProtectedDataWillBecomeUnavailable:
public override void ProtectedDataWillBecomeUnavailable
application:didReceiveLocalNotification:
public override void ReceivedLocalNotification
application:didReceiveRemoteNotification:
public override void ReceivedRemoteNotification
applicationDidReceiveMemoryWarning:
public override void ReceiveMemoryWarning
application:didRegisterForRemoteNotificationsWithDeviceToken:
public override void RegisteredForRemoteNotifications
application:shouldAllowExtensionPointIdentifier:
public override bool ShouldAllowExtensionPointIdentifier
application:shouldRestoreApplicationState:
public override bool ShouldRestoreApplicationState
application:shouldSaveApplicationState:
public override bool ShouldSaveApplicationState
application:didUpdateUserActivity:
public override void UserActivityUpdated
application:willChangeStatusBarFrame:
public override void WillChangeStatusBarFrame
application:willChangeStatusBarOrientation:duration:
public override void WillChangeStatusBarOrientation
application:willContinueUserActivityWithType:
public override bool WillContinueUserActivity
application:willEncodeRestorableStateWithCoder:
public override void WillEncodeRestorableState
applicationWillEnterForeground:
public override void WillEnterForeground
application:willFinishLaunchingWithOptions:
public override bool WillFinishLaunching
applicationWillTerminate:
public override void WillTerminate
window
/* property */ public override UIWindow get_Window
setWindow:
/* property */ public override void set_Window
backButtonBackgroundImageForState:barMetrics:
public override UIImage GetBackButtonBackgroundImage
backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:
public override nfloat GetBackButtonBackgroundVerticalPositionAdjustment
backButtonTitlePositionAdjustmentForBarMetrics:
public override UIOffset GetBackButtonTitlePositionAdjustment
backgroundImageForState:barMetrics:
public override UIImage GetBackgroundImage
backgroundImageForState:style:barMetrics:
public override UIImage GetBackgroundImage
backgroundVerticalPositionAdjustmentForBarMetrics:
public override nfloat GetBackgroundVerticalPositionAdjustment
titlePositionAdjustmentForBarMetrics:
public override UIOffset GetTitlePositionAdjustment
setBackButtonBackgroundImage:forState:barMetrics:
public override void SetBackButtonBackgroundImage
setBackButtonBackgroundVerticalPositionAdjustment:forBarMetrics:
public override void SetBackButtonBackgroundVerticalPositionAdjustment
setBackButtonTitlePositionAdjustment:forBarMetrics:
public override void SetBackButtonTitlePositionAdjustment
setBackgroundImage:forState:barMetrics:
public override void SetBackgroundImage
setBackgroundImage:forState:style:barMetrics:
public override void SetBackgroundImage
setBackgroundVerticalPositionAdjustment:forBarMetrics:
public override void SetBackgroundVerticalPositionAdjustment
setTitlePositionAdjustment:forBarMetrics:
public override void SetTitlePositionAdjustment
action
/* property */ public override Selector get_Action
setAction:
/* property */ public override void set_Action
customView
/* property */ public override UIView get_CustomView
setCustomView:
/* property */ public override void set_CustomView
image
/* property */ public override UIImage get_Image
setImage:
public override void SetImage
imageInsets
/* property */ public override UIEdgeInsets get_ImageInsets
setImageInsets:
/* property */ public override void set_ImageInsets
possibleTitles
/* property */ public override NSSet get_PossibleTitles
setPossibleTitles:
/* property */ public override void set_PossibleTitles
tag
/* property */ public override nint get_Tag
setTag:
/* property */ public override void set_Tag
tintColor
/* property */ public override UIColor get_TintColor
setTintColor:
public override void SetTintColor
setWidth:
public override void SetWidth
titleTextAttributesForState:
override NSDictionary _GetTitleTextAttributes
setTitleTextAttributes:forState:
override void _SetTitleTextAttributes
accessibilityActivate
public override bool AccessibilityActivate
accessibilityActivationPoint
/* property */ public override CGPoint get_AccessibilityActivationPoint
setAccessibilityActivationPoint:
/* property */ public override void set_AccessibilityActivationPoint
accessibilityElementsHidden
/* property */ public override bool get_AccessibilityElementsHidden
setAccessibilityElementsHidden:
/* property */ public override void set_AccessibilityElementsHidden
accessibilityFrame
/* property */ public override CGRect get_AccessibilityFrame
setAccessibilityFrame:
/* property */ public override void set_AccessibilityFrame
accessibilityHint
/* property */ public override string get_AccessibilityHint
setAccessibilityHint:
public void SetAccessibilityHint
accessibilityIdentifier
/* property */ public override string get_AccessibilityIdentifier
setAccessibilityIdentifier:
/* property */ public override void set_AccessibilityIdentifier
accessibilityLabel
/* property */ public override string get_AccessibilityLabel
setAccessibilityLabel:
public void SetAccessibilityLabel
accessibilityLanguage
/* property */ public override string get_AccessibilityLanguage
setAccessibilityLanguage:
/* property */ public override void set_AccessibilityLanguage
accessibilityNavigationStyle
/* property */ public override UIAccessibilityNavigationStyle get_AccessibilityNavigationStyle
setAccessibilityNavigationStyle:
/* property */ public override void set_AccessibilityNavigationStyle
accessibilityPath
/* property */ public override UIBezierPath get_AccessibilityPath
setAccessibilityPath:
/* property */ public override void set_AccessibilityPath
accessibilityTraits
/* property */ public override UInt64 get_AccessibilityTraits
setAccessibilityTraits:
public void SetAccessibilityTraits
accessibilityValue
/* property */ public override string get_AccessibilityValue
setAccessibilityValue:
public void SetAccessibilityValue
accessibilityViewIsModal
/* property */ public override bool get_AccessibilityViewIsModal
setAccessibilityViewIsModal:
/* property */ public override void set_AccessibilityViewIsModal
isAccessibilityElement
/* property */ public override bool get_IsAccessibilityElement
setIsAccessibilityElement:
public void SetIsAccessibilityElement
landscapeImagePhone
/* property */ public override UIImage get_LandscapeImagePhone
setLandscapeImagePhone:
/* property */ public override void set_LandscapeImagePhone
landscapeImagePhoneInsets
/* property */ public override UIEdgeInsets get_LandscapeImagePhoneInsets
setLandscapeImagePhoneInsets:
/* property */ public override void set_LandscapeImagePhoneInsets
shouldGroupAccessibilityChildren
/* property */ public override bool get_ShouldGroupAccessibilityChildren
setShouldGroupAccessibilityChildren:
/* property */ public override void set_ShouldGroupAccessibilityChildren
addArcWithCenter:radius:startAngle:endAngle:clockwise:
public override void AddArc
addClip
public override void AddClip
addCurveToPoint:controlPoint1:controlPoint2:
public override void AddCurveToPoint
addLineToPoint:
public override void AddLineTo
addQuadCurveToPoint:controlPoint:
public override void AddQuadCurveToPoint
appendPath:
public override void AppendPath
applyTransform:
public override void ApplyTransform
bezierPathByReversingPath
public override UIBezierPath BezierPathByReversingPath
closePath
public override void ClosePath
bezierPath
public UIBezierPath Create
fill
public override void Fill
fillWithBlendMode:alpha:
public override void Fill
bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:
public UIBezierPath FromArc
bezierPathWithOvalInRect:
public UIBezierPath FromOval
bezierPathWithCGPath:
public UIBezierPath FromPath
bezierPathWithRect:
public UIBezierPath FromRect
bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:
public UIBezierPath FromRoundedRect
bezierPathWithRoundedRect:cornerRadius:
public UIBezierPath FromRoundedRect
moveToPoint:
public override void MoveTo
removeAllPoints
public override void RemoveAllPoints
setLineDash:count:phase:
override void SetLineDash
stroke
public override void Stroke
strokeWithBlendMode:alpha:
public override void Stroke
CGPath
/* property */ public override CGPath get_CGPath
setCGPath:
/* property */ public override void set_CGPath
currentPoint
/* property */ public override CGPoint get_CurrentPoint
isEmpty
/* property */ public override bool get_IsEmpty
lineCapStyle
/* property */ public override CGLineCap get_LineCapStyle
setLineCapStyle:
/* property */ public override void set_LineCapStyle
lineJoinStyle
/* property */ public override CGLineJoin get_LineJoinStyle
setLineJoinStyle:
/* property */ public override void set_LineJoinStyle
lineWidth
/* property */ public override nfloat get_LineWidth
setLineWidth:
/* property */ public override void set_LineWidth
miterLimit
/* property */ public override nfloat get_MiterLimit
setMiterLimit:
/* property */ public override void set_MiterLimit
usesEvenOddFillRule
/* property */ public override bool get_UsesEvenOddFillRule
setUsesEvenOddFillRule:
/* property */ public override void set_UsesEvenOddFillRule
backgroundImageForState:
public override UIImage BackgroundImage
backgroundRectForBounds:
public override CGRect BackgroundRectForBounds
contentRectForBounds:
public override CGRect ContentRectForBounds
buttonWithType:
public UIButton FromType
attributedTitleForState:
public override NSAttributedString GetAttributedTitle
imageForState:
public override UIImage ImageForState
imageRectForContentRect:
public override CGRect ImageRectForContentRect
setAttributedTitle:forState:
public override void SetAttributedTitle
setBackgroundImage:forState:
public override void SetBackgroundImage
setImage:forState:
public override void SetImage
setTitle:forState:
public override void SetTitle
setTitleColor:forState:
public override void SetTitleColor
setTitleShadowColor:forState:
public override void SetTitleShadowColor
titleForState:
public override string Title
titleColorForState:
public override UIColor TitleColor
titleRectForContentRect:
public override CGRect TitleRectForContentRect
titleShadowColorForState:
public override UIColor TitleShadowColor
adjustsImageWhenDisabled
/* property */ public override bool get_AdjustsImageWhenDisabled
setAdjustsImageWhenDisabled:
/* property */ public override void set_AdjustsImageWhenDisabled
adjustsImageWhenHighlighted
/* property */ public override bool get_AdjustsImageWhenHighlighted
setAdjustsImageWhenHighlighted:
/* property */ public override void set_AdjustsImageWhenHighlighted
buttonType
/* property */ public override UIButtonType get_ButtonType
contentEdgeInsets
/* property */ public override UIEdgeInsets get_ContentEdgeInsets
setContentEdgeInsets:
/* property */ public override void set_ContentEdgeInsets
currentAttributedTitle
/* property */ public override NSAttributedString get_CurrentAttributedTitle
currentBackgroundImage
/* property */ public override UIImage get_CurrentBackgroundImage
currentImage
/* property */ public override UIImage get_CurrentImage
currentTitle
/* property */ public override string get_CurrentTitle
currentTitleColor
/* property */ public override UIColor get_CurrentTitleColor
currentTitleShadowColor
/* property */ public override UIColor get_CurrentTitleShadowColor
imageEdgeInsets
/* property */ public override UIEdgeInsets get_ImageEdgeInsets
setImageEdgeInsets:
/* property */ public override void set_ImageEdgeInsets
imageView
/* property */ public override UIImageView get_ImageView
lineBreakMode
/* property */ public override UILineBreakMode get_LineBreakMode
setLineBreakMode:
/* property */ public override void set_LineBreakMode
reversesTitleShadowWhenHighlighted
/* property */ public override bool get_ReverseTitleShadowWhenHighlighted
setReversesTitleShadowWhenHighlighted:
/* property */ public override void set_ReverseTitleShadowWhenHighlighted
showsTouchWhenHighlighted
/* property */ public override bool get_ShowsTouchWhenHighlighted
setShowsTouchWhenHighlighted:
/* property */ public override void set_ShowsTouchWhenHighlighted
titleEdgeInsets
/* property */ public override UIEdgeInsets get_TitleEdgeInsets
setTitleEdgeInsets:
/* property */ public override void set_TitleEdgeInsets
titleLabel
/* property */ public override UILabel get_TitleLabel
titleShadowOffset
/* property */ public override CGSize get_TitleShadowOffset
setTitleShadowOffset:
/* property */ public override void set_TitleShadowOffset
cancelInteractiveTransition
public override void CancelInteractiveTransition
cellForItemAtIndexPath:
public override UICollectionViewCell CellForItem
deleteItemsAtIndexPaths:
public override void DeleteItems
deleteSections:
public override void DeleteSections
dequeueReusableCellWithReuseIdentifier:forIndexPath:
public override UICollectionReusableView DequeueReusableCell
dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:
public override UICollectionReusableView DequeueReusableSupplementaryView
deselectItemAtIndexPath:animated:
public override void DeselectItem
finishInteractiveTransition
public override void FinishInteractiveTransition
indexPathsForSelectedItems
public override NSIndexPath[] GetIndexPathsForSelectedItems
layoutAttributesForItemAtIndexPath:
public override UICollectionViewLayoutAttributes LayoutAttributesForItem
layoutAttributesForSupplementaryElementOfKind:atIndexPath:
public override UICollectionViewLayoutAttributes GetLayoutAttributesForSupplementaryElement
indexPathForCell:
public override NSIndexPath IndexPathForCell
indexPathForItemAtPoint:
public override NSIndexPath IndexPathForItemAtPoint
insertItemsAtIndexPaths:
public override void InsertItems
insertSections:
public override void InsertSections
moveItemAtIndexPath:toIndexPath:
public override void MoveItem
moveSection:toSection:
public override void MoveSection
numberOfItemsInSection:
public override nint NumberOfItemsInSection
numberOfSections
public override nint NumberOfSections
performBatchUpdates:completion:
public override void PerformBatchUpdates
registerClass:forCellWithReuseIdentifier:
override void RegisterClassForCell
registerClass:forSupplementaryViewOfKind:withReuseIdentifier:
protected override void RegisterClassForSupplementaryView
registerNib:forCellWithReuseIdentifier:
public override void RegisterNibForCell
registerNib:forSupplementaryViewOfKind:withReuseIdentifier:
public override void RegisterNibForSupplementaryView
reloadData
public override void ReloadData
reloadItemsAtIndexPaths:
public override void ReloadItems
reloadSections:
public override void ReloadSections
scrollToItemAtIndexPath:atScrollPosition:animated:
public override void ScrollToItem
selectItemAtIndexPath:animated:scrollPosition:
public override void SelectItem
setCollectionViewLayout:animated:
public override void SetCollectionViewLayout
setCollectionViewLayout:animated:completion:
public override void SetCollectionViewLayout
startInteractiveTransitionToCollectionViewLayout:completion:
public override UICollectionViewTransitionLayout StartInteractiveTransition
allowsMultipleSelection
/* property */ public override bool get_AllowsMultipleSelection
setAllowsMultipleSelection:
/* property */ public override void set_AllowsMultipleSelection
allowsSelection
/* property */ public override bool get_AllowsSelection
setAllowsSelection:
/* property */ public override void set_AllowsSelection
setBackgroundView:
/* property */ public override void set_BackgroundView
collectionViewLayout
/* property */ public override UICollectionViewLayout get_Layout
setCollectionViewLayout:
/* property */ public override void set_CollectionViewLayout
indexPathsForVisibleItems
/* property */ public override NSIndexPath[] get_IndexPathsForVisibleItems
visibleCells
/* property */ public override UITableViewCell[] get_VisibleCells
dataSource
/* property */ public override NSObject get_WeakDataSource
setDataSource:
/* property */ public override void set_WeakDataSource
finalizeAnimatedBoundsChange
public override void FinalizeAnimatedBoundsChange
finalizeCollectionViewUpdates
public override void FinalizeCollectionViewUpdates
finalizeLayoutTransition
public override void FinalizeLayoutTransition
finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:
public override UICollectionViewLayoutAttributes FinalLayoutAttributesForDisappearingDecorationElement
finalLayoutAttributesForDisappearingItemAtIndexPath:
public override UICollectionViewLayoutAttributes FinalLayoutAttributesForDisappearingItem
finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:
public override UICollectionViewLayoutAttributes FinalLayoutAttributesForDisappearingSupplementaryElement
indexPathsToDeleteForDecorationViewOfKind:
public override NSIndexPath[] GetIndexPathsToDeleteForDecorationViewOfKind
indexPathsToDeleteForSupplementaryViewOfKind:
public override NSIndexPath[] GetIndexPathsToDeleteForSupplementaryView
indexPathsToInsertForDecorationViewOfKind:
public override NSIndexPath[] GetIndexPathsToInsertForDecorationView
indexPathsToInsertForSupplementaryViewOfKind:
public override NSIndexPath[] GetIndexPathsToInsertForSupplementaryView
invalidationContextForPreferredLayoutAttributes:withOriginalAttributes:
public override UICollectionViewLayoutInvalidationContext GetInvalidationContext
invalidationContextForBoundsChange:
public override UICollectionViewLayoutInvalidationContext GetInvalidationContextForBoundsChange
initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:
public override UICollectionViewLayoutAttributes InitialLayoutAttributesForAppearingDecorationElement
initialLayoutAttributesForAppearingItemAtIndexPath:
public override UICollectionViewLayoutAttributes InitialLayoutAttributesForAppearingItem
initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:
public override UICollectionViewLayoutAttributes InitialLayoutAttributesForAppearingSupplementaryElement
invalidateLayout
public override void InvalidateLayout
invalidateLayoutWithContext:
public override void InvalidateLayout
invalidationContextClass
public Class InvalidationContextClass
layoutAttributesForDecorationViewOfKind:atIndexPath:
public override UICollectionViewLayoutAttributes GetLayoutAttributesForDecorationView
layoutAttributesForElementsInRect:
public override UICollectionViewLayoutAttributes[] LayoutAttributesForElementsInRect
layoutAttributesForSupplementaryViewOfKind:atIndexPath:
public override UICollectionViewLayoutAttributes GetLayoutAttributesForSupplementaryView
prepareForAnimatedBoundsChange:
public override void PrepareForAnimatedBoundsChange
prepareForCollectionViewUpdates:
public override void PrepareForCollectionViewUpdates
prepareForTransitionFromLayout:
public override void PrepareForTransitionFromLayout
prepareForTransitionToLayout:
public override void PrepareForTransitionToLayout
prepareLayout
public override void PrepareLayout
registerClass:forDecorationViewOfKind:
override void RegisterClassForDecorationView
registerNib:forDecorationViewOfKind:
public override void RegisterNibForDecorationView
shouldInvalidateLayoutForPreferredLayoutAttributes:withOriginalAttributes:
public override bool ShouldInvalidateLayout
shouldInvalidateLayoutForBoundsChange:
public override bool ShouldInvalidateLayoutForBoundsChange
targetContentOffsetForProposedContentOffset:withScrollingVelocity:
public override CGPoint TargetContentOffset
targetContentOffsetForProposedContentOffset:
public override CGPoint TargetContentOffsetForProposedContentOffset
collectionView
/* property */ public override UICollectionView get_CollectionView
collectionViewContentSize
/* property */ public override CGSize get_CollectionViewContentSize
layoutAttributesClass
/* property */ public Class get_LayoutAttributesClass
layoutAttributesForCellWithIndexPath:
public UICollectionViewLayoutAttributes CreateForCell
layoutAttributesForDecorationViewOfKind:withIndexPath:
public UICollectionViewLayoutAttributes CreateForDecorationView
layoutAttributesForSupplementaryViewOfKind:withIndexPath:
public UICollectionViewLayoutAttributes CreateForSupplementaryView
center
/* property */ public override CGPoint get_Center
setCenter:
/* property */ public override void set_Center
indexPath
/* property */ public override NSIndexPath get_IndexPath
setIndexPath:
/* property */ public override void set_IndexPath
representedElementCategory
/* property */ public override UICollectionElementCategory get_RepresentedElementCategory
representedElementKind
/* property */ public override string get_RepresentedElementKind
setSize:
/* property */ public override void set_Size
transform3D
/* property */ public override CATransform3D get_Transform3D
setTransform3D:
/* property */ public override void set_Transform3D
zIndex
/* property */ public override nint get_ZIndex
setZIndex:
/* property */ public override void set_ZIndex
colorWithAlphaComponent:
public override UIColor ColorWithAlpha
colorWithCIColor:
public UIColor FromCIColor
colorWithHue:saturation:brightness:alpha:
public UIColor FromHSBA
colorWithPatternImage:
public UIColor FromPatternImage
colorWithWhite:alpha:
public UIColor FromWhiteAlpha
getWhite:alpha:
public override bool GetWhite
setFill
public override void SetFill
setStroke
public override void SetStroke
blackColor
/* property */ public UIColor get_Black
blueColor
/* property */ public UIColor get_Blue
brownColor
/* property */ public UIColor get_Brown
CGColor
/* property */ public override CGColor get_CGColor
CIColor
/* property */ public override CIColor get_CIColor
clearColor
/* property */ public override MTLClearColor get_ClearColor
cyanColor
/* property */ public UIColor get_Cyan
darkGrayColor
/* property */ public UIColor get_DarkGray
darkTextColor
/* property */ public UIColor get_DarkTextColor
grayColor
/* property */ public UIColor get_Gray
greenColor
/* property */ public UIColor get_Green
groupTableViewBackgroundColor
/* property */ public UIColor get_GroupTableViewBackgroundColor
lightGrayColor
/* property */ public UIColor get_LightGray
lightTextColor
/* property */ public UIColor get_LightTextColor
magentaColor
/* property */ public UIColor get_Magenta
orangeColor
/* property */ public UIColor get_Orange
purpleColor
/* property */ public UIColor get_Purple
redColor
/* property */ public UIColor get_Red
scrollViewTexturedBackgroundColor
/* property */ public UIColor get_ScrollViewTexturedBackgroundColor
underPageBackgroundColor
/* property */ public UIColor get_UnderPageBackgroundColor
viewFlipsideBackgroundColor
/* property */ public UIColor get_ViewFlipsideBackgroundColor
whiteColor
/* property */ public UIColor get_White
yellowColor
/* property */ public UIColor get_Yellow
BridgeSelector
public void Activated
addTarget:action:forControlEvents:
public override void AddTarget
beginTrackingWithTouch:withEvent:
public override bool BeginTracking
cancelTrackingWithEvent:
public override void CancelTracking
continueTrackingWithTouch:withEvent:
public override bool ContinueTracking
endTrackingWithTouch:withEvent:
public override void EndTracking
actionsForTarget:forControlEvent:
public override string[] GetActions
removeTarget:action:forControlEvents:
public override void RemoveTarget
sendAction:to:forEvent:
public override void SendAction
sendActionsForControlEvents:
public override void SendActionForControlEvents
allControlEvents
/* property */ public override UIControlEvent get_AllControlEvents
allTargets
/* property */ public override NSSet get_AllTargets
isHighlighted
/* property */ public override bool get_Highlighted
setHighlighted:
/* property */ public override void set_Highlighted
contentHorizontalAlignment
/* property */ public override UIControlContentHorizontalAlignment get_HorizontalAlignment
setContentHorizontalAlignment:
/* property */ public override void set_HorizontalAlignment
isSelected
/* property */ public override bool get_Selected
setSelected:
/* property */ public override void set_Selected
isTouchInside
/* property */ public override bool get_TouchInside
isTracking
/* property */ public override bool get_Tracking
contentVerticalAlignment
/* property */ public override UIControlContentVerticalAlignment get_VerticalAlignment
setContentVerticalAlignment:
/* property */ public override void set_VerticalAlignment
beginGeneratingDeviceOrientationNotifications
public override void BeginGeneratingDeviceOrientationNotifications
endGeneratingDeviceOrientationNotifications
public override void EndGeneratingDeviceOrientationNotifications
playInputClick
public override void PlayInputClick
isMultitaskingSupported
/* property */ override bool get__IsMultitaskingSupported
userInterfaceIdiom
/* property */ public override UIUserInterfaceIdiom get_UserInterfaceIdiom
batteryLevel
/* property */ public override Single get_BatteryLevel
isBatteryMonitoringEnabled
/* property */ public override bool get_BatteryMonitoringEnabled
setBatteryMonitoringEnabled:
/* property */ public override void set_BatteryMonitoringEnabled
batteryState
/* property */ public override UIDeviceBatteryState get_BatteryState
currentDevice
/* property */ public WKInterfaceDevice get_CurrentDevice
isGeneratingDeviceOrientationNotifications
/* property */ public override bool get_GeneratesDeviceOrientationNotifications
identifierForVendor
/* property */ public override NSUuid get_IdentifierForVendor
localizedModel
/* property */ public override string get_LocalizedModel
model
/* property */ public override string get_Model
isProximityMonitoringEnabled
/* property */ public override bool get_ProximityMonitoringEnabled
setProximityMonitoringEnabled:
/* property */ public override void set_ProximityMonitoringEnabled
proximityState
/* property */ public override bool get_ProximityState
systemName
/* property */ public override string get_SystemName
systemVersion
/* property */ public override string get_SystemVersion
dismissMenuAnimated:
public override void DismissMenu
dismissPreviewAnimated:
public override void DismissPreview
interactionControllerWithURL:
public UIDocumentInteractionController FromUrl
presentOpenInMenuFromBarButtonItem:animated:
public override bool PresentOpenInMenu
presentOpenInMenuFromRect:inView:animated:
public override bool PresentOpenInMenu
presentOptionsMenuFromBarButtonItem:animated:
public override bool PresentOptionsMenu
presentOptionsMenuFromRect:inView:animated:
public override bool PresentOptionsMenu
presentPreviewAnimated:
public override bool PresentPreview
annotation
/* property */ public override IMKAnnotation get_Annotation
setAnnotation:
/* property */ public override void set_Annotation
gestureRecognizers
/* property */ public override UIGestureRecognizer[] get_GestureRecognizers
icons
/* property */ public override UIImage[] get_Icons
UTI
/* property */ public override string get_Uti
setUTI:
/* property */ public override void set_Uti
addBehavior:
public override void AddBehavior
itemsInRect:
public override IUIDynamicItem[] GetDynamicItems
layoutAttributesForCellAtIndexPath:
public override UICollectionViewLayoutAttributes GetLayoutAttributesForCell
removeAllBehaviors
public override void RemoveAllBehaviors
removeBehavior:
public override void RemoveBehavior
updateItemUsingCurrentState:
public override void UpdateItemUsingCurrentState
behaviors
/* property */ public override UIDynamicBehavior[] get_Behaviors
elapsedTime
/* property */ public override Double get_ElapsedTime
referenceView
/* property */ public override UIView get_ReferenceView
isRunning
/* property */ public override bool get_Running
boldSystemFontOfSize:
IntPtr _BoldSystemFontOfSize
fontWithDescriptor:size:
IntPtr _FromDescriptor
fontWithName:size:
IntPtr _FromName
preferredFontForTextStyle:
IntPtr _GetPreferredFontForTextStyle
italicSystemFontOfSize:
IntPtr _ItalicSystemFontOfSize
systemFontOfSize:
IntPtr _SystemFontOfSize
systemFontOfSize:weight:
IntPtr _SystemFontOfSize
fontWithSize:
override IntPtr _WithSize
fontNamesForFamilyName:
public string[] FontNamesForFamilyName
ascender
/* property */ public override nfloat get_Ascender
buttonFontSize
/* property */ public nfloat get_ButtonFontSize
capHeight
/* property */ public override nfloat get_CapHeight
descender
/* property */ public override nfloat get_Descender
familyName
/* property */ public override string get_FamilyName
familyNames
/* property */ public string[] get_FamilyNames
fontDescriptor
/* property */ public override UIFontDescriptor get_FontDescriptor
labelFontSize
/* property */ public nfloat get_LabelFontSize
leading
/* property */ public override nfloat get_Leading
lineHeight
/* property */ public override nfloat get_LineHeight
fontName
/* property */ public override string get_FontName
smallSystemFontSize
/* property */ public nfloat get_SmallSystemFontSize
systemFontSize
/* property */ public nfloat get_SystemFontSize
xHeight
/* property */ public override nfloat get_xHeight
touchesForGestureRecognizer:
public override NSSet TouchesForGestureRecognizer
touchesForView:
public override NSSet TouchesForView
touchesForWindow:
public override NSSet TouchesForWindow
allTouches
/* property */ public override NSSet get_AllTouches
subtype
/* property */ public override string get_Subtype
addTarget:action:
public override void AddTarget
canBePreventedByGestureRecognizer:
public override bool CanBePreventedByGestureRecognizer
canPreventGestureRecognizer:
public override bool CanPreventGestureRecognizer
ignoreTouch:forEvent:
public override void IgnoreTouch
locationInView:
public override CGPoint LocationInView
locationOfTouch:inView:
public override CGPoint LocationOfTouch
removeTarget:action:
public override void RemoveTarget
requireGestureRecognizerToFail:
public override void RequireGestureRecognizerToFail
shouldBeRequiredToFailByGestureRecognizer:
public override bool ShouldBeRequiredToFailByGestureRecognizer
shouldRequireFailureOfGestureRecognizer:
public override bool ShouldRequireFailureOfGestureRecognizer
touchesBegan:withEvent:
public override void TouchesBegan
touchesCancelled:withEvent:
public override void TouchesCancelled
touchesEnded:withEvent:
public override void TouchesEnded
touchesMoved:withEvent:
public override void TouchesMoved
cancelsTouchesInView
/* property */ public override bool get_CancelsTouchesInView
setCancelsTouchesInView:
/* property */ public override void set_CancelsTouchesInView
delaysTouchesBegan
/* property */ public override bool get_DelaysTouchesBegan
setDelaysTouchesBegan:
/* property */ public override void set_DelaysTouchesBegan
delaysTouchesEnded
/* property */ public override bool get_DelaysTouchesEnded
setDelaysTouchesEnded:
/* property */ public override void set_DelaysTouchesEnded
numberOfTouches
/* property */ public override nint get_NumberOfTouches
setState:
/* property */ public override void set_State
velocity
/* property */ public override CGVector get_Velocity
allowableMovement
/* property */ public override nfloat get_AllowableMovement
setAllowableMovement:
/* property */ public override void set_AllowableMovement
minimumPressDuration
/* property */ public override Double get_MinimumPressDuration
setMinimumPressDuration:
/* property */ public override void set_MinimumPressDuration
numberOfTapsRequired
/* property */ public override nuint get_NumberOfTapsRequired
setNumberOfTapsRequired:
/* property */ public override void set_NumberOfTapsRequired
numberOfTouchesRequired
/* property */ public override nuint get_NumberOfTouchesRequired
setNumberOfTouchesRequired:
/* property */ public override void set_NumberOfTouchesRequired
setTranslation:inView:
public override void SetTranslation
translationInView:
public override CGPoint TranslationInView
velocityInView:
public override CGPoint VelocityInView
maximumNumberOfTouches
/* property */ public override nuint get_MaximumNumberOfTouches
setMaximumNumberOfTouches:
/* property */ public override void set_MaximumNumberOfTouches
minimumNumberOfTouches
/* property */ public override nuint get_MinimumNumberOfTouches
setMinimumNumberOfTouches:
/* property */ public override void set_MinimumNumberOfTouches
edges
/* property */ public override UIRectEdge get_Edges
setEdges:
/* property */ public override void set_Edges
animatedImageNamed:duration:
public UIImage CreateAnimatedImage
animatedImageWithImages:duration:
public UIImage CreateAnimatedImage
animatedResizableImageNamed:capInsets:duration:
public UIImage CreateAnimatedImage
animatedResizableImageNamed:capInsets:resizingMode:duration:
public UIImage CreateAnimatedImage
resizableImageWithCapInsets:
public override UIImage CreateResizableImage
resizableImageWithCapInsets:resizingMode:
public override UIImage CreateResizableImage
drawAtPoint:blendMode:alpha:
public override void Draw
drawInRect:blendMode:alpha:
public override void Draw
drawAsPatternInRect:
public override void DrawAsPatternInRect
imageNamed:
public UIImage FromBundle
imageNamed:inBundle:compatibleWithTraitCollection:
public UIImage FromBundle
imageWithContentsOfFile:
public UIImage FromFile
imageWithCGImage:scale:orientation:
public UIImage FromImage
imageWithCIImage:
public UIImage FromImage
imageWithCIImage:scale:orientation:
public UIImage FromImage
imageWithAlignmentRectInsets:
public override UIImage ImageWithAlignmentRectInsets
imageWithRenderingMode:
public override UIImage ImageWithRenderingMode
imageWithData:scale:
public UIImage LoadFromData
stretchableImageWithLeftCapWidth:topCapHeight:
public override UIImage StretchableImage
alignmentRectInsets
/* property */ public override UIEdgeInsets get_AlignmentRectInsets
capInsets
/* property */ public override UIEdgeInsets get_CapInsets
CGImage
/* property */ public override CGImage get_CGImage
CIImage
/* property */ public override CIImage get_CIImage
imageAsset
/* property */ public override UIImageAsset get_ImageAsset
images
/* property */ public override UIImage[] get_Images
leftCapWidth
/* property */ public override nint get_LeftCapWidth
imageOrientation
/* property */ public override UIImageOrientation get_Orientation
renderingMode
/* property */ public override UIImageRenderingMode get_RenderingMode
resizingMode
/* property */ public override UIImageResizingMode get_ResizingMode
topCapHeight
/* property */ public override nint get_TopCapHeight
traitCollection
/* property */ public override UITraitCollection get_TraitCollection
Xamarin_Internal__image:didFinishSavingWithError:contextInfo:
public void Callback
backgroundImageForBarMetrics:
public override UIImage GetBackgroundImage
backgroundImageForBarPosition:barMetrics:
public override UIImage BackgroundImageForBarPosition
titleVerticalPositionAdjustmentForBarMetrics:
public override nfloat GetTitleVerticalPositionAdjustment
popNavigationItemAnimated:
public override UINavigationItem PopNavigationItem
pushNavigationItem:animated:
public override void PushNavigationItem
setBackgroundImage:forBarMetrics:
public override void SetBackgroundImage
setBackgroundImage:forBarPosition:barMetrics:
public override void SetBackgroundImage
setItems:animated:
public override void SetItems
setTitleVerticalPositionAdjustment:forBarMetrics:
public override void SetTitleVerticalPositionAdjustment
titleTextAttributes
/* property */ override NSDictionary get__TitleTextAttributes
setTitleTextAttributes:
/* property */ override void set__TitleTextAttributes
backIndicatorImage
/* property */ public override UIImage get_BackIndicatorImage
setBackIndicatorImage:
/* property */ public override void set_BackIndicatorImage
backIndicatorTransitionMaskImage
/* property */ public override UIImage get_BackIndicatorTransitionMaskImage
setBackIndicatorTransitionMaskImage:
/* property */ public override void set_BackIndicatorTransitionMaskImage
backItem
/* property */ public override WKBackForwardListItem get_BackItem
barPosition
/* property */ public override UIBarPosition get_BarPosition
barStyle
/* property */ public override UIBarStyle get_BarStyle
setBarStyle:
/* property */ public override void set_BarStyle
barTintColor
/* property */ public override UIColor get_BarTintColor
setBarTintColor:
/* property */ public override void set_BarTintColor
setItems:
/* property */ public override void set_Items
shadowImage
/* property */ public override UIImage get_ShadowImage
setShadowImage:
/* property */ public override void set_ShadowImage
topItem
/* property */ public override UINavigationItem get_TopItem
isTranslucent
/* property */ public override bool get_Translucent
setTranslucent:
/* property */ public override void set_Translucent
popToRootViewControllerAnimated:
public override UIViewController[] PopToRootViewController
popToViewController:animated:
public override UIViewController[] PopToViewController
popViewControllerAnimated:
public override UIViewController PopViewController
pushViewController:animated:
public override void PushViewController
setNavigationBarHidden:animated:
public override void SetNavigationBarHidden
setToolbarHidden:animated:
public override void SetToolbarHidden
setViewControllers:animated:
public override void SetViewControllers
showViewController:sender:
public override void ShowViewController
barHideOnSwipeGestureRecognizer
/* property */ public override UIPanGestureRecognizer get_BarHideOnSwipeGestureRecognizer
barHideOnTapGestureRecognizer
/* property */ public override UITapGestureRecognizer get_BarHideOnTapGestureRecognizer
hidesBarsOnSwipe
/* property */ public override bool get_HidesBarsOnSwipe
setHidesBarsOnSwipe:
/* property */ public override void set_HidesBarsOnSwipe
hidesBarsOnTap
/* property */ public override bool get_HidesBarsOnTap
setHidesBarsOnTap:
/* property */ public override void set_HidesBarsOnTap
hidesBarsWhenKeyboardAppears
/* property */ public override bool get_HidesBarsWhenKeyboardAppears
setHidesBarsWhenKeyboardAppears:
/* property */ public override void set_HidesBarsWhenKeyboardAppears
hidesBarsWhenVerticallyCompact
/* property */ public override bool get_HidesBarsWhenVerticallyCompact
setHidesBarsWhenVerticallyCompact:
/* property */ public override void set_HidesBarsWhenVerticallyCompact
interactivePopGestureRecognizer
/* property */ public override UIGestureRecognizer get_InteractivePopGestureRecognizer
navigationBar
/* property */ public override UINavigationBar get_NavigationBar
isNavigationBarHidden
/* property */ public override bool get_NavigationBarHidden
setNavigationBarHidden:
/* property */ public override void set_NavigationBarHidden
toolbar
/* property */ public override UIToolbar get_Toolbar
isToolbarHidden
/* property */ public override bool get_ToolbarHidden
setToolbarHidden:
/* property */ public override void set_ToolbarHidden
topViewController
/* property */ public override UIViewController get_TopViewController
viewControllers
/* property */ public override UIViewController[] get_ViewControllers
setViewControllers:
/* property */ public override void set_ViewControllers
visibleViewController
/* property */ public override UIViewController get_VisibleViewController
nibWithData:bundle:
public UINib FromData
nibWithNibName:bundle:
public UINib FromName
instantiateWithOwner:options:
public override NSObject[] Instantiate
setViewControllers:direction:animated:completion:
public override void SetViewControllers
navigationOrientation
/* property */ public override UIPageViewControllerNavigationOrientation get_NavigationOrientation
spineLocation
/* property */ public override UIPageViewControllerSpineLocation get_SpineLocation
transitionStyle
/* property */ public override UIPageViewControllerTransitionStyle get_TransitionStyle
setImages:
/* property */ public override void set_Images
addItems:
public override void AddItems
containsPasteboardTypes:
public override bool Contains
containsPasteboardTypes:inItemSet:
public override bool Contains
dataForPasteboardType:
public override NSData DataForPasteboardType
pasteboardWithName:create:
public UIPasteboard FromName
dataForPasteboardType:inItemSet:
public override NSData[] GetDataForPasteboardType
pasteboardWithUniqueName
public UIPasteboard GetUnique
valueForPasteboardType:
public override NSObject GetValue
valuesForPasteboardType:inItemSet:
public override NSData[] GetValuesForPasteboardType
itemSetWithPasteboardTypes:
public override NSIndexSet ItemSetWithPasteboardTypes
pasteboardTypesForItemSet:
public override NSArray[] PasteBoardTypesForSet
removePasteboardWithName:
public void Remove
setData:forPasteboardType:
public override void SetData
setValue:forPasteboardType:
public override void SetValue
changeCount
/* property */ public override nint get_ChangeCount
color
/* property */ public override UIColor get_Color
setColor:
public override void SetColor
numberOfItems
/* property */ public override nint get_Count
generalPasteboard
/* property */ public UIPasteboard get_General
isPersistent
/* property */ public override bool get_Persistent
setPersistent:
/* property */ public override void set_Persistent
strings
/* property */ public override string[] get_Strings
setStrings:
/* property */ public override void set_Strings
pasteboardTypes
/* property */ public override string[] get_Types
URLs
/* property */ public override NSUrl[] get_Urls
setURLs:
/* property */ public override void set_Urls
tableView:cellForRowAtIndexPath:
public override UITableViewCell GetCell
reloadAllComponents
public override void ReloadAllComponents
reloadComponent:
public override void ReloadComponent
numberOfRowsInComponent:
public override nint RowsInComponent
tableView:numberOfRowsInSection:
public override nint RowsInSection
rowSizeForComponent:
public override CGSize RowSizeForComponent
selectRow:inComponent:animated:
public override void Select
selectedRowInComponent:
public override nint SelectedRowInComponent
viewForRow:forComponent:
public override UIView ViewFor
showsSelectionIndicator
/* property */ public override bool get_ShowSelectionIndicator
setShowsSelectionIndicator:
/* property */ public override void set_ShowSelectionIndicator
availableCaptureModesForCameraDevice:
public NSNumber[] AvailableCaptureModesForCameraDevice
availableMediaTypesForSourceType:
public string[] AvailableMediaTypes
isCameraDeviceAvailable:
public bool IsCameraDeviceAvailable
isFlashAvailableForCameraDevice:
public bool IsFlashAvailableForCameraDevice
isSourceTypeAvailable:
public bool IsSourceTypeAvailable
startVideoCapture
public override bool StartVideoCapture
stopVideoCapture
public override void StopVideoCapture
takePicture
public override void TakePicture
allowsImageEditing
/* property */ public override bool get_AllowsImageEditing
setAllowsImageEditing:
/* property */ public override void set_AllowsImageEditing
cameraCaptureMode
/* property */ public override UIImagePickerControllerCameraCaptureMode get_CameraCaptureMode
setCameraCaptureMode:
/* property */ public override void set_CameraCaptureMode
cameraDevice
/* property */ public override UIImagePickerControllerCameraDevice get_CameraDevice
setCameraDevice:
/* property */ public override void set_CameraDevice
cameraFlashMode
/* property */ public override UIImagePickerControllerCameraFlashMode get_CameraFlashMode
setCameraFlashMode:
/* property */ public override void set_CameraFlashMode
cameraOverlayView
/* property */ public override UIView get_CameraOverlayView
setCameraOverlayView:
/* property */ public override void set_CameraOverlayView
cameraViewTransform
/* property */ public override CGAffineTransform get_CameraViewTransform
setCameraViewTransform:
/* property */ public override void set_CameraViewTransform
mediaTypes
/* property */ public override MPMediaType get_MediaTypes
setMediaTypes:
/* property */ public override void set_MediaTypes
showsCameraControls
/* property */ public override bool get_ShowsCameraControls
setShowsCameraControls:
/* property */ public override void set_ShowsCameraControls
sourceType
/* property */ public override EKSourceType get_SourceType
setSourceType:
/* property */ public override void set_SourceType
videoMaximumDuration
/* property */ public override Double get_VideoMaximumDuration
setVideoMaximumDuration:
/* property */ public override void set_VideoMaximumDuration
videoQuality
/* property */ public override UIImagePickerControllerQualityType get_VideoQuality
setVideoQuality:
/* property */ public override void set_VideoQuality
dismissPopoverAnimated:
public override void Dismiss
presentPopoverFromBarButtonItem:permittedArrowDirections:animated:
public override void PresentFromBarButtonItem
presentPopoverFromRect:inView:permittedArrowDirections:animated:
public override void PresentFromRect
setContentViewController:animated:
public override void SetContentViewController
setPopoverContentSize:animated:
public override void SetPopoverContentSize
contentViewController
/* property */ public override UIViewController get_ContentViewController
setContentViewController:
/* property */ public override void set_ContentViewController
passthroughViews
/* property */ public override UIView[] get_PassthroughViews
setPassthroughViews:
/* property */ public override void set_PassthroughViews
popoverArrowDirection
/* property */ public override UIPopoverArrowDirection get_PopoverArrowDirection
popoverBackgroundViewClass
/* property */ override IntPtr get_PopoverBackgroundViewClass
setPopoverBackgroundViewClass:
/* property */ override void set_PopoverBackgroundViewClass
popoverContentSize
/* property */ public override CGSize get_PopoverContentSize
setPopoverContentSize:
/* property */ public override void set_PopoverContentSize
popoverLayoutMargins
/* property */ public override UIEdgeInsets get_PopoverLayoutMargins
setPopoverLayoutMargins:
/* property */ public override void set_PopoverLayoutMargins
isPopoverVisible
/* property */ public override bool get_PopoverVisible
arrowDirection
/* property */ public override UIPopoverArrowDirection get_ArrowDirection
barButtonItem
/* property */ public override UIBarButtonItem get_BarButtonItem
setBarButtonItem:
/* property */ public override void set_BarButtonItem
permittedArrowDirections
/* property */ public override UIPopoverArrowDirection get_PermittedArrowDirections
setPermittedArrowDirections:
/* property */ public override void set_PermittedArrowDirections
sourceRect
/* property */ public override CGRect get_SourceRect
setSourceRect:
/* property */ public override void set_SourceRect
sourceView
/* property */ public override UIView get_SourceView
setSourceView:
/* property */ public override void set_SourceView
addItem:
public override void AddItem
targetOffsetFromCenterForItem:
public override UIOffset GetTargetOffsetFromCenter
removeItem:
public override void RemoveItem
setAngle:magnitude:
public override void SetAngleAndMagnitude
setTargetOffsetFromCenter:forItem:
public override void SetTargetOffset
active
/* property */ public override bool get_Active
angle
/* property */ public override nfloat get_Angle
setAngle:
/* property */ public override void set_Angle
magnitude
/* property */ public override nfloat get_Magnitude
setMagnitude:
/* property */ public override void set_Magnitude
pushDirection
/* property */ public override CGVector get_PushDirection
setPushDirection:
/* property */ public override void set_PushDirection
accessibilityDecrement
public override void AccessibilityDecrement
accessibilityElementDidBecomeFocused
public override void AccessibilityElementDidBecomeFocused
accessibilityElementDidLoseFocus
public override void AccessibilityElementDidLoseFocus
accessibilityElementIsFocused
public override bool AccessibilityElementIsFocused
accessibilityIncrement
public override void AccessibilityIncrement
accessibilityPerformEscape
public override bool AccessibilityPerformEscape
accessibilityScroll:
public override bool AccessibilityScroll
becomeFirstResponder
public override bool BecomeFirstResponder
canPerformAction:withSender:
public override bool CanPerform
clearTextInputContextIdentifier:
public void ClearTextInputContextIdentifier
copy:
public override void Copy
cut:
public override void Cut
delete:
public override void Delete
targetForAction:withSender:
public override NSObject GetTargetForAction
makeTextWritingDirectionLeftToRight:
public override void MakeTextWritingDirectionLeftToRight
makeTextWritingDirectionRightToLeft:
public override void MakeTextWritingDirectionRightToLeft
motionBegan:withEvent:
public override void MotionBegan
motionCancelled:withEvent:
public override void MotionCancelled
motionEnded:withEvent:
public override void MotionEnded
paste:
public override void Paste
reloadInputViews
public override void ReloadInputViews
remoteControlReceivedWithEvent:
public override void RemoteControlReceived
resignFirstResponder
public override bool ResignFirstResponder
restoreUserActivityState:
public override void RestoreUserActivityState
select:
public override void Select
selectAll:
public override void SelectAll
toggleBoldface:
public override void ToggleBoldface
toggleItalics:
public override void ToggleItalics
toggleUnderline:
public override void ToggleUnderline
updateUserActivityState:
public override void UpdateUserActivityState
accessibilityCustomActions
/* property */ public override UIAccessibilityCustomAction[] get_AccessibilityCustomActions
setAccessibilityCustomActions:
/* property */ public override void set_AccessibilityCustomActions
canBecomeFirstResponder
/* property */ public override bool get_CanBecomeFirstResponder
canResignFirstResponder
/* property */ public override bool get_CanResignFirstResponder
inputAccessoryView
/* property */ public override UIView get_InputAccessoryView
inputAccessoryViewController
/* property */ public override UIInputViewController get_InputAccessoryViewController
inputView
/* property */ public override UIInputView get_InputView
inputViewController
/* property */ public override UIInputViewController get_InputViewController
isFirstResponder
/* property */ public override bool get_IsFirstResponder
keyCommands
/* property */ public override UIKeyCommand[] get_KeyCommands
nextResponder
/* property */ public override UIResponder get_NextResponder
textInputContextIdentifier
/* property */ public override NSString get_TextInputContextIdentifier
textInputMode
/* property */ public override UITextInputMode get_TextInputMode
undoManager
/* property */ public override NSUndoManager get_UndoManager
userActivity
/* property */ public override NSUserActivity get_UserActivity
setUserActivity:
/* property */ public override void set_UserActivity
snapshotViewAfterScreenUpdates:
public override UIView SnapshotView
traitCollectionDidChange:
public override void TraitCollectionDidChange
applicationFrame
/* property */ public override CGRect get_ApplicationFrame
availableModes
/* property */ public override UIScreenMode[] get_AvailableModes
brightness
/* property */ public override nfloat get_Brightness
setBrightness:
/* property */ public override void set_Brightness
coordinateSpace
/* property */ public override IUICoordinateSpace get_CoordinateSpace
setCurrentMode:
/* property */ public override void set_CurrentMode
fixedCoordinateSpace
/* property */ public override IUICoordinateSpace get_FixedCoordinateSpace
mainScreen
/* property */ public UIScreen get_MainScreen
mirroredScreen
/* property */ public override UIScreen get_MirroredScreen
nativeBounds
/* property */ public override CGRect get_NativeBounds
nativeScale
/* property */ public override nfloat get_NativeScale
overscanCompensation
/* property */ public override UIScreenOverscanCompensation get_OverscanCompensation
setOverscanCompensation:
/* property */ public override void set_OverscanCompensation
preferredMode
/* property */ public override UIScreenMode get_PreferredMode
screens
/* property */ public UIScreen[] get_Screens
wantsSoftwareDimming
/* property */ public override bool get_WantsSoftwareDimming
setWantsSoftwareDimming:
/* property */ public override void set_WantsSoftwareDimming
scopeBarButtonTitleTextAttributesForState:
override NSDictionary _GetScopeBarButtonTitleTextAttributes
setScopeBarButtonTitleTextAttributes:forState:
override void _SetScopeBarButtonTitle
imageForSearchBarIcon:state:
public override UIImage GetImageForSearchBarIcon
positionAdjustmentForSearchBarIcon:
public override UIOffset GetPositionAdjustmentForSearchBarIcon
scopeBarButtonBackgroundImageForState:
public override UIImage GetScopeBarButtonBackgroundImage
scopeBarButtonDividerImageForLeftSegmentState:rightSegmentState:
public override UIImage GetScopeBarButtonDividerImage
searchFieldBackgroundImageForState:
public override UIImage GetSearchFieldBackgroundImage
setImage:forSearchBarIcon:state:
public override void SetImageforSearchBarIcon
setPositionAdjustment:forSearchBarIcon:
public override void SetPositionAdjustmentforSearchBarIcon
setScopeBarButtonBackgroundImage:forState:
public override void SetScopeBarButtonBackgroundImage
setScopeBarButtonDividerImage:forLeftSegmentState:rightSegmentState:
public override void SetScopeBarButtonDividerImage
setSearchFieldBackgroundImage:forState:
public override void SetSearchFieldBackgroundImage
setShowsCancelButton:animated:
public override void SetShowsCancelButton
autocapitalizationType
/* property */ public override UITextAutocapitalizationType get_AutocapitalizationType
setAutocapitalizationType:
/* property */ public override void set_AutocapitalizationType
autocorrectionType
/* property */ public override UITextAutocorrectionType get_AutocorrectionType
setAutocorrectionType:
/* property */ public override void set_AutocorrectionType
backgroundImage
/* property */ public override UIImage get_BackgroundImage
setBackgroundImage:
public override void SetBackgroundImage
enablesReturnKeyAutomatically
/* property */ public override bool get_EnablesReturnKeyAutomatically
setEnablesReturnKeyAutomatically:
/* property */ public override void set_EnablesReturnKeyAutomatically
setInputAccessoryView:
/* property */ public override void set_InputAccessoryView
keyboardAppearance
/* property */ public override UIKeyboardAppearance get_KeyboardAppearance
setKeyboardAppearance:
/* property */ public override void set_KeyboardAppearance
keyboardType
/* property */ public override UIKeyboardType get_KeyboardType
setKeyboardType:
/* property */ public override void set_KeyboardType
placeholder
/* property */ public override string get_Placeholder
setPlaceholder:
/* property */ public override void set_Placeholder
prompt
/* property */ public override string get_Prompt
setPrompt:
/* property */ public override void set_Prompt
returnKeyType
/* property */ public override UIReturnKeyType get_ReturnKeyType
setReturnKeyType:
/* property */ public override void set_ReturnKeyType
scopeBarBackgroundImage
/* property */ public override UIImage get_ScopeBarBackgroundImage
setScopeBarBackgroundImage:
/* property */ public override void set_ScopeBarBackgroundImage
scopeButtonTitles
/* property */ public override string[] get_ScopeButtonTitles
setScopeButtonTitles:
/* property */ public override void set_ScopeButtonTitles
searchBarStyle
/* property */ public override UISearchBarStyle get_SearchBarStyle
setSearchBarStyle:
/* property */ public override void set_SearchBarStyle
searchFieldBackgroundPositionAdjustment
/* property */ public override UIOffset get_SearchFieldBackgroundPositionAdjustment
setSearchFieldBackgroundPositionAdjustment:
/* property */ public override void set_SearchFieldBackgroundPositionAdjustment
isSearchResultsButtonSelected
/* property */ public override bool get_SearchResultsButtonSelected
setSearchResultsButtonSelected:
/* property */ public override void set_SearchResultsButtonSelected
searchTextPositionAdjustment
/* property */ public override UIOffset get_SearchTextPositionAdjustment
setSearchTextPositionAdjustment:
/* property */ public override void set_SearchTextPositionAdjustment
isSecureTextEntry
/* property */ public override bool get_SecureTextEntry
setSecureTextEntry:
/* property */ public override void set_SecureTextEntry
selectedScopeButtonIndex
/* property */ public override nint get_SelectedScopeButtonIndex
setSelectedScopeButtonIndex:
/* property */ public override void set_SelectedScopeButtonIndex
showsBookmarkButton
/* property */ public override bool get_ShowsBookmarkButton
setShowsBookmarkButton:
/* property */ public override void set_ShowsBookmarkButton
showsCancelButton
/* property */ public override bool get_ShowsCancelButton
setShowsCancelButton:
/* property */ public override void set_ShowsCancelButton
showsScopeBar
/* property */ public override bool get_ShowsScopeBar
setShowsScopeBar:
/* property */ public override void set_ShowsScopeBar
showsSearchResultsButton
/* property */ public override bool get_ShowsSearchResultsButton
setShowsSearchResultsButton:
/* property */ public override void set_ShowsSearchResultsButton
spellCheckingType
/* property */ public override UITextSpellCheckingType get_SpellCheckingType
setSpellCheckingType:
/* property */ public override void set_SpellCheckingType
text
/* property */ public override string get_Text
setText:
public override void SetText
animateTransition:
public override void AnimateTransition
animationEnded:
public override void AnimationEnded
animationControllerForDismissedController:
public override IUIViewControllerAnimatedTransitioning GetAnimationControllerForDismissedController
animationControllerForPresentedController:presentingController:sourceController:
public override IUIViewControllerAnimatedTransitioning GetAnimationControllerForPresentedController
interactionControllerForDismissal:
public override IUIViewControllerInteractiveTransitioning GetInteractionControllerForDismissal
interactionControllerForPresentation:
public override IUIViewControllerInteractiveTransitioning GetInteractionControllerForPresentation
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
public override UIPresentationController GetPresentationControllerForPresentedViewController
transitionDuration:
public override Double TransitionDuration
dimsBackgroundDuringPresentation
/* property */ public override bool get_DimsBackgroundDuringPresentation
setDimsBackgroundDuringPresentation:
/* property */ public override void set_DimsBackgroundDuringPresentation
hidesNavigationBarDuringPresentation
/* property */ public override bool get_HidesNavigationBarDuringPresentation
setHidesNavigationBarDuringPresentation:
/* property */ public override void set_HidesNavigationBarDuringPresentation
searchBar
/* property */ public override UISearchBar get_SearchBar
searchResultsController
/* property */ public override UIViewController get_SearchResultsController
searchResultsUpdater
/* property */ public override NSObject get_WeakSearchResultsUpdater
setSearchResultsUpdater:
/* property */ public override void set_WeakSearchResultsUpdater
setActive:animated:
public override void SetActive
displaysSearchBarInNavigationBar
/* property */ public override bool get_DisplaysSearchBarInNavigationBar
setDisplaysSearchBarInNavigationBar:
/* property */ public override void set_DisplaysSearchBarInNavigationBar
navigationItem
/* property */ public override UINavigationItem get_NavigationItem
searchContentsController
/* property */ public override UIViewController get_SearchContentsController
searchResultsTableView
/* property */ public override UITableView get_SearchResultsTableView
searchResultsTitle
/* property */ public override string get_SearchResultsTitle
setSearchResultsTitle:
/* property */ public override void set_SearchResultsTitle
searchResultsDataSource
/* property */ public override NSObject get_SearchResultsWeakDataSource
setSearchResultsDataSource:
/* property */ public override void set_SearchResultsWeakDataSource
searchResultsDelegate
/* property */ public override NSObject get_SearchResultsWeakDelegate
setSearchResultsDelegate:
/* property */ public override void set_SearchResultsWeakDelegate
contentPositionAdjustmentForSegmentType:barMetrics:
public override UIOffset ContentPositionAdjustment
dividerImageForLeftSegmentState:rightSegmentState:barMetrics:
public override UIImage DividerImageForLeftSegmentStaterightSegmentStatebarMetrics
contentOffsetForSegmentAtIndex:
public override CGSize GetContentOffset
imageForSegmentAtIndex:
public override UIImage ImageAt
initWithItems:
override IntPtr InitWithItems
insertSegmentWithTitle:atIndex:animated:
public override void InsertSegment
insertSegmentWithImage:atIndex:animated:
public override void InsertSegment
isEnabledForSegmentAtIndex:
public override bool IsEnabled
removeAllSegments
public override void RemoveAllSegments
removeSegmentAtIndex:animated:
public override void RemoveSegmentAtIndex
widthForSegmentAtIndex:
public override nfloat SegmentWidth
setContentOffset:forSegmentAtIndex:
public override void SetContentOffset
setContentPositionAdjustment:forSegmentType:barMetrics:
public override void SetContentPositionAdjustment
setDividerImage:forLeftSegmentState:rightSegmentState:barMetrics:
public override void SetDividerImage
setEnabled:forSegmentAtIndex:
public override void SetEnabled
setImage:forSegmentAtIndex:
public override void SetImage
setTitle:forSegmentAtIndex:
public override void SetTitle
setWidth:forSegmentAtIndex:
public override void SetWidth
titleForSegmentAtIndex:
public override string TitleAt
apportionsSegmentWidthsByContent
/* property */ public override bool get_ApportionsSegmentWidthsByContent
setApportionsSegmentWidthsByContent:
/* property */ public override void set_ApportionsSegmentWidthsByContent
segmentedControlStyle
/* property */ public override UISegmentedControlStyle get_ControlStyle
setSegmentedControlStyle:
/* property */ public override void set_ControlStyle
isMomentary
/* property */ public override bool get_Momentary
setMomentary:
/* property */ public override void set_Momentary
numberOfSegments
/* property */ public override nint get_NumberOfSegments
selectedSegmentIndex
/* property */ public override nint get_SelectedSegment
setSelectedSegmentIndex:
/* property */ public override void set_SelectedSegment
attributedText
/* property */ public override NSAttributedString get_AttributedText
setAttributedText:
public override void SetText
textAlignment
/* property */ public override UITextAlignment get_TextAlignment
setTextAlignment:
/* property */ public override void set_TextAlignment
drawAtPoint:withFont:
public CGSize DrawString
drawAtPoint:forWidth:withFont:lineBreakMode:
public CGSize DrawString
drawAtPoint:forWidth:withFont:fontSize:lineBreakMode:baselineAdjustment:
public CGSize DrawString
drawAtPoint:forWidth:withFont:minFontSize:actualFontSize:lineBreakMode:baselineAdjustment:
public CGSize DrawString
drawInRect:withFont:
public CGSize DrawString
drawInRect:withFont:lineBreakMode:
public CGSize DrawString
drawInRect:withFont:lineBreakMode:alignment:
public CGSize DrawString
sizeWithFont:
public CGSize StringSize
sizeWithFont:forWidth:lineBreakMode:
public CGSize StringSize
sizeWithFont:constrainedToSize:
public CGSize StringSize
sizeWithFont:constrainedToSize:lineBreakMode:
public CGSize StringSize
sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:
public CGSize StringSize
indexPathsForRowsInRect:
override IntPtr _IndexPathsForRowsInRect
beginUpdates
public override void BeginUpdates
cellForRowAtIndexPath:
public override UITableViewCell CellAt
deleteRowsAtIndexPaths:withRowAnimation:
public override void DeleteRows
deleteSections:withRowAnimation:
public override void DeleteSections
dequeueReusableCellWithIdentifier:
public override UITableViewCell DequeueReusableCell
dequeueReusableCellWithIdentifier:forIndexPath:
public override UITableViewCell DequeueReusableCell
dequeueReusableHeaderFooterViewWithIdentifier:
public override UITableViewHeaderFooterView DequeueReusableHeaderFooterView
deselectRowAtIndexPath:animated:
public override void DeselectRow
endUpdates
public override void EndUpdates
footerViewForSection:
public override UITableViewHeaderFooterView GetFooterView
headerViewForSection:
public override UITableViewHeaderFooterView GetHeaderView
indexPathForRowAtPoint:
public override NSIndexPath IndexPathForRowAtPoint
insertRowsAtIndexPaths:withRowAnimation:
public override void InsertRows
insertSections:withRowAnimation:
public override void InsertSections
moveRowAtIndexPath:toIndexPath:
public override void MoveRow
numberOfRowsInSection:
public override nint NumberOfRowsInSection
rectForFooterInSection:
public override CGRect RectForFooterInSection
rectForHeaderInSection:
public override CGRect RectForHeaderInSection
rectForRowAtIndexPath:
public override CGRect RectForRowAtIndexPath
rectForSection:
public override CGRect RectForSection
registerClass:forCellReuseIdentifier:
override void RegisterClassForCellReuse
registerClass:forHeaderFooterViewReuseIdentifier:
override void RegisterClassForHeaderFooterViewReuse
registerNib:forCellReuseIdentifier:
public override void RegisterNibForCellReuse
registerNib:forHeaderFooterViewReuseIdentifier:
public override void RegisterNibForHeaderFooterViewReuse
reloadRowsAtIndexPaths:withRowAnimation:
public override void ReloadRows
reloadSectionIndexTitles
public override void ReloadSectionIndexTitles
reloadSections:withRowAnimation:
public override void ReloadSections
scrollToNearestSelectedRowAtScrollPosition:animated:
public override void ScrollToNearestSelected
scrollToRowAtIndexPath:atScrollPosition:animated:
public override void ScrollToRow
selectRowAtIndexPath:animated:scrollPosition:
public override void SelectRow
setEditing:animated:
public override void SetEditing
allowsMultipleSelectionDuringEditing
/* property */ public override bool get_AllowsMultipleSelectionDuringEditing
setAllowsMultipleSelectionDuringEditing:
/* property */ public override void set_AllowsMultipleSelectionDuringEditing
allowsSelectionDuringEditing
/* property */ public override bool get_AllowsSelectionDuringEditing
setAllowsSelectionDuringEditing:
/* property */ public override void set_AllowsSelectionDuringEditing
isEditing
/* property */ public override bool get_Editing
setEditing:
/* property */ public override void set_Editing
estimatedRowHeight
/* property */ public override nfloat get_EstimatedRowHeight
setEstimatedRowHeight:
/* property */ public override void set_EstimatedRowHeight
estimatedSectionFooterHeight
/* property */ public override nfloat get_EstimatedSectionFooterHeight
setEstimatedSectionFooterHeight:
/* property */ public override void set_EstimatedSectionFooterHeight
estimatedSectionHeaderHeight
/* property */ public override nfloat get_EstimatedSectionHeaderHeight
setEstimatedSectionHeaderHeight:
/* property */ public override void set_EstimatedSectionHeaderHeight
indexPathForSelectedRow
/* property */ public override NSIndexPath get_IndexPathForSelectedRow
indexPathsForSelectedRows
/* property */ public override NSIndexPath[] get_IndexPathsForSelectedRows
indexPathsForVisibleRows
/* property */ public override NSIndexPath[] get_IndexPathsForVisibleRows
rowHeight
/* property */ public override nfloat get_RowHeight
setRowHeight:
/* property */ public override void set_RowHeight
sectionFooterHeight
/* property */ public override nfloat get_SectionFooterHeight
setSectionFooterHeight:
/* property */ public override void set_SectionFooterHeight
sectionHeaderHeight
/* property */ public override nfloat get_SectionHeaderHeight
setSectionHeaderHeight:
/* property */ public override void set_SectionHeaderHeight
sectionIndexBackgroundColor
/* property */ public override UIColor get_SectionIndexBackgroundColor
setSectionIndexBackgroundColor:
/* property */ public override void set_SectionIndexBackgroundColor
sectionIndexColor
/* property */ public override UIColor get_SectionIndexColor
setSectionIndexColor:
/* property */ public override void set_SectionIndexColor
sectionIndexMinimumDisplayRowCount
/* property */ public override nint get_SectionIndexMinimumDisplayRowCount
setSectionIndexMinimumDisplayRowCount:
/* property */ public override void set_SectionIndexMinimumDisplayRowCount
sectionIndexTrackingBackgroundColor
/* property */ public override UIColor get_SectionIndexTrackingBackgroundColor
setSectionIndexTrackingBackgroundColor:
/* property */ public override void set_SectionIndexTrackingBackgroundColor
separatorColor
/* property */ public override UIColor get_SeparatorColor
setSeparatorColor:
/* property */ public override void set_SeparatorColor
separatorEffect
/* property */ public override UIVisualEffect get_SeparatorEffect
setSeparatorEffect:
/* property */ public override void set_SeparatorEffect
separatorInset
/* property */ public override UIEdgeInsets get_SeparatorInset
setSeparatorInset:
/* property */ public override void set_SeparatorInset
separatorStyle
/* property */ public override UITableViewCellSeparatorStyle get_SeparatorStyle
setSeparatorStyle:
/* property */ public override void set_SeparatorStyle
tableFooterView
/* property */ public override UIView get_TableFooterView
setTableFooterView:
/* property */ public override void set_TableFooterView
tableHeaderView
/* property */ public override UIView get_TableHeaderView
setTableHeaderView:
/* property */ public override void set_TableHeaderView
didTransitionToState:
public override void DidTransitionToState
prepareForReuse
public override void PrepareForReuse
setHighlighted:animated:
public override void SetHighlighted
setSelected:animated:
public override void SetSelected
gestureRecognizerShouldBegin:
public override bool ShouldBegin
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
public override bool ShouldBeRequiredToFailBy
gestureRecognizer:shouldReceiveTouch:
public override bool ShouldReceiveTouch
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
public override bool ShouldRecognizeSimultaneously
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
public override bool ShouldRequireFailureOf
willTransitionToState:
public override void WillTransitionToState
accessoryType
/* property */ public override UITableViewCellAccessory get_Accessory
setAccessoryType:
/* property */ public override void set_Accessory
accessoryView
/* property */ public override UIView get_AccessoryView
setAccessoryView:
/* property */ public override void set_AccessoryView
contentView
/* property */ public override UIView get_ContentView
detailTextLabel
/* property */ public override UILabel get_DetailTextLabel
editingAccessoryType
/* property */ public override UITableViewCellAccessory get_EditingAccessory
setEditingAccessoryType:
/* property */ public override void set_EditingAccessory
editingAccessoryView
/* property */ public override UIView get_EditingAccessoryView
setEditingAccessoryView:
/* property */ public override void set_EditingAccessoryView
editingStyle
/* property */ public override UITableViewCellEditingStyle get_EditingStyle
indentationLevel
/* property */ public override nint get_IndentationLevel
setIndentationLevel:
/* property */ public override void set_IndentationLevel
indentationWidth
/* property */ public override nfloat get_IndentationWidth
setIndentationWidth:
/* property */ public override void set_IndentationWidth
multipleSelectionBackgroundView
/* property */ public override UIView get_MultipleSelectionBackgroundView
setMultipleSelectionBackgroundView:
/* property */ public override void set_MultipleSelectionBackgroundView
reuseIdentifier
/* property */ public override NSString get_ReuseIdentifier
selectedBackgroundView
/* property */ public override UIView get_SelectedBackgroundView
setSelectedBackgroundView:
/* property */ public override void set_SelectedBackgroundView
selectionStyle
/* property */ public override EKCalendarChooserSelectionStyle get_SelectionStyle
setSelectionStyle:
/* property */ public override void set_SelectionStyle
shouldIndentWhileEditing
/* property */ public override bool get_ShouldIndentWhileEditing
setShouldIndentWhileEditing:
/* property */ public override void set_ShouldIndentWhileEditing
showingDeleteConfirmation
/* property */ public override bool get_ShowingDeleteConfirmation
showsReorderControl
/* property */ public override bool get_ShowsReorderControl
setShowsReorderControl:
/* property */ public override void set_ShowsReorderControl
textLabel
/* property */ public override UILabel get_TextLabel
borderRectForBounds:
public override CGRect BorderRect
clearButtonRectForBounds:
public override CGRect ClearButtonRect
comparePosition:toPosition:
public override NSComparisonResult ComparePosition
deleteBackward
public override void DeleteBackward
dictationRecognitionFailed
public override void DictationRecognitionFailed
dictationRecordingDidEnd
public override void DictationRecordingDidEnd
drawPlaceholderInRect:
public override void DrawPlaceholder
drawTextInRect:
public override void DrawText
editingRectForBounds:
public override CGRect EditingRect
baseWritingDirectionForPosition:inDirection:
public override UITextWritingDirection GetBaseWritingDirection
caretRectForPosition:
public override CGRect GetCaretRectForPosition
characterOffsetOfPosition:withinRange:
public override nint GetCharacterOffsetOfPosition
characterRangeByExtendingPosition:inDirection:
public override UITextRange GetCharacterRange
characterRangeAtPoint:
public override UITextRange GetCharacterRangeAtPoint
closestPositionToPoint:
public override UITextPosition GetClosestPositionToPoint
closestPositionToPoint:withinRange:
public override UITextPosition GetClosestPositionToPoint
firstRectForRange:
public override CGRect GetFirstRectForRange
frameForDictationResultPlaceholder:
public override CGRect GetFrameForDictationResultPlaceholder
offsetFromPosition:toPosition:
public override nint GetOffsetFromPosition
positionFromPosition:offset:
public override UITextPosition GetPosition
positionFromPosition:inDirection:offset:
public override UITextPosition GetPosition
positionWithinRange:atCharacterOffset:
public override UITextPosition GetPosition
positionWithinRange:farthestInDirection:
public override UITextPosition GetPositionWithinRange
selectionRectsForRange:
public override UITextSelectionRect[] GetSelectionRects
textRangeFromPosition:toPosition:
public override UITextRange GetTextRange
textStylingAtPosition:inDirection:
public override NSDictionary GetTextStyling
insertDictationResult:
public override void InsertDictationResult
insertDictationResultPlaceholder
public override NSObject InsertDictationResultPlaceholder
insertText:
public override void InsertText
leftViewRectForBounds:
public override CGRect LeftViewRect
placeholderRectForBounds:
public override CGRect PlaceholderRect
removeDictationResultPlaceholder:willInsertResult:
public override void RemoveDictationResultPlaceholder
replaceRange:withText:
public override void ReplaceText
rightViewRectForBounds:
public override CGRect RightViewRect
setBaseWritingDirection:forRange:
public override void SetBaseWritingDirectionforRange
setMarkedText:selectedRange:
public override void SetMarkedText
shouldChangeTextInRange:replacementText:
public override bool ShouldChangeTextInRange
textInRange:
public override string TextInRange
textRectForBounds:
public override CGRect TextRect
unmarkText
public override void UnmarkText
adjustsFontSizeToFitWidth
/* property */ public override bool get_AdjustsFontSizeToFitWidth
setAdjustsFontSizeToFitWidth:
/* property */ public override void set_AdjustsFontSizeToFitWidth
allowsEditingTextAttributes
/* property */ public override bool get_AllowsEditingTextAttributes
setAllowsEditingTextAttributes:
/* property */ public override void set_AllowsEditingTextAttributes
attributedPlaceholder
/* property */ public override NSAttributedString get_AttributedPlaceholder
setAttributedPlaceholder:
/* property */ public override void set_AttributedPlaceholder
setBackground:
/* property */ public override void set_Background
beginningOfDocument
/* property */ public override UITextPosition get_BeginningOfDocument
borderStyle
/* property */ public override UITextBorderStyle get_BorderStyle
setBorderStyle:
/* property */ public override void set_BorderStyle
clearButtonMode
/* property */ public override UITextFieldViewMode get_ClearButtonMode
setClearButtonMode:
/* property */ public override void set_ClearButtonMode
clearsOnBeginEditing
/* property */ public override bool get_ClearsOnBeginEditing
setClearsOnBeginEditing:
/* property */ public override void set_ClearsOnBeginEditing
clearsOnInsertion
/* property */ public override bool get_ClearsOnInsertion
setClearsOnInsertion:
/* property */ public override void set_ClearsOnInsertion
disabledBackground
/* property */ public override UIImage get_DisabledBackground
setDisabledBackground:
/* property */ public override void set_DisabledBackground
endOfDocument
/* property */ public override UITextPosition get_EndOfDocument
hasText
/* property */ public override bool get_HasText
setInputView:
/* property */ public override void set_InputView
leftView
/* property */ public override UIView get_LeftView
setLeftView:
/* property */ public override void set_LeftView
leftViewMode
/* property */ public override UITextFieldViewMode get_LeftViewMode
setLeftViewMode:
/* property */ public override void set_LeftViewMode
markedTextRange
/* property */ public override UITextRange get_MarkedTextRange
markedTextStyle
/* property */ public override NSDictionary get_MarkedTextStyle
setMarkedTextStyle:
/* property */ public override void set_MarkedTextStyle
minimumFontSize
/* property */ public override nfloat get_MinimumFontSize
setMinimumFontSize:
/* property */ public override void set_MinimumFontSize
rightView
/* property */ public override UIView get_RightView
setRightView:
/* property */ public override void set_RightView
rightViewMode
/* property */ public override UITextFieldViewMode get_RightViewMode
setRightViewMode:
/* property */ public override void set_RightViewMode
selectedTextRange
/* property */ public override UITextRange get_SelectedTextRange
setSelectedTextRange:
/* property */ public override void set_SelectedTextRange
textColor
/* property */ public override UIColor get_TextColor
setTextColor:
public override void SetTextColor
textInputView
/* property */ public override UIView get_TextInputView
typingAttributes
/* property */ public override NSDictionary get_TypingAttributes
setTypingAttributes:
/* property */ public override void set_TypingAttributes
defaultTextAttributes
/* property */ public override NSDictionary get_WeakDefaultTextAttributes
setDefaultTextAttributes:
/* property */ public override void set_WeakDefaultTextAttributes
inputDelegate
/* property */ public override NSObject get_WeakInputDelegate
setInputDelegate:
/* property */ public override void set_WeakInputDelegate
tokenizer
/* property */ public override NSObject get_WeakTokenizer
scrollRangeToVisible:
public override void ScrollRangeToVisible
dataDetectorTypes
/* property */ public override UIDataDetectorType get_DataDetectorTypes
setDataDetectorTypes:
/* property */ public override void set_DataDetectorTypes
setEditable:
/* property */ public override void set_Editable
layoutManager
/* property */ public override NSLayoutManager get_LayoutManager
isSelectable
/* property */ public override bool get_Selectable
setSelectable:
/* property */ public override void set_Selectable
selectedRange
/* property */ public override NSRange get_SelectedRange
setSelectedRange:
/* property */ public override void set_SelectedRange
textContainer
/* property */ public override NSTextContainer get_TextContainer
textContainerInset
/* property */ public override UIEdgeInsets get_TextContainerInset
setTextContainerInset:
/* property */ public override void set_TextContainerInset
linkTextAttributes
/* property */ public override NSDictionary get_WeakLinkTextAttributes
setLinkTextAttributes:
/* property */ public override void set_WeakLinkTextAttributes
backgroundImageForToolbarPosition:barMetrics:
public override UIImage GetBackgroundImage
shadowImageForToolbarPosition:
public override UIImage GetShadowImage
setBackgroundImage:forToolbarPosition:barMetrics:
public override void SetBackgroundImage
setShadowImage:forToolbarPosition:
public override void SetShadowImage
effectForBlurEffect:
public UIVibrancyEffect FromBlurEffect
Xamarin_Internal__video:didFinishSavingWithError:contextInfo:
public void Callback
addConstraint:
public override void AddConstraint
addConstraints:
public override void AddConstraints
addGestureRecognizer:
public override void AddGestureRecognizer
addKeyframeWithRelativeStartTime:relativeDuration:animations:
public void AddKeyframeWithRelativeStartTime
addMotionEffect:
public override void AddMotionEffect
addSubview:
public override void AddSubview
alignmentRectForFrame:
public override CGRect AlignmentRectForFrame
animateWithDuration:animations:
public void Animate
animateKeyframesWithDuration:delay:options:animations:completion:
public void AnimateKeyframes
animateWithDuration:animations:completion:
public void AnimateNotify
animateWithDuration:delay:options:animations:completion:
public void AnimateNotify
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
public void AnimateNotify
beginAnimations:context:
public void BeginAnimations
bringSubviewToFront:
public override void BringSubviewToFront
commitAnimations
public void CommitAnimations
contentCompressionResistancePriorityForAxis:
public override Single ContentCompressionResistancePriority
contentHuggingPriorityForAxis:
public override Single ContentHuggingPriority
convertPoint:fromCoordinateSpace:
public override CGPoint ConvertPointFromCoordinateSpace
convertPoint:fromView:
public override CGPoint ConvertPointFromView
convertPoint:toCoordinateSpace:
public override CGPoint ConvertPointToCoordinateSpace
convertPoint:toView:
public override CGPoint ConvertPointToView
convertRect:fromCoordinateSpace:
public override CGRect ConvertRectFromCoordinateSpace
convertRect:fromView:
public override CGRect ConvertRectFromView
convertRect:toCoordinateSpace:
public override CGRect ConvertRectToCoordinateSpace
convertRect:toView:
public override CGRect ConvertRectToView
decodeRestorableStateWithCoder:
public override void DecodeRestorableState
drawRect:
public override void Draw
drawRect:forViewPrintFormatter:
public override void DrawRect
drawViewHierarchyInRect:afterScreenUpdates:
public override bool DrawViewHierarchy
encodeRestorableStateWithCoder:
public override void EncodeRestorableState
exchangeSubviewAtIndex:withSubviewAtIndex:
public override void ExchangeSubview
exerciseAmbiguityInLayout
public override void ExerciseAmbiguityInLayout
frameForAlignmentRect:
public override CGRect FrameForAlignmentRect
constraintsAffectingLayoutForAxis:
public override NSLayoutConstraint[] GetConstraintsAffectingLayout
hitTest:withEvent:
public override UIView HitTest
insertSubview:atIndex:
public override void InsertSubview
insertSubview:aboveSubview:
public override void InsertSubviewAbove
insertSubview:belowSubview:
public override void InsertSubviewBelow
invalidateIntrinsicContentSize
public override void InvalidateIntrinsicContentSize
isDescendantOfView:
public override bool IsDescendantOfView
layoutMarginsDidChange
public override void LayoutMarginsDidChange
layoutSubviews
public override void LayoutSubviews
didMoveToSuperview
public override void MovedToSuperview
didMoveToWindow
public override void MovedToWindow
needsUpdateConstraints
public override bool NeedsUpdateConstraints
performSystemAnimation:onViews:options:animations:completion:
public void PerformSystemAnimation
performWithoutAnimation:
public void PerformWithoutAnimation
pointInside:withEvent:
public override bool PointInside
removeConstraint:
public override void RemoveConstraint
removeConstraints:
public override void RemoveConstraints
removeFromSuperview
public override void RemoveFromSuperview
removeGestureRecognizer:
public override void RemoveGestureRecognizer
removeMotionEffect:
public override void RemoveMotionEffect
requiresConstraintBasedLayout
public bool RequiresConstraintBasedLayout
resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:
public override UIView ResizableSnapshotView
sendSubviewToBack:
public override void SendSubviewToBack
setAnimationBeginsFromCurrentState:
public void SetAnimationBeginsFromCurrentState
setAnimationCurve:
public void SetAnimationCurve
setAnimationDelay:
public void SetAnimationDelay
setAnimationDelegate:
public void SetAnimationDelegate
setAnimationDidStopSelector:
public void SetAnimationDidStopSelector
setAnimationDuration:
/* property */ public override void set_AnimationDuration
setAnimationRepeatAutoreverses:
public void SetAnimationRepeatAutoreverses
setAnimationRepeatCount:
/* property */ public override void set_AnimationRepeatCount
setAnimationStartDate:
public void SetAnimationStartDate
setAnimationTransition:forView:cache:
public void SetAnimationTransition
setAnimationWillStartSelector:
public void SetAnimationWillStartSelector
setContentCompressionResistancePriority:forAxis:
public override void SetContentCompressionResistancePriority
setContentHuggingPriority:forAxis:
public override void SetContentHuggingPriority
setNeedsUpdateConstraints
public override void SetNeedsUpdateConstraints
sizeThatFits:
public override CGSize SizeThatFits
sizeToFit
public override void SizeToFit
didAddSubview:
public override void SubviewAdded
systemLayoutSizeFittingSize:
public override CGSize SystemLayoutSizeFittingSize
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
public override CGSize SystemLayoutSizeFittingSize
tintColorDidChange
public override void TintColorDidChange
transitionFromView:toView:duration:options:completion:
public void TransitionNotify
transitionWithView:duration:options:animations:completion:
public void TransitionNotify
updateConstraints
public override void UpdateConstraints
updateConstraintsIfNeeded
public override void UpdateConstraintsIfNeeded
viewWithTag:
public override UIView ViewWithTag
willMoveToSuperview:
public override void WillMoveToSuperview
willMoveToWindow:
public override void WillMoveToWindow
willRemoveSubview:
public override void WillRemoveSubview
areAnimationsEnabled
/* property */ public bool get_AnimationsEnabled
setAnimationsEnabled:
/* property */ public void set_AnimationsEnabled
autoresizingMask
/* property */ public override UIViewAutoresizing get_AutoresizingMask
setAutoresizingMask:
/* property */ public override void set_AutoresizingMask
autoresizesSubviews
/* property */ public override bool get_AutosizesSubviews
setAutoresizesSubviews:
/* property */ public override void set_AutosizesSubviews
clearsContextBeforeDrawing
/* property */ public override bool get_ClearsContextBeforeDrawing
setClearsContextBeforeDrawing:
/* property */ public override void set_ClearsContextBeforeDrawing
clipsToBounds
/* property */ public override bool get_ClipsToBounds
setClipsToBounds:
/* property */ public override void set_ClipsToBounds
contentMode
/* property */ public override UIViewContentMode get_ContentMode
setContentMode:
/* property */ public override void set_ContentMode
contentScaleFactor
/* property */ public override nfloat get_ContentScaleFactor
setContentScaleFactor:
/* property */ public override void set_ContentScaleFactor
contentStretch
/* property */ public override CGRect get_ContentStretch
setContentStretch:
/* property */ public override void set_ContentStretch
isExclusiveTouch
/* property */ public override bool get_ExclusiveTouch
setExclusiveTouch:
/* property */ public override void set_ExclusiveTouch
setGestureRecognizers:
/* property */ public override void set_GestureRecognizers
hasAmbiguousLayout
/* property */ public override bool get_HasAmbiguousLayout
intrinsicContentSize
/* property */ public override CGSize get_IntrinsicContentSize
layoutMargins
/* property */ public override UIEdgeInsets get_LayoutMargins
setLayoutMargins:
/* property */ public override void set_LayoutMargins
maskView
/* property */ public override UIView get_MaskView
setMaskView:
/* property */ public override void set_MaskView
motionEffects
/* property */ public override UIMotionEffect[] get_MotionEffects
setMotionEffects:
/* property */ public override void set_MotionEffects
isMultipleTouchEnabled
/* property */ public override bool get_MultipleTouchEnabled
setMultipleTouchEnabled:
/* property */ public override void set_MultipleTouchEnabled
preservesSuperviewLayoutMargins
/* property */ public override bool get_PreservesSuperviewLayoutMargins
setPreservesSuperviewLayoutMargins:
/* property */ public override void set_PreservesSuperviewLayoutMargins
restorationIdentifier
/* property */ public override string get_RestorationIdentifier
setRestorationIdentifier:
/* property */ public override void set_RestorationIdentifier
subviews
/* property */ public override UIView[] get_Subviews
superview
/* property */ public override UIView get_Superview
tintAdjustmentMode
/* property */ public override UIViewTintAdjustmentMode get_TintAdjustmentMode
setTintAdjustmentMode:
/* property */ public override void set_TintAdjustmentMode
translatesAutoresizingMaskIntoConstraints
/* property */ public override bool get_TranslatesAutoresizingMaskIntoConstraints
setTranslatesAutoresizingMaskIntoConstraints:
/* property */ public override void set_TranslatesAutoresizingMaskIntoConstraints
viewForBaselineLayout
/* property */ public override UIView get_ViewForBaselineLayout
viewPrintFormatter
/* property */ public override UIViewPrintFormatter get_ViewPrintFormatter
addChildViewController:
public override void AddChildViewController
applicationFinishedRestoringState
public override void ApplicationFinishedRestoringState
attemptRotationToDeviceOrientation
public void AttemptRotationToDeviceOrientation
beginAppearanceTransition:animated:
public override void BeginAppearanceTransition
canPerformUnwindSegueAction:fromViewController:withSender:
public override bool CanPerformUnwind
childViewControllerForStatusBarHidden
public override UIViewController ChildViewControllerForStatusBarHidden
childViewControllerForStatusBarStyle
public override UIViewController ChildViewControllerForStatusBarStyle
didAnimateFirstHalfOfRotationToInterfaceOrientation:
public override void DidAnimateFirstHalfOfRotation
didMoveToParentViewController:
public override void DidMoveToParentViewController
didReceiveMemoryWarning
public override void DidReceiveMemoryWarning
didRotateFromInterfaceOrientation:
public override void DidRotate
dismissModalViewControllerAnimated:
public override void DismissModalViewController
dismissMoviePlayerViewControllerAnimated
public override void DismissMoviePlayerViewController
dismissViewControllerAnimated:completion:
public override void DismissViewController
endAppearanceTransition
public override void EndAppearanceTransition
overrideTraitCollectionForChildViewController:
public override UITraitCollection GetOverrideTraitCollectionForChildViewController
segueForUnwindingToViewController:fromViewController:identifier:
public override UIStoryboardSegue GetSegueForUnwinding
sizeForChildContentContainer:withParentContainerSize:
public override CGSize GetSizeForChildContentContainer
supportedInterfaceOrientations
public override UIInterfaceOrientationMask GetSupportedInterfaceOrientations
targetViewControllerForAction:sender:
public override UIViewController GetTargetViewControllerForAction
viewControllerForUnwindSegueAction:fromViewController:withSender:
public override UIViewController GetViewControllerForUnwind
loadView
public override void LoadView
performSegueWithIdentifier:sender:
public override void PerformSegue
preferredContentSizeDidChangeForChildContentContainer:
public override void PreferredContentSizeDidChangeForChildContentContainer
preferredInterfaceOrientationForPresentation
public override UIInterfaceOrientation PreferredInterfaceOrientationForPresentation
preferredStatusBarStyle
public override UIStatusBarStyle PreferredStatusBarStyle
prefersStatusBarHidden
public override bool PrefersStatusBarHidden
prepareForSegue:sender:
public override void PrepareForSegue
presentModalViewController:animated:
public override void PresentModalViewController
presentMoviePlayerViewControllerAnimated:
public override void PresentMoviePlayerViewController
presentViewController:animated:completion:
public override void PresentViewController
removeFromParentViewController
public override void RemoveFromParentViewController
setNeedsStatusBarAppearanceUpdate
public override void SetNeedsStatusBarAppearanceUpdate
setOverrideTraitCollection:forChildViewController:
public override void SetOverrideTraitCollection
setToolbarItems:animated:
public override void SetToolbarItems
shouldAutorotate
public override bool ShouldAutorotate
shouldAutorotateToInterfaceOrientation:
public override bool ShouldAutorotateToInterfaceOrientation
shouldPerformSegueWithIdentifier:sender:
public override bool ShouldPerformSegue
showDetailViewController:sender:
public override void ShowDetailViewController
systemLayoutFittingSizeDidChangeForChildContentContainer:
public override void SystemLayoutFittingSizeDidChangeForChildContentContainer
transitionFromViewController:toViewController:duration:options:animations:completion:
public override void Transition
updateViewConstraints
public override void UpdateViewConstraints
viewDidAppear:
public override void ViewDidAppear
viewDidDisappear:
public override void ViewDidDisappear
viewDidLayoutSubviews
public override void ViewDidLayoutSubviews
viewDidLoad
public override void ViewDidLoad
viewDidUnload
public override void ViewDidUnload
viewWillAppear:
public override void ViewWillAppear
viewWillDisappear:
public override void ViewWillDisappear
viewWillLayoutSubviews
public override void ViewWillLayoutSubviews
viewWillTransitionToSize:withTransitionCoordinator:
public override void ViewWillTransitionToSize
viewWillUnload
public override void ViewWillUnload
willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:
public override void WillAnimateFirstHalfOfRotation
willAnimateRotationToInterfaceOrientation:duration:
public override void WillAnimateRotation
willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:
public override void WillAnimateSecondHalfOfRotation
willMoveToParentViewController:
public override void WillMoveToParentViewController
willRotateToInterfaceOrientation:duration:
public override void WillRotate
willTransitionToTraitCollection:withTransitionCoordinator:
public override void WillTransitionToTraitCollection
automaticallyAdjustsScrollViewInsets
/* property */ public override bool get_AutomaticallyAdjustsScrollViewInsets
setAutomaticallyAdjustsScrollViewInsets:
/* property */ public override void set_AutomaticallyAdjustsScrollViewInsets
automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers
/* property */ public override bool get_AutomaticallyForwardAppearanceAndRotationMethodsToChildViewControllers
bottomLayoutGuide
/* property */ public override IUILayoutSupport get_BottomLayoutGuide
childViewControllers
/* property */ public override UIViewController[] get_ChildViewControllers
contentSizeForViewInPopover
/* property */ public override CGSize get_ContentSizeForViewInPopover
setContentSizeForViewInPopover:
/* property */ public override void set_ContentSizeForViewInPopover
definesPresentationContext
/* property */ public override bool get_DefinesPresentationContext
setDefinesPresentationContext:
/* property */ public override void set_DefinesPresentationContext
disablesAutomaticKeyboardDismissal
/* property */ public override bool get_DisablesAutomaticKeyboardDismissal
edgesForExtendedLayout
/* property */ public override UIRectEdge get_EdgesForExtendedLayout
setEdgesForExtendedLayout:
/* property */ public override void set_EdgesForExtendedLayout
editButtonItem
/* property */ public override UIBarButtonItem get_EditButtonItem
extendedLayoutIncludesOpaqueBars
/* property */ public override bool get_ExtendedLayoutIncludesOpaqueBars
setExtendedLayoutIncludesOpaqueBars:
/* property */ public override void set_ExtendedLayoutIncludesOpaqueBars
extensionContext
/* property */ public override NSExtensionContext get_ExtensionContext
hidesBottomBarWhenPushed
/* property */ public override bool get_HidesBottomBarWhenPushed
setHidesBottomBarWhenPushed:
/* property */ public override void set_HidesBottomBarWhenPushed
interfaceOrientation
/* property */ public override UIInterfaceOrientation get_InterfaceOrientation
isBeingDismissed
/* property */ public override bool get_IsBeingDismissed
isBeingPresented
/* property */ public override bool get_IsBeingPresented
isMovingFromParentViewController
/* property */ public override bool get_IsMovingFromParentViewController
isMovingToParentViewController
/* property */ public override bool get_IsMovingToParentViewController
isViewLoaded
/* property */ public override bool get_IsViewLoaded
isModalInPopover
/* property */ public override bool get_ModalInPopover
setModalInPopover:
/* property */ public override void set_ModalInPopover
modalPresentationCapturesStatusBarAppearance
/* property */ public override bool get_ModalPresentationCapturesStatusBarAppearance
setModalPresentationCapturesStatusBarAppearance:
/* property */ public override void set_ModalPresentationCapturesStatusBarAppearance
modalPresentationStyle
/* property */ public override UIModalPresentationStyle get_ModalPresentationStyle
setModalPresentationStyle:
/* property */ public override void set_ModalPresentationStyle
modalTransitionStyle
/* property */ public override UIModalTransitionStyle get_ModalTransitionStyle
setModalTransitionStyle:
/* property */ public override void set_ModalTransitionStyle
modalViewController
/* property */ public override UIViewController get_ModalViewController
navigationController
/* property */ public override UINavigationController get_NavigationController
nibBundle
/* property */ public override NSBundle get_NibBundle
nibName
/* property */ public override string get_NibName
parentViewController
/* property */ public override UIViewController get_ParentViewController
popoverPresentationController
/* property */ public override UIPopoverPresentationController get_PopoverPresentationController
preferredContentSize
/* property */ public override CGSize get_PreferredContentSize
setPreferredContentSize:
/* property */ public override void set_PreferredContentSize
preferredStatusBarUpdateAnimation
/* property */ public override UIStatusBarAnimation get_PreferredStatusBarUpdateAnimation
presentationController
/* property */ public override UIPresentationController get_PresentationController
presentedViewController
/* property */ public override UIViewController get_PresentedViewController
presentingViewController
/* property */ public override UIViewController get_PresentingViewController
providesPresentationContextTransitionStyle
/* property */ public override bool get_ProvidesPresentationContextTransitionStyle
setProvidesPresentationContextTransitionStyle:
/* property */ public override void set_ProvidesPresentationContextTransitionStyle
restorationClass
/* property */ public override Class get_RestorationClass
setRestorationClass:
/* property */ public override void set_RestorationClass
rotatingFooterView
/* property */ public override UIView get_RotatingFooterView
rotatingHeaderView
/* property */ public override UIView get_RotatingHeaderView
searchDisplayController
/* property */ public override UISearchDisplayController get_SearchDisplayController
shouldAutomaticallyForwardAppearanceMethods
/* property */ public override bool get_ShouldAutomaticallyForwardAppearanceMethods
shouldAutomaticallyForwardRotationMethods
/* property */ public override bool get_ShouldAutomaticallyForwardRotationMethods
splitViewController
public UISplitViewController GetSplitViewController
storyboard
/* property */ public override UIStoryboard get_Storyboard
tabBarController
/* property */ public override UITabBarController get_TabBarController
tabBarItem
/* property */ public override UITabBarItem get_TabBarItem
setTabBarItem:
/* property */ public override void set_TabBarItem
toolbarItems
/* property */ public override UIBarButtonItem[] get_ToolbarItems
setToolbarItems:
/* property */ public override void set_ToolbarItems
topLayoutGuide
/* property */ public override IUILayoutSupport get_TopLayoutGuide
setView:
/* property */ public override void set_View
wantsFullScreenLayout
/* property */ public override bool get_WantsFullScreenLayout
setWantsFullScreenLayout:
/* property */ public override void set_WantsFullScreenLayout
transitioningDelegate
/* property */ public override NSObject get_WeakTransitioningDelegate
setTransitioningDelegate:
/* property */ public override void set_WeakTransitioningDelegate
becomeKeyWindow
public override void BecomeKeyWindow
convertPoint:fromWindow:
public override CGPoint ConvertPointFromWindow
convertPoint:toWindow:
public override CGPoint ConvertPointToWindow
convertRect:fromWindow:
public override CGRect ConvertRectFromWindow
convertRect:toWindow:
public override CGRect ConvertRectToWindow
makeKeyAndVisible
public override void MakeKeyAndVisible
makeKeyWindow
public override void MakeKeyWindow
resignKeyWindow
public override void ResignKeyWindow
isKeyWindow
/* property */ public override bool get_IsKeyWindow
rootViewController
/* property */ public override UIViewController get_RootViewController
setRootViewController:
/* property */ public override void set_RootViewController
screen
/* property */ public override UIScreen get_Screen
setScreen:
/* property */ public override void set_Screen
windowLevel
/* property */ public override nfloat get_WindowLevel
setWindowLevel:
/* property */ public override void set_WindowLevel
addMenuItemWithImage:title:action:
public override void AddMenuItem
addMenuItemWithImageNamed:title:action:
public override void AddMenuItem
addMenuItemWithItemIcon:title:action:
public override void AddMenuItem
awakeWithContext:
public override void Awake
becomeCurrentPage
public override void BecomeCurrentPage
clearAllMenuItems
public override void ClearAllMenuItems
didDeactivate
public override void DidDeactivate
table:didSelectRowAtIndex:
public override void DidSelectRow
dismissController
public override void DismissController
dismissTextInputController
public override void DismissTextInputController
contextForSegueWithIdentifier:
public override NSObject GetContextForSegue
contextForSegueWithIdentifier:inTable:rowIndex:
public override NSObject GetContextForSegue
contextsForSegueWithIdentifier:
public override NSObject[] GetContextsForSegue
contextsForSegueWithIdentifier:inTable:rowIndex:
public override NSObject[] GetContextsForSegue
handleActionWithIdentifier:forLocalNotification:
public override void HandleLocalNotificationAction
handleActionWithIdentifier:forRemoteNotification:
public override void HandleRemoteNotificationAction
handleUserActivity:
public override void HandleUserActivity
invalidateUserActivity
public override void InvalidateUserActivity
openParentApplication:reply:
public bool OpenParentApplication
popController
public override void PopController
popToRootController
public override void PopToRootController
presentControllerWithName:context:
public override void PresentController
presentControllerWithNames:contexts:
public override void PresentController
presentTextInputControllerWithSuggestions:allowedInputMode:completion:
public override void PresentTextInputController
pushControllerWithName:context:
public override void PushController
reloadRootControllersWithNames:contexts:
public void ReloadRootControllers
updateUserActivity:userInfo:webpageURL:
public override void UpdateUserActivity
willActivate
public override void WillActivate
contentFrame
/* property */ public override CGRect get_ContentFrame
addCachedImage:name:
public override bool AddCachedImage
addCachedImageWithData:name:
public override bool AddCachedImage
removeAllCachedImages
public override void RemoveAllCachedImages
removeCachedImageWithName:
public override void RemoveCachedImage
screenBounds
/* property */ public override CGRect get_ScreenBounds
screenScale
/* property */ public override nfloat get_ScreenScale
cachedImages
/* property */ public override NSDictionary get_WeakCachedImages
accountDescription
/* property */ public override string get_AccountDescription
setAccountDescription:
/* property */ public override void set_AccountDescription
accountType
/* property */ public override ACAccountType get_AccountType
setAccountType:
/* property */ public override void set_AccountType
credential
/* property */ public override ACAccountCredential get_Credential
setCredential:
/* property */ public override void set_Credential
userFullName
/* property */ public override string get_UserFullName
username
/* property */ public override string get_Username
setUsername:
/* property */ public override void set_Username
oauthToken
/* property */ public override string get_OAuthToken
setOauthToken:
/* property */ public override void set_OAuthToken
accountWithIdentifier:
public override ACAccount FindAccount
accountsWithAccountType:
public override ACAccount[] FindAccounts
accountTypeWithAccountTypeIdentifier:
public override ACAccountType FindAccountType
renewCredentialsForAccount:completion:
public override void RenewCredentials
requestAccessToAccountsWithType:withCompletionHandler:
public override void RequestAccess
requestAccessToAccountsWithType:options:completion:
protected override void RequestAccess
saveAccount:withCompletionHandler:
public override void SaveAccount
accounts
/* property */ public override ACAccount[] get_Accounts
accessGranted
/* property */ public override bool get_AccessGranted
accountTypeDescription
/* property */ public override string get_Description
finishCancelledRequest
public override void FinishCancelledRequest
finishWithComposedVideoFrame:
public override void FinishWithComposedVideoFrame
finishWithError:
public override void FinishWithError
sourceFrameByTrackID:
public override CVPixelBuffer SourceFrameByTrackID
compositionTime
/* property */ public override CMTime get_CompositionTime
renderContext
/* property */ public override AVVideoCompositionRenderContext get_RenderContext
sourceTrackIDs
/* property */ public override NSNumber[] get_SourceTrackIDs
videoCompositionInstruction
public AVVideoCompositionInstruction Create
maxFrameDuration
/* property */ public override CMTime get_MaxFrameDuration
maxFrameRate
/* property */ public override Double get_MaxFrameRate
minFrameDuration
/* property */ public override CMTime get_MinFrameDuration
minFrameRate
/* property */ public override Double get_MinFrameRate
attachNode:
public override void AttachNode
connect:to:fromBus:toBus:format:
public override void Connect
connect:to:format:
public override void Connect
detachNode:
public override void DetachNode
disconnectNodeInput:bus:
public override void DisconnectNodeInput
disconnectNodeInput:
public override void DisconnectNodeInput
disconnectNodeOutput:bus:
public override void DisconnectNodeOutput
disconnectNodeOutput:
public override void DisconnectNodeOutput
prepare
public override void Prepare
startAndReturnError:
public override bool StartAndReturnError
inputNode
/* property */ public override AVAudioInputNode get_InputNode
mainMixerNode
/* property */ public override AVAudioMixerNode get_MainMixerNode
musicSequence
/* property */ public override MusicSequence get_MusicSequence
setMusicSequence:
/* property */ public override void set_MusicSequence
outputNode
/* property */ public override AVAudioOutputNode get_OutputNode
applicableRenderingAlgorithms
public override NSObject[] ApplicableRenderingAlgorithms
distanceAttenuationParameters
/* property */ public override AVAudioEnvironmentDistanceAttenuationParameters get_DistanceAttenuationParameters
listenerAngularOrientation
/* property */ public override AVAudio3DAngularOrientation get_ListenerAngularOrientation
setListenerAngularOrientation:
/* property */ public override void set_ListenerAngularOrientation
listenerPosition
/* property */ public override Vector3 get_ListenerPosition
setListenerPosition:
/* property */ public override void set_ListenerPosition
listenerVectorOrientation
/* property */ public override AVAudio3DVectorOrientation get_ListenerVectorOrientation
setListenerVectorOrientation:
/* property */ public override void set_ListenerVectorOrientation
nextAvailableInputBus
/* property */ public override nuint get_NextAvailableInputBus
obstruction
/* property */ public override Single get_Obstruction
setObstruction:
/* property */ public override void set_Obstruction
occlusion
/* property */ public override Single get_Occlusion
setOcclusion:
/* property */ public override void set_Occlusion
setOutputVolume:
/* property */ public override void set_OutputVolume
renderingAlgorithm
/* property */ public override AVAudio3DMixingRenderingAlgorithm get_RenderingAlgorithm
setRenderingAlgorithm:
/* property */ public override void set_RenderingAlgorithm
reverbBlend
/* property */ public override Single get_ReverbBlend
setReverbBlend:
/* property */ public override void set_ReverbBlend
reverbParameters
/* property */ public override AVAudioEnvironmentReverbParameters get_ReverbParameters
distanceAttenuationModel
/* property */ public override AVAudioEnvironmentDistanceAttenuationModel get_DistanceAttenuationModel
setDistanceAttenuationModel:
/* property */ public override void set_DistanceAttenuationModel
maximumDistance
/* property */ public override Single get_MaximumDistance
setMaximumDistance:
/* property */ public override void set_MaximumDistance
referenceDistance
/* property */ public override Single get_ReferenceDistance
setReferenceDistance:
/* property */ public override void set_ReferenceDistance
rolloffFactor
/* property */ public override Single get_RolloffFactor
setRolloffFactor:
/* property */ public override void set_RolloffFactor
loadFactoryReverbPreset:
public override void LoadFactoryReverbPreset
enable
/* property */ public override bool get_Enable
setEnable:
/* property */ public override void set_Enable
filterParameters
/* property */ public override AVAudioUnitEQFilterParameters get_FilterParameters
setLevel:
/* property */ public override void set_Level
readIntoBuffer:error:
public override bool ReadIntoBuffer
readIntoBuffer:frameCount:error:
public override bool ReadIntoBuffer
writeFromBuffer:error:
public override bool WriteFromBuffer
fileFormat
/* property */ public override AVAudioFormat get_FileFormat
framePosition
/* property */ public override Int64 get_FramePosition
setFramePosition:
/* property */ public override void set_FramePosition
processingFormat
/* property */ public override AVAudioFormat get_ProcessingFormat
inputFormatForBus:
public override AVAudioFormat GetBusInputFormat
outputFormatForBus:
public override AVAudioFormat GetBusOutputFormat
nameForInputBus:
public override string GetNameForInputBus
nameForOutputBus:
public override string GetNameForOutputBus
installTapOnBus:bufferSize:format:block:
public override void InstallTapOnBus
removeTapOnBus:
public override void RemoveTapOnBus
engine
/* property */ public override AVAudioEngine get_Engine
lastRenderTime
/* property */ public override AVAudioTime get_LastRenderTime
numberOfInputs
/* property */ public override nuint get_NumberOfInputs
numberOfOutputs
/* property */ public override nuint get_NumberOfOutputs
audioUnit
/* property */ public override AudioUnit get_AudioUnit
presentationLatency
/* property */ public override Double get_PresentationLatency
floatChannelData
/* property */ public override IntPtr get_FloatChannelData
frameCapacity
/* property */ public override UInt32 get_FrameCapacity
frameLength
/* property */ public override nuint get_FrameLength
setFrameLength:
/* property */ public override void set_FrameLength
int16ChannelData
/* property */ public override IntPtr get_Int16ChannelData
int32ChannelData
/* property */ public override IntPtr get_Int32ChannelData
stride
/* property */ public override nuint get_Stride
audioPlayerBeginInterruption:
public override void BeginInterruption
audioPlayerDecodeErrorDidOccur:error:
public override void DecoderError
audioPlayerEndInterruption:
public override void EndInterruption
audioPlayerEndInterruption:withFlags:
public override void EndInterruption
audioPlayerDidFinishPlaying:successfully:
public override void FinishedPlaying
nodeTimeForPlayerTime:
public override AVAudioTime GetNodeTimeFromPlayerTime
playerTimeForNodeTime:
public override AVAudioTime GetPlayerTimeFromNodeTime
prepareWithFrameCount:
public override void PrepareWithFrameCount
scheduleBuffer:completionHandler:
public override void ScheduleBuffer
scheduleBuffer:atTime:options:completionHandler:
public override void ScheduleBuffer
scheduleFile:atTime:completionHandler:
public override void ScheduleFile
scheduleSegment:startingFrame:frameCount:atTime:completionHandler:
public override void ScheduleSegment
audioRecorderBeginInterruption:
public override void BeginInterruption
audioRecorderEncodeErrorDidOccur:error:
public override void EncoderError
audioRecorderEndInterruption:
public override void EndInterruption
audioRecorderEndInterruption:withFlags:
public override void EndInterruption
audioRecorderDidFinishRecording:successfully:
public override void FinishedRecording
beginInterruption
public override void BeginInterruption
endInterruption
public override void EndInterruption
endInterruptionWithFlags:
public override void EndInterruption
inputIsAvailableChanged:
public override void InputIsAvailableChanged
channelLabel
/* property */ public override int get_ChannelLabel
channelName
/* property */ public override string get_ChannelName
channelNumber
/* property */ public override nint get_ChannelNumber
owningPortUID
/* property */ public override string get_OwningPortUID
setPreferredDataSource:error:
public override bool SetPreferredDataSource
channels
/* property */ public override AVAudioSessionChannelDescription[] get_Channels
dataSources
/* property */ public override AVAudioSessionChannelDescription[] get_DataSources
portName
/* property */ public override string get_PortName
portType
/* property */ public override NSString get_PortType
preferredDataSource
/* property */ public override AVAudioSessionDataSourceDescription get_PreferredDataSource
selectedDataSource
/* property */ public override AVAudioSessionDataSourceDescription get_SelectedDataSource
UID
/* property */ public override string get_UID
inputs
/* property */ public override AVCaptureInput[] get_Inputs
outputs
/* property */ public override AVPlayerItemOutput[] get_Outputs
loadAudioUnitPresetAtURL:error:
public override bool LoadAudioUnitPreset
audioComponentDescription
/* property */ override AudioComponentDescription get_AudioComponentDescription
manufacturerName
/* property */ public override string get_ManufacturerName
delayTime
/* property */ public override Double get_DelayTime
setDelayTime:
/* property */ public override void set_DelayTime
feedback
/* property */ public override Single get_Feedback
setFeedback:
/* property */ public override void set_Feedback
lowPassCutoff
/* property */ public override Single get_LowPassCutoff
setLowPassCutoff:
/* property */ public override void set_LowPassCutoff
wetDryMix
/* property */ public override Single get_WetDryMix
setWetDryMix:
/* property */ public override void set_WetDryMix
loadFactoryPreset:
public override void LoadFactoryPreset
preGain
/* property */ public override Single get_PreGain
setPreGain:
/* property */ public override void set_PreGain
bypass
/* property */ public override bool get_Bypass
setBypass:
/* property */ public override void set_Bypass
bands
/* property */ public override AVAudioUnitEQFilterParameters[] get_Bands
globalGain
/* property */ public override Single get_GlobalGain
setGlobalGain:
/* property */ public override void set_GlobalGain
bandwidth
/* property */ public override Single get_Bandwidth
setBandwidth:
/* property */ public override void set_Bandwidth
filterType
/* property */ public override AVAudioUnitEQFilterType get_FilterType
setFilterType:
/* property */ public override void set_FilterType
setFrequency:
/* property */ public override void set_Frequency
gain
/* property */ public override Single get_Gain
setGain:
/* property */ public override void set_Gain
sendController:withValue:onChannel:
public override void SendController
sendMIDIEvent:data1:data2:
public override void SendMidiEvent
sendMIDIEvent:data1:
public override void SendMidiEvent
sendMIDISysExEvent:
public override void SendMidiSysExEvent
sendPitchBend:onChannel:
public override void SendPitchBend
sendPressure:onChannel:
public override void SendPressure
sendPressureForKey:withValue:onChannel:
public override void SendPressureForKey
sendProgramChange:onChannel:
public override void SendProgramChange
sendProgramChange:bankMSB:bankLSB:onChannel:
public override void SendProgramChange
startNote:withVelocity:onChannel:
public override void StartNote
stopNote:onChannel:
public override void StopNote
loadAudioFilesAtURLs:error:
public override bool LoadAudioFiles
loadInstrumentAtURL:error:
public override bool LoadInstrument
loadSoundBankInstrumentAtURL:program:bankMSB:bankLSB:error:
public override bool LoadSoundBank
globalTuning
/* property */ public override Single get_GlobalTuning
setGlobalTuning:
/* property */ public override void set_GlobalTuning
masterGain
/* property */ public override Single get_MasterGain
setMasterGain:
/* property */ public override void set_MasterGain
stereoPan
/* property */ public override Single get_StereoPan
setStereoPan:
/* property */ public override void set_StereoPan
overlap
/* property */ public override Single get_Overlap
setOverlap:
/* property */ public override void set_Overlap
pitch
/* property */ public override Double get_Pitch
setPitch:
/* property */ public override void set_Pitch
extrapolateTimeFromAnchor:
public override AVAudioTime ExtrapolateTimeFromAnchor
timeWithAudioTimeStamp:sampleRate:
public AVAudioTime FromAudioTimeStamp
timeWithHostTime:
public AVAudioTime FromHostTime
timeWithHostTime:sampleTime:atRate:
public AVAudioTime FromHostTime
timeWithSampleTime:atRate:
public AVAudioTime FromSampleTime
hostTimeForSeconds:
public UInt64 HostTimeForSeconds
secondsForHostTime:
public Double SecondsForHostTime
audioTimeStamp
/* property */ public override AudioTimeStamp get_AudioTimeStamp
hostTime
/* property */ public override UInt64 get_HostTime
isHostTimeValid
/* property */ public override bool get_HostTimeValid
sampleTime
/* property */ public override Int64 get_SampleTime
isSampleTimeValid
/* property */ public override bool get_SampleTimeValid
cancelLoading
public override void CancelLoading
chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:
public override AVMetadataItem[] ChapterMetadataGroups
assetWithURL:
public AVAsset FromUrl
chapterMetadataGroupsBestMatchingPreferredLanguages:
public override AVTimedMetadataGroup[] GetChapterMetadataGroupsBestMatchingPreferredLanguages
loadValuesAsynchronouslyForKeys:completionHandler:
public override void LoadValuesAsynchronously
mediaSelectionGroupForMediaCharacteristic:
public override AVMediaSelectionGroup MediaSelectionGroupForMediaCharacteristic
metadataForFormat:
public override AVMetadataItem[] GetMetadataForFormat
statusOfValueForKey:error:
public override AVKeyValueStatus StatusOfValueForKeyerror
tracksWithMediaCharacteristic:
public override AVAssetTrack[] TracksWithMediaCharacteristic
tracksWithMediaType:
public override AVAssetTrack[] TracksWithMediaType
trackWithTrackID:
public override AVAssetTrack TrackWithTrackID
availableChapterLocales
/* property */ public override NSLocale[] get_AvailableChapterLocales
availableMediaCharacteristicsWithMediaSelectionOptions
/* property */ public override string[] get_AvailableMediaCharacteristicsWithMediaSelectionOptions
availableMetadataFormats
/* property */ public override string[] get_AvailableMetadataFormats
commonMetadata
/* property */ public override AVMetadataItem[] get_CommonMetadata
isCompatibleWithSavedPhotosAlbum
/* property */ public override bool get_CompatibleWithSavedPhotosAlbum
isComposable
/* property */ public override bool get_Composable
isExportable
/* property */ public override bool get_Exportable
lyrics
/* property */ public override string get_Lyrics
isPlayable
/* property */ public override bool get_Playable
preferredRate
/* property */ public override Single get_PreferredRate
preferredTransform
/* property */ public override CGAffineTransform get_PreferredTransform
preferredVolume
/* property */ public override Single get_PreferredVolume
hasProtectedContent
/* property */ public override bool get_ProtectedContent
providesPreciseDurationAndTiming
/* property */ public override bool get_ProvidesPreciseDurationAndTiming
isReadable
/* property */ public override bool get_Readable
referenceRestrictions
/* property */ public override AVAssetReferenceRestrictions get_ReferenceRestrictions
trackGroups
/* property */ public override AVAssetTrackGroup[] get_TrackGroups
tracks
/* property */ public override AVPlayerItemTrack[] get_Tracks
addOutput:
public override void AddOutput
canAddOutput:
public override bool CanAddOutput
cancelReading
public override void CancelReading
assetReaderWithAsset:error:
public AVAssetReader FromAsset
startReading
public override bool StartReading
timeRange
/* property */ public override CMTimeRange get_TimeRange
setTimeRange:
/* property */ public override void set_TimeRange
copyNextSampleBuffer
public override CMSampleBuffer CopyNextSampleBuffer
markConfigurationAsFinal
public override void MarkConfigurationAsFinal
resetForReadingTimeRanges:
public override void ResetForReadingTimeRanges
alwaysCopiesSampleData
/* property */ public override bool get_AlwaysCopiesSampleData
setAlwaysCopiesSampleData:
/* property */ public override void set_AlwaysCopiesSampleData
mediaType
/* property */ public override PHAssetMediaType get_MediaType
supportsRandomAccess
/* property */ public override bool get_SupportsRandomAccess
setSupportsRandomAccess:
/* property */ public override void set_SupportsRandomAccess
assetReaderOutputMetadataAdaptorWithAssetReaderTrackOutput:
public AVAssetReaderOutputMetadataAdaptor Create
nextTimedMetadataGroup
public override AVTimedMetadataGroup NextTimedMetadataGroup
assetReaderTrackOutput
/* property */ public override AVAssetReaderTrackOutput get_AssetReaderTrackOutput
assetReaderSampleReferenceOutputWithTrack:
public AVAssetReaderSampleReferenceOutput Create
track
/* property */ public override AVAssetTrack get_Track
assetReaderTrackOutputWithTrack:outputSettings:
AVAssetReaderTrackOutput FromTrack
audioTimePitchAlgorithm
/* property */ public override NSString get_AudioTimePitchAlgorithm
setAudioTimePitchAlgorithm:
/* property */ public override void set_AudioTimePitchAlgorithm
outputSettings
/* property */ public override NSDictionary get_OutputSettings
assetReaderAudioMixOutputWithAudioTracks:audioSettings:
AVAssetReaderAudioMixOutput FromTracks
audioMix
/* property */ public override AVAudioMix get_AudioMix
setAudioMix:
/* property */ public override void set_AudioMix
audioTracks
/* property */ public override AVAssetTrack[] get_AudioTracks
resourceLoader:shouldWaitForLoadingOfRequestedResource:
public override bool ShouldWaitForLoadingOfRequestedResource
resourceLoader:didCancelAuthenticationChallenge:
public override void DidCancelAuthenticationChallenge
resourceLoader:didCancelLoadingRequest:
public override void DidCancelLoadingRequest
resourceLoader:shouldWaitForRenewalOfRequestedResource:
public override bool ShouldWaitForRenewalOfRequestedResource
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
public override bool ShouldWaitForResponseToAuthenticationChallenge
finishLoadingWithResponse:data:redirect:
public override void FinishLoading
finishLoading
public override void FinishLoading
finishLoadingWithError:
public override void FinishLoadingWithError
streamingContentKeyRequestDataForApp:contentIdentifier:options:error:
public override NSData GetStreamingContentKey
contentInformationRequest
/* property */ public override AVAssetResourceLoadingContentInformationRequest get_ContentInformationRequest
dataRequest
/* property */ public override AVAssetResourceLoadingDataRequest get_DataRequest
finished
/* property */ public override bool get_Finished
redirect
/* property */ public override NSUrlRequest get_Redirect
setRedirect:
/* property */ public override void set_Redirect
response
/* property */ public override NSUrlResponse get_Response
setResponse:
/* property */ public override void set_Response
isByteRangeAccessSupported
/* property */ public override bool get_ByteRangeAccessSupported
setByteRangeAccessSupported:
/* property */ public override void set_ByteRangeAccessSupported
contentLength
/* property */ public override Int64 get_ContentLength
setContentLength:
/* property */ public override void set_ContentLength
contentType
/* property */ public override string get_ContentType
setContentType:
/* property */ public override void set_ContentType
renewalDate
/* property */ public override NSDate get_RenewalDate
setRenewalDate:
/* property */ public override void set_RenewalDate
addInput:
public override void AddInput
addInputGroup:
public override void AddInputGroup
canAddInput:
public override bool CanAddInput
canAddInputGroup:
public override bool CanAddInputGroup
canApplyOutputSettings:forMediaType:
public override bool CanApplyOutputSettings
cancelWriting
public override void CancelWriting
endSessionAtSourceTime:
public override void EndSessionAtSourceTime
finishWriting
public override bool FinishWriting
finishWritingWithCompletionHandler:
public override void FinishWriting
assetWriterWithURL:fileType:error:
public AVAssetWriter FromUrl
startSessionAtSourceTime:
public override void StartSessionAtSourceTime
startWriting
public override bool StartWriting
availableMediaTypes
/* property */ public override NSString[] get_AvailableMediaTypes
directoryForTemporaryFiles
/* property */ public override NSUrl get_DirectoryForTemporaryFiles
setDirectoryForTemporaryFiles:
/* property */ public override void set_DirectoryForTemporaryFiles
inputGroups
/* property */ public override AVAssetWriterInputGroup[] get_InputGroups
setMetadata:
/* property */ public override void set_Metadata
movieFragmentInterval
/* property */ public override CMTime get_MovieFragmentInterval
setMovieFragmentInterval:
/* property */ public override void set_MovieFragmentInterval
movieTimeScale
/* property */ public override int get_MovieTimeScale
setMovieTimeScale:
/* property */ public override void set_MovieTimeScale
outputURL
/* property */ public override NSUrl get_OutputUrl
shouldOptimizeForNetworkUse
/* property */ public override bool get_ShouldOptimizeForNetworkUse
setShouldOptimizeForNetworkUse:
/* property */ public override void set_ShouldOptimizeForNetworkUse
addTrackAssociationWithTrackOfInput:type:
public override void AddTrackAssociationWithTrackOfInput
appendSampleBuffer:
public override bool AppendSampleBuffer
canAddTrackAssociationWithTrackOfInput:type:
public override bool CanAddTrackAssociationWithTrackOfInput
assetWriterInputWithMediaType:outputSettings:sourceFormatHint:
AVAssetWriterInput Create
assetWriterInputWithMediaType:outputSettings:
AVAssetWriterInput FromType
markAsFinished
public override void MarkAsFinished
markCurrentPassAsFinished
public override void MarkCurrentPassAsFinished
requestMediaDataWhenReadyOnQueue:usingBlock:
public override void RequestMediaDataWhenReadyOnQueue
respondToEachPassDescriptionOnQueue:usingBlock:
public override void SetPassHandler
canPerformMultiplePasses
/* property */ public override bool get_CanPerformMultiplePasses
currentPassDescription
/* property */ public override AVAssetWriterInputPassDescription get_CurrentPassDescription
expectsMediaDataInRealTime
/* property */ public override bool get_ExpectsMediaDataInRealTime
setExpectsMediaDataInRealTime:
/* property */ public override void set_ExpectsMediaDataInRealTime
extendedLanguageTag
/* property */ public override string get_ExtendedLanguageTag
setExtendedLanguageTag:
/* property */ public override void set_ExtendedLanguageTag
languageCode
/* property */ public override string get_LanguageCode
setLanguageCode:
/* property */ public override void set_LanguageCode
marksOutputTrackAsEnabled
/* property */ public override bool get_MarksOutputTrackAsEnabled
setMarksOutputTrackAsEnabled:
/* property */ public override void set_MarksOutputTrackAsEnabled
mediaTimeScale
/* property */ public override int get_MediaTimeScale
setMediaTimeScale:
/* property */ public override void set_MediaTimeScale
setNaturalSize:
/* property */ public override void set_NaturalSize
performsMultiPassEncodingIfSupported
/* property */ public override bool get_PerformsMultiPassEncodingIfSupported
setPerformsMultiPassEncodingIfSupported:
/* property */ public override void set_PerformsMultiPassEncodingIfSupported
preferredMediaChunkAlignment
/* property */ public override nint get_PreferredMediaChunkAlignment
setPreferredMediaChunkAlignment:
/* property */ public override void set_PreferredMediaChunkAlignment
preferredMediaChunkDuration
/* property */ public override CMTime get_PreferredMediaChunkDuration
setPreferredMediaChunkDuration:
/* property */ public override void set_PreferredMediaChunkDuration
setPreferredVolume:
/* property */ public override void set_PreferredVolume
isReadyForMoreMediaData
/* property */ public override bool get_ReadyForMoreMediaData
sampleReferenceBaseURL
/* property */ public override NSUrl get_SampleReferenceBaseUrl
setSampleReferenceBaseURL:
/* property */ public override void set_SampleReferenceBaseUrl
sourceFormatHint
/* property */ public override CMFormatDescription get_SourceFormatHint
sourceTimeRanges
/* property */ public override NSValue[] get_SourceTimeRanges
appendTimedMetadataGroup:
public override bool AppendTimedMetadataGroup
assetWriterInputMetadataAdaptorWithAssetWriterInput:
public AVAssetWriterInputMetadataAdaptor Create
assetWriterInput
/* property */ public override AVAssetWriterInput get_AssetWriterInput
assetWriterInputGroupWithInputs:defaultInput:
public AVAssetWriterInputGroup Create
defaultInput
/* property */ public override AVAssetWriterInput get_DefaultInput
appendPixelBuffer:withPresentationTime:
public override bool AppendPixelBufferWithPresentationTime
assetWriterInputPixelBufferAdaptorWithAssetWriterInput:sourcePixelBufferAttributes:
public AVAssetWriterInputPixelBufferAdaptor FromInput
pixelBufferPool
/* property */ public override CVPixelBufferPool get_PixelBufferPool
sourcePixelBufferAttributes
public override NSDictionary SourcePixelBufferAttributes
compatibleTrackForCompositionTrack:
public override AVAssetTrack CompatibleTrack
URLAssetWithURL:options:
AVUrlAsset FromUrl
isPlayableExtendedMIMEType:
public bool IsPlayable
audiovisualMIMETypes
/* property */ public string[] get_AudiovisualMimeTypes
audiovisualTypes
/* property */ public string[] get_AudiovisualTypes
resourceLoader
/* property */ public override AVAssetResourceLoader get_ResourceLoader
associatedTracksOfType:
public override NSString GetAssociatedTracksOfType
hasMediaCharacteristic:
public override bool HasMediaCharacteristic
samplePresentationTimeForTrackTime:
public override CMTime SamplePresentationTimeForTrackTime
segmentForTrackTime:
public override AVAssetTrackSegment SegmentForTrackTime
availableTrackAssociationTypes
/* property */ public override NSString[] get_AvailableTrackAssociationTypes
estimatedDataRate
/* property */ public override Single get_EstimatedDataRate
formatDescriptions
/* property */ public override NSObject[] get_FormatDescriptionsAsObjects
naturalTimeScale
/* property */ public override int get_NaturalTimeScale
nominalFrameRate
/* property */ public override Single get_NominalFrameRate
requiresFrameReordering
/* property */ public override bool get_RequiresFrameReordering
segments
/* property */ public override AVCompositionTrackSegment[] get_Segments
isSelfContained
/* property */ public override bool get_SelfContained
totalSampleDataLength
/* property */ public override Int64 get_TotalSampleDataLength
trackID
/* property */ public override int get_TrackID
trackIDs
/* property */ public override NSNumber[] get_TrackIDs
mediaSelectionOptionWithPropertyList:
public override AVMediaSelectionOption GetMediaSelectionOptionForPropertyList
mediaSelectionOptionsFromArray:withLocale:
public AVMediaSelectionOption[] MediaSelectionOptions
mediaSelectionOptionsFromArray:withMediaCharacteristics:
public AVMediaSelectionOption[] MediaSelectionOptions
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
public AVMediaSelectionOption[] MediaSelectionOptionsExcludingCharacteristics
playableMediaSelectionOptionsFromArray:
public AVMediaSelectionOption[] PlayableMediaSelectionOptions
allowsEmptySelection
/* property */ public override bool get_AllowsEmptySelection
defaultOption
/* property */ public override AVMediaSelectionOption get_DefaultOption
options
/* property */ public override NSDictionary get_Options
associatedMediaSelectionOptionInMediaSelectionGroup:
public override AVMediaSelectionOption AssociatedMediaSelectionOptionInMediaSelectionGroup
displayNameWithLocale:
public override string GetDisplayName
mediaSubTypes
/* property */ public override NSNumber[] get_MediaSubTypes
propertyList
/* property */ public override NSObject get_PropertyList
metadataItemsFromArray:filteredAndSortedAccordingToPreferredLanguages:
public AVMetadataItem[] FilterFromPreferredLanguages
metadataItemsFromArray:filteredByIdentifier:
public AVMetadataItem[] FilterWithIdentifier
metadataItemsFromArray:filteredByMetadataItemFilter:
public AVMetadataItem[] FilterWithItemFilter
metadataItemsFromArray:withKey:keySpace:
public AVMetadataItem[] FilterWithKey
metadataItemsFromArray:withLocale:
public AVMetadataItem[] FilterWithLocale
keyForIdentifier:
public NSObject GetKeyForIdentifier
keySpaceForIdentifier:
public NSString GetKeySpaceForIdentifier
identifierForKey:keySpace:
public NSString GetMetadataIdentifier
commonKey
/* property */ public override string get_CommonKey
dataType
/* property */ public override MTLDataType get_DataType
dataValue
/* property */ public override NSData get_DataValue
dateValue
/* property */ public override NSDate get_DateValue
extraAttributes
/* property */ public override NSDictionary get_ExtraAttributes
key
/* property */ public override string get_Key
keySpace
/* property */ public override string get_KeySpace
numberValue
/* property */ public override NSNumber get_NumberValue
faceID
/* property */ public override nint get_FaceID
hasRollAngle
/* property */ public override bool get_HasRollAngle
hasYawAngle
/* property */ public override bool get_HasYawAngle
rollAngle
/* property */ public override nfloat get_RollAngle
yawAngle
/* property */ public override nfloat get_YawAngle
play:
public override void Play
currentPosition
/* property */ public override Double get_CurrentPosition
setCurrentPosition:
/* property */ public override void set_CurrentPosition
metadataItem
public AVMutableMetadataItem Create
setDataType:
/* property */ public override void set_DataType
setExtraAttributes:
/* property */ public override void set_ExtraAttributes
setKey:
/* property */ public override void set_Key
setKeySpace:
/* property */ public override void set_KeySpace
setIdentifier:
/* property */ public override void set_Identifier
setTime:
/* property */ public override void set_Time
insertEmptyTimeRange:
public override void InserEmptyTimeRange
insertTimeRange:ofTrack:atTime:error:
public override bool InsertTimeRange
insertTimeRanges:ofTracks:atTime:error:
public override bool InsertTimeRanges
removeTimeRange:
public override void RemoveTimeRange
scaleTimeRange:toDuration:
public override void ScaleTimeRange
validateTrackSegments:error:
public override bool ValidateTrackSegments
setNaturalTimeScale:
/* property */ public override void set_NaturalTimeScale
setPreferredTransform:
/* property */ public override void set_PreferredTransform
setSegments:
/* property */ public override void set_Segments
timeMapping
/* property */ public override CMTimeMapping get_TimeMapping
addMutableTrackWithMediaType:preferredTrackID:
public override AVMutableCompositionTrack AddMutableTrack
composition
public AVMutableComposition Create
mutableTrackCompatibleWithTrack:
public override AVMutableCompositionTrack CreateMutableTrack
insertTimeRange:ofAsset:atTime:error:
public override bool Insert
removeTrack:
public override void RemoveTrack
compositionTrackSegmentWithTimeRange:
public IntPtr FromTimeRange
compositionTrackSegmentWithURL:trackID:sourceTimeRange:targetTimeRange:
public IntPtr FromUrl
sourceTrackID
/* property */ public override int get_SourceTrackID
sourceURL
/* property */ public override NSUrl get_SourceUrl
cancelExport
public override void CancelExport
determineCompatibilityOfExportPreset:withAsset:outputFileType:completionHandler:
public void DetermineCompatibilityOfExportPreset
determineCompatibleFileTypesWithCompletionHandler:
public override void DetermineCompatibleFileTypes
exportAsynchronouslyWithCompletionHandler:
public override void ExportAsynchronously
exportPresetsCompatibleWithAsset:
public string[] ExportPresetsCompatibleWithAsset
exportSessionWithAsset:presetName:
public AVAssetExportSession FromAsset
allExportPresets
/* property */ public string[] get_AllExportPresets
canPerformMultiplePassesOverSourceMediaData
/* property */ public override bool get_CanPerformMultiplePassesOverSourceMediaData
setCanPerformMultiplePassesOverSourceMediaData:
/* property */ public override void set_CanPerformMultiplePassesOverSourceMediaData
estimatedOutputFileLength
/* property */ public override Int64 get_EstimatedOutputFileLength
fileLengthLimit
/* property */ public override Int64 get_FileLengthLimit
setFileLengthLimit:
/* property */ public override void set_FileLengthLimit
maxDuration
/* property */ public override CMTime get_MaxDuration
metadataItemFilter
/* property */ public override AVMetadataItemFilter get_MetadataItemFilter
setMetadataItemFilter:
/* property */ public override void set_MetadataItemFilter
setOutputFileType:
/* property */ public override void set_OutputFileType
setOutputURL:
/* property */ public override void set_OutputUrl
presetName
/* property */ public override string get_PresetName
progress
/* property */ public override Single get_Progress
supportedFileTypes
/* property */ public override NSObject[] get_SupportedFileTypes
inputParameters
/* property */ public override AVAudioMixInputParameters[] get_InputParameters
setInputParameters:
/* property */ public override void set_InputParameters
getVolumeRampForTime:startVolume:endVolume:timeRange:
public override bool GetVolumeRamp
audioTapProcessor
/* property */ public override MTAudioProcessingTap get_AudioTapProcessor
audioMixInputParameters
public AVMutableAudioMixInputParameters Create
audioMixInputParametersWithTrack:
public AVMutableAudioMixInputParameters FromTrack
setVolume:atTime:
public override void SetVolume
setVolumeRampFromStartVolume:toEndVolume:timeRange:
public override void SetVolumeRamp
setAudioTapProcessor:
/* property */ public override void set_AudioTapProcessor
setTrackID:
/* property */ public override void set_TrackID
requiredPixelBufferAttributesForRenderContext
public override NSDictionary RequiredPixelBufferAttributesForRenderContext
renderContextChanged:
public override void RenderContextChanged
startVideoCompositionRequest:
public override void StartVideoCompositionRequest
cancelAllPendingVideoCompositionRequests
public override void CancelAllPendingVideoCompositionRequests
videoCompositionWithPropertiesOfAsset:
public AVMutableVideoComposition Create
isValidForAsset:timeRange:validationDelegate:
public override bool IsValidForAsset
animationTool
/* property */ public override AVVideoCompositionCoreAnimationTool get_AnimationTool
customVideoCompositorClass
/* property */ public override Class get_CustomVideoCompositorClass
frameDuration
/* property */ public override CMTime get_FrameDuration
instructions
/* property */ public override string get_Instructions
renderScale
/* property */ public override Single get_RenderScale
setRenderScale:
/* property */ public override void set_RenderScale
renderSize
/* property */ public override CGSize get_RenderSize
newPixelBuffer
public override CVPixelBuffer CreatePixelBuffer
edgeWidths
/* property */ public override AVEdgeWidths get_EdgeWidths
highQualityRendering
/* property */ public override bool get_HighQualityRendering
pixelAspectRatio
/* property */ public override nfloat get_PixelAspectRatio
renderTransform
/* property */ public override CGAffineTransform get_RenderTransform
videoComposition:shouldContinueValidatingAfterFindingEmptyTimeRange:
public override bool ShouldContinueValidatingAfterFindingEmptyTimeRange
videoComposition:shouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction:
public override bool ShouldContinueValidatingAfterFindingInvalidTimeRangeInInstruction
videoComposition:shouldContinueValidatingAfterFindingInvalidTrackIDInInstruction:layerInstruction:asset:
public override bool ShouldContinueValidatingAfterFindingInvalidTrackIDInInstruction
videoComposition:shouldContinueValidatingAfterFindingInvalidValueForKey:
public override bool ShouldContinueValidatingAfterFindingInvalidValueForKey
setAnimationTool:
/* property */ public override void set_AnimationTool
setCustomVideoCompositorClass:
/* property */ public override void set_CustomVideoCompositorClass
setFrameDuration:
/* property */ public override void set_FrameDuration
setInstructions:
/* property */ public override void set_Instructions
setRenderSize:
/* property */ public override void set_RenderSize
containsTweening
/* property */ public override bool get_ContainsTweening
enablePostProcessing
/* property */ public override bool get_EnablePostProcessing
layerInstructions
/* property */ public override AVVideoCompositionLayerInstruction[] get_LayerInstructions
passthroughTrackID
/* property */ public override int get_PassthroughTrackID
requiredSourceTrackIDs
/* property */ public override NSNumber[] get_RequiredSourceTrackIDs
setEnablePostProcessing:
/* property */ public override void set_EnablePostProcessing
setLayerInstructions:
/* property */ public override void set_LayerInstructions
getCropRectangleRampForTime:startCropRectangle:endCropRectangle:timeRange:
public override bool GetCrop
getOpacityRampForTime:startOpacity:endOpacity:timeRange:
public override bool GetOpacityRamp
getTransformRampForTime:startTransform:endTransform:timeRange:
public override bool GetTransformRamp
videoCompositionLayerInstruction
public AVMutableVideoCompositionLayerInstruction Create
videoCompositionLayerInstructionWithAssetTrack:
public AVMutableVideoCompositionLayerInstruction FromAssetTrack
setCropRectangleRampFromStartCropRectangle:toEndCropRectangle:timeRange:
public override void SetCrop
setCropRectangle:atTime:
public override void SetCrop
setOpacity:atTime:
public override void SetOpacity
setOpacityRampFromStartOpacity:toEndOpacity:timeRange:
public override void SetOpacityRamp
setTransform:atTime:
public override void SetTransform
setTransformRampFromStartTransform:toEndTransform:timeRange:
public override void SetTransformRamp
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayers:inLayer:
public AVVideoCompositionCoreAnimationTool FromComposedVideoFrames
videoCompositionCoreAnimationToolWithAdditionalLayer:asTrackID:
public AVVideoCompositionCoreAnimationTool FromLayer
videoCompositionCoreAnimationToolWithPostProcessingAsVideoLayer:inLayer:
public AVVideoCompositionCoreAnimationTool FromLayer
addConnection:
public override bool AddConnection
addInputWithNoConnections:
public override void AddInputWithNoConnections
addOutputWithNoConnections:
public override void AddOutputWithNoConnections
beginConfiguration
public override void BeginConfiguration
canAddConnection:
public override bool CanAddConnection
canSetSessionPreset:
public override bool CanSetSessionPreset
commitConfiguration
public override void CommitConfiguration
removeConnection:
public override bool RemoveConnection
removeInput:
public override void RemoveInput
removeOutput:
public override void RemoveOutput
startRunning
public override void StartRunning
stopRunning
public override void StopRunning
automaticallyConfiguresApplicationAudioSession
/* property */ public override bool get_AutomaticallyConfiguresApplicationAudioSession
setAutomaticallyConfiguresApplicationAudioSession:
/* property */ public override void set_AutomaticallyConfiguresApplicationAudioSession
isInterrupted
/* property */ public override bool get_Interrupted
sessionPreset
/* property */ public override NSString get_SessionPreset
setSessionPreset:
/* property */ public override void set_SessionPreset
usesApplicationAudioSession
/* property */ public override bool get_UsesApplicationAudioSession
setUsesApplicationAudioSession:
/* property */ public override void set_UsesApplicationAudioSession
averagePowerLevel
/* property */ public override Single get_AveragePowerLevel
peakHoldLevel
/* property */ public override Single get_PeakHoldLevel
ports
/* property */ public override AVCaptureInputPort[] get_Ports
clock
/* property */ public override CMClock get_Clock
formatDescription
/* property */ public override CMFormatDescription get_FormatDescription
input
/* property */ public override NSString get_Input
connectionWithMediaType:
public override AVCaptureConnection ConnectionFromMediaType
transformedMetadataObjectForMetadataObject:connection:
public override AVMetadataObject GetTransformedMetadataObject
connections
/* property */ public override NSSet get_Connections
recommendedVideoSettingsForAssetWriterWithOutputFileType:
public override NSDictionary GetRecommendedVideoSettingsForAssetWriter
setSampleBufferDelegate:queue:
public override void SetSampleBufferDelegateQueue
alwaysDiscardsLateVideoFrames
/* property */ public override bool get_AlwaysDiscardsLateVideoFrames
setAlwaysDiscardsLateVideoFrames:
/* property */ public override void set_AlwaysDiscardsLateVideoFrames
availableVideoCodecTypes
/* property */ public override NSString[] get_AvailableVideoCodecTypes
availableVideoCVPixelFormatTypes
/* property */ public override NSNumber[] get_AvailableVideoCVPixelFormatTypes
setMinFrameDuration:
/* property */ public override void set_MinFrameDuration
sampleBufferCallbackQueue
/* property */ public override DispatchQueue get_SampleBufferCallbackQueue
sampleBufferDelegate
/* property */ public override IAVCaptureAudioDataOutputSampleBufferDelegate get_SampleBufferDelegate
setVideoSettings:
/* property */ public override void set_WeakVideoSettings
captureOutput:didDropSampleBuffer:fromConnection:
public override void DidDropSampleBuffer
captureOutput:didOutputSampleBuffer:fromConnection:
public override void DidOutputSampleBuffer
recommendedAudioSettingsForAssetWriterWithOutputFileType:
public override NSDictionary GetRecommendedAudioSettingsForAssetWriter
manualExposureSettingsWithExposureDuration:ISO:
public AVCaptureManualExposureBracketedStillImageSettings Create
exposureDuration
/* property */ public override CMTime get_ExposureDuration
ISO
/* property */ public override Single get_ISO
autoExposureSettingsWithExposureTargetBias:
public AVCaptureAutoExposureBracketedStillImageSettings Create
exposureTargetBias
/* property */ public override Single get_ExposureTargetBias
captureOutput:didFinishRecordingToOutputFileAtURL:fromConnections:error:
public override void FinishedRecording
captureOutput:didStartRecordingToOutputFileAtURL:fromConnections:
public override void DidStartRecording
captureOutput:didOutputMetadataObjects:fromConnection:
public override void DidOutputMetadataObjects
captureStillImageAsynchronouslyFromConnection:completionHandler:
public override void CaptureStillImageAsynchronously
captureStillImageBracketAsynchronouslyFromConnection:withSettingsArray:completionHandler:
public override void CaptureStillImageBracket
jpegStillImageNSDataRepresentation:
public NSData JpegStillToNSData
prepareToCaptureStillImageBracketFromConnection:withSettingsArray:completionHandler:
public override void PrepareToCaptureStillImageBracket
automaticallyEnablesStillImageStabilizationWhenAvailable
/* property */ public override bool get_AutomaticallyEnablesStillImageStabilizationWhenAvailable
setAutomaticallyEnablesStillImageStabilizationWhenAvailable:
/* property */ public override void set_AutomaticallyEnablesStillImageStabilizationWhenAvailable
availableImageDataCodecTypes
/* property */ public override string[] get_AvailableImageDataCodecTypes
availableImageDataCVPixelFormatTypes
/* property */ public override NSNumber[] get_AvailableImageDataCVPixelFormatTypes
isCapturingStillImage
/* property */ public override bool get_CapturingStillImage
isHighResolutionStillImageOutputEnabled
/* property */ public override bool get_HighResolutionStillImageOutputEnabled
setHighResolutionStillImageOutputEnabled:
/* property */ public override void set_HighResolutionStillImageOutputEnabled
isStillImageStabilizationActive
/* property */ public override bool get_IsStillImageStabilizationActive
isStillImageStabilizationSupported
/* property */ public override bool get_IsStillImageStabilizationSupported
maxBracketedCaptureStillImageCount
/* property */ public override nuint get_MaxBracketedCaptureStillImageCount
setOutputSettings:
/* property */ public override void set_OutputSettings
cancelVideoZoomRamp
public override void CancelVideoZoomRamp
defaultDeviceWithMediaType:
public AVCaptureDevice DefaultDeviceWithMediaType
devicesWithMediaType:
public AVCaptureDevice[] DevicesWithMediaType
deviceWithUniqueID:
public AVCaptureDevice DeviceWithUniqueID
authorizationStatusForMediaType:
public AVAuthorizationStatus GetAuthorizationStatus
chromaticityValuesForDeviceWhiteBalanceGains:
public override AVCaptureWhiteBalanceChromaticityValues GetChromaticityValues
deviceWhiteBalanceGainsForChromaticityValues:
public override AVCaptureWhiteBalanceGains GetDeviceWhiteBalanceGains
deviceWhiteBalanceGainsForTemperatureAndTintValues:
public override AVCaptureWhiteBalanceGains GetDeviceWhiteBalanceGains
temperatureAndTintValuesForDeviceWhiteBalanceGains:
public override AVCaptureWhiteBalanceTemperatureAndTintValues GetTemperatureAndTintValues
hasMediaType:
public override bool HasMediaType
isExposureModeSupported:
public override bool IsExposureModeSupported
isFlashModeSupported:
public override bool IsFlashModeSupported
isFocusModeSupported:
public override bool IsFocusModeSupported
isTorchModeSupported:
public override bool IsTorchModeSupported
isWhiteBalanceModeSupported:
public override bool IsWhiteBalanceModeSupported
setExposureModeCustomWithDuration:ISO:completionHandler:
public override void LockExposure
lockForConfiguration:
public override bool LockForConfiguration
rampToVideoZoomFactor:withRate:
public override void RampToVideoZoom
requestAccessForMediaType:completionHandler:
public void RequestAccessForMediaType
setExposureTargetBias:completionHandler:
public override void SetExposureTargetBias
setFocusModeLockedWithLensPosition:completionHandler:
public override void SetFocusModeLocked
setTorchModeOnWithLevel:error:
public override bool SetTorchModeLevel
setWhiteBalanceModeLockedWithDeviceWhiteBalanceGains:completionHandler:
public override void SetWhiteBalanceModeLockedWithDeviceWhiteBalanceGains
supportsAVCaptureSessionPreset:
public override bool SupportsAVCaptureSessionPreset
unlockForConfiguration
public override void UnlockForConfiguration
activeFormat
/* property */ public override AVCaptureDeviceFormat get_ActiveFormat
setActiveFormat:
/* property */ public override void set_ActiveFormat
activeVideoMaxFrameDuration
/* property */ public override CMTime get_ActiveVideoMaxFrameDuration
setActiveVideoMaxFrameDuration:
/* property */ public override void set_ActiveVideoMaxFrameDuration
activeVideoMinFrameDuration
/* property */ public override CMTime get_ActiveVideoMinFrameDuration
setActiveVideoMinFrameDuration:
/* property */ public override void set_ActiveVideoMinFrameDuration
isAdjustingExposure
/* property */ public override bool get_AdjustingExposure
isAdjustingFocus
/* property */ public override bool get_AdjustingFocus
isAdjustingWhiteBalance
/* property */ public override bool get_AdjustingWhiteBalance
autoFocusRangeRestriction
/* property */ public override AVCaptureAutoFocusRangeRestriction get_AutoFocusRangeRestriction
setAutoFocusRangeRestriction:
/* property */ public override void set_AutoFocusRangeRestriction
isAutoFocusRangeRestrictionSupported
/* property */ public override bool get_AutoFocusRangeRestrictionSupported
automaticallyAdjustsVideoHDREnabled
/* property */ public override bool get_AutomaticallyAdjustsVideoHdrEnabled
setAutomaticallyAdjustsVideoHDREnabled:
/* property */ public override void set_AutomaticallyAdjustsVideoHdrEnabled
automaticallyEnablesLowLightBoostWhenAvailable
/* property */ public override bool get_AutomaticallyEnablesLowLightBoostWhenAvailable
setAutomaticallyEnablesLowLightBoostWhenAvailable:
/* property */ public override void set_AutomaticallyEnablesLowLightBoostWhenAvailable
devices
/* property */ public AVCaptureDevice[] get_Devices
deviceWhiteBalanceGains
/* property */ public override AVCaptureWhiteBalanceGains get_DeviceWhiteBalanceGains
exposureMode
/* property */ public override AVCaptureExposureMode get_ExposureMode
setExposureMode:
/* property */ public override void set_ExposureMode
exposurePointOfInterest
/* property */ public override CGPoint get_ExposurePointOfInterest
setExposurePointOfInterest:
/* property */ public override void set_ExposurePointOfInterest
isExposurePointOfInterestSupported
/* property */ public override bool get_ExposurePointOfInterestSupported
exposureTargetOffset
/* property */ public override Single get_ExposureTargetOffset
isFlashActive
/* property */ public override bool get_FlashActive
isFlashAvailable
/* property */ public override bool get_FlashAvailable
flashMode
/* property */ public override AVCaptureFlashMode get_FlashMode
setFlashMode:
/* property */ public override void set_FlashMode
focusMode
/* property */ public override AVCaptureFocusMode get_FocusMode
setFocusMode:
/* property */ public override void set_FocusMode
focusPointOfInterest
/* property */ public override CGPoint get_FocusPointOfInterest
setFocusPointOfInterest:
/* property */ public override void set_FocusPointOfInterest
isFocusPointOfInterestSupported
/* property */ public override bool get_FocusPointOfInterestSupported
formats
/* property */ public override AVCaptureDeviceFormat[] get_Formats
grayWorldDeviceWhiteBalanceGains
/* property */ public override AVCaptureWhiteBalanceGains get_GrayWorldDeviceWhiteBalanceGains
hasFlash
/* property */ public override bool get_HasFlash
hasTorch
/* property */ public override bool get_HasTorch
lensAperture
/* property */ public override Single get_LensAperture
lensPosition
/* property */ public override Single get_LensPosition
localizedName
/* property */ public override string get_LocalizedName
isLowLightBoostEnabled
/* property */ public override bool get_LowLightBoostEnabled
isLowLightBoostSupported
/* property */ public override bool get_LowLightBoostSupported
maxExposureTargetBias
/* property */ public override Single get_MaxExposureTargetBias
maxWhiteBalanceGain
/* property */ public override Single get_MaxWhiteBalanceGain
minExposureTargetBias
/* property */ public override Single get_MinExposureTargetBias
modelID
/* property */ public override string get_ModelID
isRampingVideoZoom
/* property */ public override bool get_RampingVideoZoom
isSmoothAutoFocusEnabled
/* property */ public override bool get_SmoothAutoFocusEnabled
setSmoothAutoFocusEnabled:
/* property */ public override void set_SmoothAutoFocusEnabled
isSmoothAutoFocusSupported
/* property */ public override bool get_SmoothAutoFocusSupported
isSubjectAreaChangeMonitoringEnabled
/* property */ public override bool get_SubjectAreaChangeMonitoringEnabled
setSubjectAreaChangeMonitoringEnabled:
/* property */ public override void set_SubjectAreaChangeMonitoringEnabled
isTorchActive
/* property */ public override bool get_TorchActive
isTorchAvailable
/* property */ public override bool get_TorchAvailable
torchLevel
/* property */ public override Single get_TorchLevel
torchMode
/* property */ public override AVCaptureTorchMode get_TorchMode
setTorchMode:
/* property */ public override void set_TorchMode
uniqueID
/* property */ public override string get_UniqueID
isVideoHDREnabled
/* property */ public override bool get_VideoHdrEnabled
setVideoHDREnabled:
/* property */ public override void set_VideoHdrEnabled
videoZoomFactor
/* property */ public override nfloat get_VideoZoomFactor
setVideoZoomFactor:
/* property */ public override void set_VideoZoomFactor
whiteBalanceMode
/* property */ public override AVCaptureWhiteBalanceMode get_WhiteBalanceMode
setWhiteBalanceMode:
/* property */ public override void set_WhiteBalanceMode
isVideoStabilizationModeSupported:
public override bool IsVideoStabilizationModeSupported
autoFocusSystem
/* property */ public override AVCaptureAutoFocusSystem get_AutoFocusSystem
highResolutionStillImageDimensions
/* property */ public override CMVideoDimensions get_HighResolutionStillImageDimensions
maxExposureDuration
/* property */ public override CMTime get_MaxExposureDuration
maxISO
/* property */ public override Single get_MaxISO
minExposureDuration
/* property */ public override CMTime get_MinExposureDuration
minISO
/* property */ public override Single get_MinISO
isVideoBinned
/* property */ public override bool get_VideoBinned
videoFieldOfView
/* property */ public override Single get_VideoFieldOfView
isVideoHDRSupported
/* property */ public override bool get_videoHDRSupportedVideoHDREnabled
videoMaxZoomFactor
/* property */ public override nfloat get_VideoMaxZoomFactor
videoSupportedFrameRateRanges
/* property */ public override AVFrameRateRange[] get_VideoSupportedFrameRateRanges
videoZoomFactorUpscaleThreshold
/* property */ public override nfloat get_VideoZoomFactorUpscaleThreshold
preferredMediaCharacteristics
/* property */ public override NSString[] get_PreferredMediaCharacteristics
textStyleRulesFromPropertyList:
public AVTextStyleRule[] FromPropertyList
textStyleRuleWithTextMarkupAttributes:
AVTextStyleRule FromTextMarkupAttributes
textStyleRuleWithTextMarkupAttributes:textSelector:
AVTextStyleRule FromTextMarkupAttributes
propertyListForTextStyleRules:
public NSObject ToPropertyList
textSelector
/* property */ public override string get_TextSelector
textMarkupAttributes
/* property */ protected override NSDictionary get_WeakTextMarkupAttributes
copyFormatDescription
public override CMFormatDescription CopyFormatDescription
cancelPendingSeeks
public override void CancelPendingSeeks
playerItemWithAsset:
public AVPlayerItem FromAsset
playerItemWithAsset:automaticallyLoadedAssetKeys:
public AVPlayerItem FromAsset
playerItemWithURL:
public AVPlayerItem FromUrl
selectedMediaOptionInMediaSelectionGroup:
public override AVMediaSelectionOption SelectedMediaOption
selectMediaOption:inMediaSelectionGroup:
public override void SelectMediaOption
selectMediaOptionAutomaticallyInMediaSelectionGroup:
public override void SelectMediaOptionAutomaticallyInMediaSelectionGroup
stepByCount:
public override void StepByCount
automaticallyLoadedAssetKeys
/* property */ public override NSString[] get_AutomaticallyLoadedAssetKeys
canPlayFastForward
/* property */ public override bool get_CanPlayFastForward
canPlayFastReverse
/* property */ public override bool get_CanPlayFastReverse
canPlayReverse
/* property */ public override bool get_CanPlayReverse
canPlaySlowForward
/* property */ public override bool get_CanPlaySlowForward
canPlaySlowReverse
/* property */ public override bool get_CanPlaySlowReverse
canStepBackward
/* property */ public override bool get_CanStepBackward
canStepForward
/* property */ public override bool get_CanStepForward
currentDate
/* property */ public override NSDate get_CurrentDate
forwardPlaybackEndTime
/* property */ public override CMTime get_ForwardPlaybackEndTime
setForwardPlaybackEndTime:
/* property */ public override void set_ForwardPlaybackEndTime
loadedTimeRanges
/* property */ public override NSValue[] get_LoadedTimeRanges
isPlaybackBufferEmpty
/* property */ public override bool get_PlaybackBufferEmpty
isPlaybackBufferFull
/* property */ public override bool get_PlaybackBufferFull
isPlaybackLikelyToKeepUp
/* property */ public override bool get_PlaybackLikelyToKeepUp
preferredPeakBitRate
/* property */ public override Double get_PreferredPeakBitRate
setPreferredPeakBitRate:
/* property */ public override void set_PreferredPeakBitRate
presentationSize
/* property */ public override CGSize get_PresentationSize
reversePlaybackEndTime
/* property */ public override CMTime get_ReversePlaybackEndTime
setReversePlaybackEndTime:
/* property */ public override void set_ReversePlaybackEndTime
seekableTimeRanges
/* property */ public override NSValue[] get_SeekableTimeRanges
seekingWaitsForVideoCompositionRendering
/* property */ public override bool get_SeekingWaitsForVideoCompositionRendering
setSeekingWaitsForVideoCompositionRendering:
/* property */ public override void set_SeekingWaitsForVideoCompositionRendering
textStyleRules
/* property */ public override AVTextStyleRule[] get_TextStyleRules
setTextStyleRules:
/* property */ public override void set_TextStyleRules
timebase
/* property */ public override CMTimebase get_Timebase
itemTimeForHostTime:
public override CMTime GetItemTime
itemTimeForMachAbsoluteTime:
public override CMTime GetItemTime
suppressesPlayerRendering
/* property */ public override bool get_SuppressesPlayerRendering
setSuppressesPlayerRendering:
/* property */ public override void set_SuppressesPlayerRendering
advanceIntervalForDelegateInvocation
/* property */ public override Double get_AdvanceIntervalForDelegateInvocation
setAdvanceIntervalForDelegateInvocation:
/* property */ public override void set_AdvanceIntervalForDelegateInvocation
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
public override void DidOutputTimedMetadataGroups
outputSequenceWasFlushed:
public override void OutputSequenceWasFlushed
outputMediaDataWillChange:
public override void OutputMediaDataWillChange
legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:
public override void DidOutputAttributedStrings
textStylingResolution
/* property */ public override NSString get_TextStylingResolution
setTextStylingResolution:
/* property */ public override void set_TextStylingResolution
events
/* property */ public override MPMovieErrorLogEvent[] get_Events
extendedLogData
/* property */ public override NSData get_ExtendedLogData
extendedLogDataStringEncoding
/* property */ public override NSStringEncoding get_ExtendedLogDataStringEncoding
numberOfBytesTransferred
/* property */ public override Int64 get_BytesTransferred
downloadOverdue
/* property */ public override nint get_DownloadOverdue
numberOfDroppedVideoFrames
/* property */ public override nint get_DroppedVideoFrameCount
durationWatched
/* property */ public override Double get_DurationWatched
indicatedBitrate
/* property */ public override Double get_IndicatedBitrate
mediaRequestsWWAN
/* property */ public override nint get_MediaRequestsWWAN
numberOfMediaRequests
/* property */ public override nint get_NumberOfMediaRequests
observedBitrate
/* property */ public override Double get_ObservedBitrate
observedBitrateStandardDeviation
/* property */ public override Double get_ObservedBitrateStandardDeviation
observedMaxBitrate
/* property */ public override Double get_ObservedMaxBitrate
observedMinBitrate
/* property */ public override Double get_ObservedMinBitrate
playbackSessionID
/* property */ public override string get_PlaybackSessionID
playbackStartDate
/* property */ public override NSData get_PlaybackStartDate
playbackStartOffset
/* property */ public override Double get_PlaybackStartOffset
playbackType
/* property */ public override string get_PlaybackType
numberOfSegmentsDownloaded
/* property */ public override nint get_SegmentedDownloadedCount
segmentsDownloadedDuration
/* property */ public override Double get_SegmentsDownloadedDuration
serverAddress
/* property */ public override string get_ServerAddress
numberOfServerAddressChanges
/* property */ public override nint get_ServerAddressChangeCount
numberOfStalls
/* property */ public override nint get_StallCount
startupTime
/* property */ public override Double get_StartupTime
switchBitrate
/* property */ public override Double get_SwitchBitrate
transferDuration
/* property */ public override Double get_TransferDuration
URI
/* property */ public override string get_Uri
errorComment
/* property */ public override string get_ErrorComment
errorDomain
/* property */ public override string get_ErrorDomain
errorStatusCode
/* property */ public override nint get_ErrorStatusCode
assetTrack
/* property */ public override AVAssetTrack get_AssetTrack
currentVideoFrameRate
/* property */ public override Single get_CurrentVideoFrameRate
advanceToNextItem
public override void AdvanceToNextItem
canInsertItem:afterItem:
public override bool CanInsert
queuePlayerWithItems:
public AVQueuePlayer FromItems
insertItem:afterItem:
public override void InsertItem
removeAllItems
public override void RemoveAllItems
enqueueSampleBuffer:
public override void EnqueueSampleBuffer
flush
public void Flush
flushAndRemoveImage
public override void FlushAndRemoveImage
stopRequestingMediaData
public override void StopRequestingMediaData
controlTimebase
/* property */ public override CMTimebase get_ControlTimebase
setControlTimebase:
/* property */ public override void set_ControlTimebase
synchronizedLayerWithPlayerItem:
public AVSynchronizedLayer FromPlayerItem
playerItem
/* property */ public override AVPlayerItem get_PlayerItem
setPlayerItem:
/* property */ public override void set_PlayerItem
voiceWithLanguage:
public AVSpeechSynthesisVoice FromLanguage
speechVoices
public AVSpeechSynthesisVoice[] GetSpeechVoices
currentLanguageCode
/* property */ public string get_CurrentLanguageCode
language
/* property */ public override string get_Language
speechUtteranceWithString:
public AVSpeechUtterance FromString
pitchMultiplier
/* property */ public override Single get_PitchMultiplier
setPitchMultiplier:
/* property */ public override void set_PitchMultiplier
postUtteranceDelay
/* property */ public override Double get_PostUtteranceDelay
setPostUtteranceDelay:
/* property */ public override void set_PostUtteranceDelay
preUtteranceDelay
/* property */ public override Double get_PreUtteranceDelay
setPreUtteranceDelay:
/* property */ public override void set_PreUtteranceDelay
speechString
/* property */ public override string get_SpeechString
voice
/* property */ public override AVSpeechSynthesisVoice get_Voice
setVoice:
/* property */ public override void set_Voice
continueSpeaking
public override bool ContinueSpeaking
pauseSpeakingAtBoundary:
public override bool PauseSpeaking
speakUtterance:
public override void SpeakUtterance
stopSpeakingAtBoundary:
public override bool StopSpeaking
isSpeaking
/* property */ public override bool get_Speaking
speechSynthesizer:didCancelSpeechUtterance:
public override void DidCancelSpeechUtterance
speechSynthesizer:didContinueSpeechUtterance:
public override void DidContinueSpeechUtterance
speechSynthesizer:didFinishSpeechUtterance:
public override void DidFinishSpeechUtterance
speechSynthesizer:didPauseSpeechUtterance:
public override void DidPauseSpeechUtterance
speechSynthesizer:didStartSpeechUtterance:
public override void DidStartSpeechUtterance
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
public override void WillSpeakRangeOfSpeechString
fileURL
/* property */ public override NSUrl get_FileUrl
addOperation:
public override void AddOperation
discoverAllContactUserInfosWithCompletionHandler:
public override void DiscoverAllContactUserInfos
discoverUserInfoWithEmailAddress:completionHandler:
public override void DiscoverUserInfo
discoverUserInfoWithUserRecordID:completionHandler:
public override void DiscoverUserInfo
fetchUserRecordIDWithCompletionHandler:
public override void FetchUserRecordId
containerWithIdentifier:
public CKContainer FromIdentifier
accountStatusWithCompletionHandler:
public override void GetAccountStatus
requestApplicationPermission:completionHandler:
public override void RequestApplicationPermission
statusForApplicationPermission:completionHandler:
public override void StatusForApplicationPermission
containerIdentifier
/* property */ public override string get_ContainerIdentifier
defaultContainer
/* property */ public CKContainer get_DefaultContainer
privateCloudDatabase
/* property */ public override CKDatabase get_PrivateCloudDatabase
publicCloudDatabase
/* property */ public override CKDatabase get_PublicCloudDatabase
deleteRecordWithID:completionHandler:
public override void DeleteRecord
deleteRecordZoneWithID:completionHandler:
public override void DeleteRecordZone
deleteSubscriptionWithID:completionHandler:
public override void DeleteSubscription
fetchAllRecordZonesWithCompletionHandler:
public override void FetchAllRecordZones
fetchAllSubscriptionsWithCompletionHandler:
public override void FetchAllSubscriptions
fetchRecordWithID:completionHandler:
public override void FetchRecord
fetchRecordZoneWithID:completionHandler:
public override void FetchRecordZone
fetchSubscriptionWithID:completionHandler:
public override void FetchSubscription
performQuery:inZoneWithID:completionHandler:
public override void PerformQuery
saveRecord:completionHandler:
public override void SaveRecord
saveRecordZone:completionHandler:
public override void SaveRecordZone
saveSubscription:completionHandler:
public override void SaveSubscription
database
/* property */ public override CKDatabase get_Database
setDatabase:
/* property */ public override void set_Database
discoverAllContactsCompletionBlock
/* property */ public override Action`2 get_DiscoverAllContactsHandler
setDiscoverAllContactsCompletionBlock:
/* property */ public override void set_DiscoverAllContactsHandler
firstName
/* property */ public override string get_FirstName
lastName
/* property */ public override string get_LastName
userRecordID
/* property */ public override CKRecordID get_UserRecordId
discoverUserInfosCompletionBlock
/* property */ public override CKDiscoverUserInfosCompletionHandler get_Completed
setDiscoverUserInfosCompletionBlock:
/* property */ public override void set_Completed
emailAddresses
/* property */ public override string[] get_EmailAddresses
setEmailAddresses:
/* property */ public override void set_EmailAddresses
userRecordIDs
/* property */ public override CKRecordID[] get_UserRecordIds
setUserRecordIDs:
/* property */ public override void set_UserRecordIds
fetchNotificationChangesCompletionBlock
/* property */ public override Action`2 get_Completed
setFetchNotificationChangesCompletionBlock:
/* property */ public override void set_Completed
moreComing
/* property */ public override bool get_MoreComing
notificationChangedBlock
/* property */ public override Action`1 get_NotificationChanged
setNotificationChangedBlock:
/* property */ public override void set_NotificationChanged
previousServerChangeToken
/* property */ public override CKServerChangeToken get_PreviousServerChangeToken
setPreviousServerChangeToken:
/* property */ public override void set_PreviousServerChangeToken
resultsLimit
/* property */ public override nuint get_ResultsLimit
setResultsLimit:
/* property */ public override void set_ResultsLimit
fetchRecordChangesCompletionBlock
/* property */ public override CKFetchRecordChangesHandler get_AllChangesReported
setFetchRecordChangesCompletionBlock:
/* property */ public override void set_AllChangesReported
desiredKeys
/* property */ public override string[] get_DesiredKeys
setDesiredKeys:
/* property */ public override void set_DesiredKeys
recordChangedBlock
/* property */ public override Action`1 get_RecordChanged
setRecordChangedBlock:
/* property */ public override void set_RecordChanged
recordWithIDWasDeletedBlock
/* property */ public override Action`1 get_RecordDeleted
setRecordWithIDWasDeletedBlock:
/* property */ public override void set_RecordDeleted
recordZoneID
/* property */ public override CKRecordZoneID get_RecordZoneId
setRecordZoneID:
/* property */ public override void set_RecordZoneId
fetchCurrentUserRecordOperation
public CKFetchRecordsOperation FetchCurrentUserRecordOperation
fetchRecordsCompletionBlock
/* property */ public override CKFetchRecordsCompletedHandler get_Completed
setFetchRecordsCompletionBlock:
/* property */ public override void set_Completed
perRecordCompletionBlock
/* property */ public override Action`2 get_PerRecordCompletion
setPerRecordCompletionBlock:
/* property */ public override void set_PerRecordCompletion
perRecordProgressBlock
/* property */ public override Action`2 get_PerRecordProgress
setPerRecordProgressBlock:
/* property */ public override void set_PerRecordProgress
recordIDs
/* property */ public override CKRecordID[] get_RecordIds
setRecordIDs:
/* property */ public override void set_RecordIds
fetchAllRecordZonesOperation
public CKFetchRecordZonesOperation FetchAllRecordZonesOperation
fetchRecordZonesCompletionBlock
/* property */ public override CKRecordZoneCompleteHandler get_Completed
setFetchRecordZonesCompletionBlock:
/* property */ public override void set_Completed
recordZoneIDs
/* property */ public override CKRecordZoneID[] get_RecordZoneIds
setRecordZoneIDs:
/* property */ public override void set_RecordZoneIds
fetchAllSubscriptionsOperation
public CKFetchSubscriptionsOperation FetchAllSubscriptionsOperation
fetchSubscriptionCompletionBlock
/* property */ public override CKFetchSubscriptionsCompleteHandler get_Completed
setFetchSubscriptionCompletionBlock:
/* property */ public override void set_Completed
subscriptionIDs
/* property */ public override string[] get_SubscriptionIds
setSubscriptionIDs:
/* property */ public override void set_SubscriptionIds
relativeLocation
/* property */ public override CLLocation get_RelativeLocation
markNotificationsReadCompletionBlock
/* property */ public override CKMarkNotificationsReadHandler get_Completed
setMarkNotificationsReadCompletionBlock:
/* property */ public override void set_Completed
notificationIDs
/* property */ public override CKNotificationID[] get_NotificationIds
setNotificationIDs:
/* property */ public override void set_NotificationIds
badgeValue
/* property */ public override string get_BadgeValue
setBadgeValue:
/* property */ public override void set_BadgeValue
modifyBadgeCompletionBlock
/* property */ public override Action`1 get_Completed
setModifyBadgeCompletionBlock:
/* property */ public override void set_Completed
atomic
/* property */ public override bool get_Atomic
setAtomic:
/* property */ public override void set_Atomic
clientChangeTokenData
/* property */ public override NSData get_ClientChangeTokenData
setClientChangeTokenData:
/* property */ public override void set_ClientChangeTokenData
modifyRecordsCompletionBlock
/* property */ public override CKModifyRecordsOperationHandler get_Completed
setModifyRecordsCompletionBlock:
/* property */ public override void set_Completed
recordIDsToDelete
/* property */ public override CKRecordID[] get_RecordIdsToDelete
setRecordIDsToDelete:
/* property */ public override void set_RecordIdsToDelete
recordsToSave
/* property */ public override CKRecord[] get_RecordsToSave
setRecordsToSave:
/* property */ public override void set_RecordsToSave
savePolicy
/* property */ public override CKRecordSavePolicy get_SavePolicy
setSavePolicy:
/* property */ public override void set_SavePolicy
modifyRecordZonesCompletionBlock
/* property */ public override CKModifyRecordZonesHandler get_Completed
setModifyRecordZonesCompletionBlock:
/* property */ public override void set_Completed
recordZoneIDsToDelete
/* property */ public override CKRecordZoneID[] get_RecordZoneIdsToDelete
setRecordZoneIDsToDelete:
/* property */ public override void set_RecordZoneIdsToDelete
recordZonesToSave
/* property */ public override CKRecordZone[] get_RecordZonesToSave
setRecordZonesToSave:
/* property */ public override void set_RecordZonesToSave
modifySubscriptionsCompletionBlock
/* property */ public override CKModifySubscriptionsHandler get_Completed
setModifySubscriptionsCompletionBlock:
/* property */ public override void set_Completed
subscriptionIDsToDelete
/* property */ public override string[] get_SubscriptionIdsToDelete
setSubscriptionIDsToDelete:
/* property */ public override void set_SubscriptionIdsToDelete
subscriptionsToSave
/* property */ public override CKSubscription[] get_SubscriptionsToSave
setSubscriptionsToSave:
/* property */ public override void set_SubscriptionsToSave
notificationFromRemoteNotificationDictionary:
public CKNotification FromRemoteNotificationDictionary
alertActionLocalizationKey
/* property */ public override string get_AlertActionLocalizationKey
alertBody
/* property */ public override string get_AlertBody
alertLaunchImage
/* property */ public override string get_AlertLaunchImage
alertLocalizationArgs
/* property */ public override string[] get_AlertLocalizationArgs
alertLocalizationKey
/* property */ public override string get_AlertLocalizationKey
badge
/* property */ public override NSNumber get_Badge
isPruned
/* property */ public override bool get_IsPruned
notificationID
/* property */ public override CKNotificationID get_NotificationId
notificationType
/* property */ public override CKNotificationType get_NotificationType
soundName
/* property */ public override string get_SoundName
isPublicDatabase
/* property */ public override bool get_IsPublicDatabase
queryNotificationReason
/* property */ public override CKQueryNotificationReason get_QueryNotificationReason
recordFields
/* property */ public override NSDictionary get_RecordFields
container
/* property */ public override CKContainer get_Container
setContainer:
/* property */ public override void set_Container
usesBackgroundSession
/* property */ public override bool get_UsesBackgroundSession
setUsesBackgroundSession:
/* property */ public override void set_UsesBackgroundSession
predicate
/* property */ public override NSPredicate get_Predicate
setSortDescriptors:
/* property */ public override void set_SortDescriptors
queryCompletionBlock
/* property */ public override Action`2 get_Completed
setQueryCompletionBlock:
/* property */ public override void set_Completed
cursor
/* property */ public override CKQueryCursor get_Cursor
setCursor:
/* property */ public override void set_Cursor
recordFetchedBlock
/* property */ public override Action`1 get_RecordFetched
setRecordFetchedBlock:
/* property */ public override void set_RecordFetched
zoneID
/* property */ public override CKRecordZoneID get_ZoneID
setZoneID:
/* property */ public override void set_ZoneID
recordName
/* property */ public override string get_RecordName
defaultRecordZone
public CKRecordZone DefaultRecordZone
capabilities
/* property */ public override CKRecordZoneCapabilities get_Capabilities
ownerName
/* property */ public override string get_OwnerName
zoneName
/* property */ public override string get_ZoneName
referenceAction
/* property */ public override CKReferenceAction get_ReferenceAction
notificationInfo
/* property */ public override CKNotificationInfo get_NotificationInfo
setNotificationInfo:
/* property */ public override void set_NotificationInfo
subscriptionID
/* property */ public override string get_SubscriptionId
subscriptionOptions
/* property */ public override CKSubscriptionOptions get_SubscriptionOptions
subscriptionType
/* property */ public override CKSubscriptionType get_SubscriptionType
setAlertActionLocalizationKey:
/* property */ public override void set_AlertActionLocalizationKey
setAlertBody:
/* property */ public override void set_AlertBody
setAlertLaunchImage:
/* property */ public override void set_AlertLaunchImage
setAlertLocalizationArgs:
/* property */ public override void set_AlertLocalizationArgs
setAlertLocalizationKey:
/* property */ public override void set_AlertLocalizationKey
shouldBadge
/* property */ public override bool get_ShouldBadge
setShouldBadge:
/* property */ public override void set_ShouldBadge
shouldSendContentAvailable
/* property */ public override bool get_ShouldSendContentAvailable
setShouldSendContentAvailable:
/* property */ public override void set_ShouldSendContentAvailable
setSoundName:
/* property */ public override void set_SoundName
present
public override void Present
presentAtTime:
public override void Present
newDrawable
public override ICAMetalDrawable CreateDrawable
nextDrawable
public override ICAMetalDrawable NextDrawable
setDevice:
/* property */ public override void set_Device
drawableSize
/* property */ public override CGSize get_DrawableSize
setDrawableSize:
/* property */ public override void set_DrawableSize
framebufferOnly
/* property */ public override bool get_FramebufferOnly
setFramebufferOnly:
/* property */ public override void set_FramebufferOnly
pixelFormat
/* property */ public override MTLPixelFormat get_PixelFormat
setPixelFormat:
/* property */ public override void set_PixelFormat
presentsWithTransaction
/* property */ public override bool get_PresentsWithTransaction
setPresentsWithTransaction:
/* property */ public override void set_PresentsWithTransaction
fadeDuration
/* property */ public Double get_FadeDuration
levelsOfDetailBias
/* property */ public override nint get_LevelsOfDetailBias
setLevelsOfDetailBias:
/* property */ public override void set_LevelsOfDetailBias
tileSize
/* property */ public override CGSize get_TileSize
setTileSize:
/* property */ public override void set_TileSize
instanceAlphaOffset
/* property */ public override Single get_InstanceAlphaOffset
setInstanceAlphaOffset:
/* property */ public override void set_InstanceAlphaOffset
instanceBlueOffset
/* property */ public override Single get_InstanceBlueOffset
setInstanceBlueOffset:
/* property */ public override void set_InstanceBlueOffset
instanceColor
/* property */ public override CGColor get_InstanceColor
setInstanceColor:
/* property */ public override void set_InstanceColor
instanceCount
/* property */ public override nint get_InstanceCount
setInstanceCount:
/* property */ public override void set_InstanceCount
instanceDelay
/* property */ public override Double get_InstanceDelay
setInstanceDelay:
/* property */ public override void set_InstanceDelay
instanceGreenOffset
/* property */ public override Single get_InstanceGreenOffset
setInstanceGreenOffset:
/* property */ public override void set_InstanceGreenOffset
instanceRedOffset
/* property */ public override Single get_InstanceRedOffset
setInstanceRedOffset:
/* property */ public override void set_InstanceRedOffset
instanceTransform
/* property */ public override CATransform3D get_InstanceTransform
setInstanceTransform:
/* property */ public override void set_InstanceTransform
preservesDepth
/* property */ public override bool get_PreservesDepth
setPreservesDepth:
/* property */ public override void set_PreservesDepth
scrollToPoint:
public override void ScrollToPoint
scrollToRect:
public override void ScrollToRect
scrollMode
/* property */ public override NSString get_ScrollMode
setScrollMode:
/* property */ public override void set_ScrollMode
fillColor
/* property */ public override UIColor get_FillColor
setFillColor:
/* property */ public override void set_FillColor
fillRule
/* property */ public override NSString get_FillRule
setFillRule:
/* property */ public override void set_FillRule
lineCap
/* property */ public override CGLineCap get_LineCap
setLineCap:
/* property */ public override void set_LineCap
lineDashPattern
/* property */ public override NSNumber[] get_LineDashPattern
setLineDashPattern:
/* property */ public override void set_LineDashPattern
lineDashPhase
/* property */ public override nfloat get_LineDashPhase
setLineDashPhase:
/* property */ public override void set_LineDashPhase
lineJoin
/* property */ public override CGLineJoin get_LineJoin
setLineJoin:
/* property */ public override void set_LineJoin
strokeColor
/* property */ public override UIColor get_StrokeColor
setStrokeColor:
/* property */ public override void set_StrokeColor
strokeEnd
/* property */ public override nfloat get_StrokeEnd
setStrokeEnd:
/* property */ public override void set_StrokeEnd
strokeStart
/* property */ public override nfloat get_StrokeStart
setStrokeStart:
/* property */ public override void set_StrokeStart
drawableProperties
/* property */ public override NSDictionary get_DrawableProperties
setDrawableProperties:
/* property */ public override void set_DrawableProperties
animationDidStart:
public override void AnimationStarted
animationDidStop:finished:
public override void AnimationStopped
isAdditive
/* property */ public override bool get_Additive
setAdditive:
/* property */ public override void set_Additive
isCumulative
/* property */ public override bool get_Cumulative
setCumulative:
/* property */ public override void set_Cumulative
keyPath
/* property */ public override string get_KeyPath
setKeyPath:
/* property */ public override void set_KeyPath
valueFunction
/* property */ public override CAValueFunction get_ValueFunction
setValueFunction:
/* property */ public override void set_ValueFunction
endProgress
/* property */ public override Single get_EndProgress
setEndProgress:
/* property */ public override void set_EndProgress
filter
/* property */ public override CIFilter get_Filter
setFilter:
/* property */ public override void set_Filter
startProgress
/* property */ public override Single get_StartProgress
setStartProgress:
/* property */ public override void set_StartProgress
setSubtype:
/* property */ public override void set_Subtype
begin
public void Begin
commit
public override void Commit
lock
public void Lock
unlock
public void Unlock
animationDuration
/* property */ public override Double get_AnimationDuration
animationTimingFunction
/* property */ public CAMediaTimingFunction get_AnimationTimingFunction
setAnimationTimingFunction:
/* property */ public void set_AnimationTimingFunction
completionBlock
/* property */ public Action get_CompletionBlock
setCompletionBlock:
public void SetCompletionBlock
disableActions
/* property */ public bool get_DisableActions
setDisableActions:
/* property */ public void set_DisableActions
animations
/* property */ public override CAAnimation[] get_Animations
setAnimations:
/* property */ public override void set_Animations
emitterCell
public CAEmitterCell EmitterCell
xAcceleration
/* property */ public override nfloat get_XAcceleration
setXAcceleration:
/* property */ public override void set_XAcceleration
yAcceleration
/* property */ public override nfloat get_YAcceleration
setYAcceleration:
/* property */ public override void set_YAcceleration
zAcceleration
/* property */ public override nfloat get_AccelerationZ
setZAcceleration:
/* property */ public override void set_AccelerationZ
alphaRange
/* property */ public override Single get_AlphaRange
setAlphaRange:
/* property */ public override void set_AlphaRange
alphaSpeed
/* property */ public override Single get_AlphaSpeed
setAlphaSpeed:
/* property */ public override void set_AlphaSpeed
blueRange
/* property */ public override Single get_BlueRange
setBlueRange:
/* property */ public override void set_BlueRange
blueSpeed
/* property */ public override Single get_BlueSpeed
setBlueSpeed:
/* property */ public override void set_BlueSpeed
emitterCells
/* property */ public override CAEmitterCell[] get_Cells
setEmitterCells:
/* property */ public override void set_Cells
emissionLatitude
/* property */ public override nfloat get_EmissionLatitude
setEmissionLatitude:
/* property */ public override void set_EmissionLatitude
emissionLongitude
/* property */ public override nfloat get_EmissionLongitude
setEmissionLongitude:
/* property */ public override void set_EmissionLongitude
emissionRange
/* property */ public override nfloat get_EmissionRange
setEmissionRange:
/* property */ public override void set_EmissionRange
greenRange
/* property */ public override Single get_GreenRange
setGreenRange:
/* property */ public override void set_GreenRange
greenSpeed
/* property */ public override Single get_GreenSpeed
setGreenSpeed:
/* property */ public override void set_GreenSpeed
lifetime
/* property */ public override Single get_LifeTime
setLifetime:
/* property */ public override void set_LifeTime
lifetimeRange
/* property */ public override Single get_LifetimeRange
setLifetimeRange:
/* property */ public override void set_LifetimeRange
redRange
/* property */ public override Single get_RedRange
setRedRange:
/* property */ public override void set_RedRange
redSpeed
/* property */ public override Single get_RedSpeed
setRedSpeed:
/* property */ public override void set_RedSpeed
scaleRange
/* property */ public override nfloat get_ScaleRange
setScaleRange:
/* property */ public override void set_ScaleRange
scaleSpeed
/* property */ public override nfloat get_ScaleSpeed
setScaleSpeed:
/* property */ public override void set_ScaleSpeed
spin
/* property */ public override Single get_Spin
setSpin:
/* property */ public override void set_Spin
spinRange
/* property */ public override nfloat get_SpinRange
setSpinRange:
/* property */ public override void set_SpinRange
setVelocity:
/* property */ public override void set_Velocity
velocityRange
/* property */ public override nfloat get_VelocityRange
setVelocityRange:
/* property */ public override void set_VelocityRange
emitterDepth
/* property */ public override nfloat get_Depth
setEmitterDepth:
/* property */ public override void set_Depth
emitterMode
/* property */ public override string get_Mode
setEmitterMode:
/* property */ public override void set_Mode
emitterPosition
/* property */ public override CGPoint get_Position
setEmitterPosition:
/* property */ public override void set_Position
renderMode
/* property */ public override string get_RenderMode
setRenderMode:
/* property */ public override void set_RenderMode
seed
/* property */ public override int get_Seed
setSeed:
/* property */ public override void set_Seed
emitterSize
/* property */ public override CGSize get_Size
setEmitterSize:
/* property */ public override void set_Size
emitterZPosition
/* property */ public override nfloat get_ZPosition
setEmitterZPosition:
/* property */ public override void set_ZPosition
behaviorWithType:
public CAEmitterBehavior Create
behaviorTypes
/* property */ public NSString[] get_BehaviorTypes
contentWidth
public override nfloat ContentWidth
setOutputAudioUnit:
public override void SetOutputAudioUnit
isShowingAppNames
/* property */ public override bool get_ShowingAppNames
setShowingAppNames:
/* property */ public override void set_ShowingAppNames
currentTimeLabelFont
/* property */ public override UIFont get_CurrentTimeLabelFont
setCurrentTimeLabelFont:
/* property */ public override void set_CurrentTimeLabelFont
labelColor
/* property */ public override UIColor get_LabelColor
setLabelColor:
/* property */ public override void set_LabelColor
pauseButtonColor
/* property */ public override UIColor get_PauseButtonColor
setPauseButtonColor:
/* property */ public override void set_PauseButtonColor
playButtonColor
/* property */ public override UIColor get_PlayButtonColor
setPlayButtonColor:
/* property */ public override void set_PlayButtonColor
recordButtonColor
/* property */ public override UIColor get_RecordButtonColor
setRecordButtonColor:
/* property */ public override void set_RecordButtonColor
rewindButtonColor
/* property */ public override UIColor get_RewindButtonColor
setRewindButtonColor:
/* property */ public override void set_RewindButtonColor
centralManagerDidUpdateState:
public override void UpdatedState
centralManager:didConnectPeripheral:
public override void ConnectedPeripheral
centralManager:didDisconnectPeripheral:error:
public override void DisconnectedPeripheral
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
public override void DiscoveredPeripheral
centralManager:didFailToConnectPeripheral:error:
public override void FailedToConnectPeripheral
centralManager:didRetrieveConnectedPeripherals:
public override void RetrievedConnectedPeripherals
centralManager:didRetrievePeripherals:
public override void RetrievedPeripherals
centralManager:willRestoreState:
public override void WillRestoreState
descriptors
/* property */ public override CBDescriptor[] get_Descriptors
isBroadcasted
/* property */ public override bool get_IsBroadcasted
isNotifying
/* property */ public override bool get_IsNotifying
setDescriptors:
/* property */ public override void set_Descriptors
permissions
/* property */ public override CBAttributePermissions get_Permissions
setPermissions:
/* property */ public override void set_Permissions
setProperties:
/* property */ public override void set_Properties
subscribedCentrals
/* property */ public override CBCentral[] get_SubscribedCentrals
setUUID:
/* property */ public override void set_UUID
characteristic
/* property */ public override HMCharacteristic get_Characteristic
peripheral:didDiscoverCharacteristicsForService:error:
public override void DiscoveredCharacteristic
peripheral:didDiscoverDescriptorsForCharacteristic:error:
public override void DiscoveredDescriptor
peripheral:didDiscoverIncludedServicesForService:error:
public override void DiscoveredIncludedService
peripheral:didDiscoverServices:
public override void DiscoveredService
peripheralDidInvalidateServices:
public override void InvalidatedService
peripheral:didModifyServices:
public override void ModifiedServices
peripheral:didReadRSSI:error:
public override void RssiRead
peripheralDidUpdateRSSI:error:
public override void RssiUpdated
peripheral:didUpdateValueForCharacteristic:error:
public override void UpdatedCharacterteristicValue
peripheralDidUpdateName:
public override void UpdatedName
peripheral:didUpdateNotificationStateForCharacteristic:error:
public override void UpdatedNotificationState
peripheral:didUpdateValueForDescriptor:error:
public override void UpdatedValue
peripheral:didWriteValueForCharacteristic:error:
public override void WroteCharacteristicValue
peripheral:didWriteValueForDescriptor:error:
public override void WroteDescriptorValue
includedServices
/* property */ public override CBService[] get_IncludedServices
peripheral
/* property */ public override CBPeripheral get_Peripheral
setCharacteristics:
/* property */ public override void set_Characteristics
setIncludedServices:
/* property */ public override void set_IncludedServices
setIsPrimary:
/* property */ public override void set_Primary
central
/* property */ public override CBCentral get_Central
offset
/* property */ public override nuint get_Offset
maximumUpdateValueLength
/* property */ public override nuint get_MaximumUpdateValueLength
addService:
public override void AddService
removeAllServices
public override void RemoveAllServices
removeService:
public override void RemoveService
respondToRequest:withResult:
public override void RespondToRequest
setDesiredConnectionLatency:forCentral:
public override void SetDesiredConnectionLatency
startAdvertising:
public override void StartAdvertising
stopAdvertising
public override void StopAdvertising
updateValue:forCharacteristic:onSubscribedCentrals:
public override bool UpdateValue
isAdvertising
/* property */ public override bool get_Advertising
peripheralManagerDidUpdateState:
public override void StateUpdated
peripheralManagerDidStartAdvertising:error:
public override void AdvertisingStarted
peripheralManager:central:didSubscribeToCharacteristic:
public override void CharacteristicSubscribed
peripheralManager:central:didUnsubscribeFromCharacteristic:
public override void CharacteristicUnsubscribed
peripheralManager:didReceiveReadRequest:
public override void ReadRequestReceived
peripheralManagerIsReadyToUpdateSubscribers:
public override void ReadyToUpdateSubscribers
peripheralManager:didAddService:error:
public override void ServiceAdded
peripheralManager:willRestoreState:
public override void WillRestoreState
peripheralManager:didReceiveWriteRequests:
public override void WriteRequestsReceived
addCacheNodes:
public override void AddCacheNodes
cacheNodeForObjectID:
public override NSAtomicStoreCacheNode CacheNodeForObjectID
load:
public override bool Load
newCacheNodeForManagedObject:
public override NSAtomicStoreCacheNode NewCacheNodeForManagedObject
newReferenceObjectForManagedObject:
public override NSAtomicStore NewReferenceObjectForManagedObject
objectIDForEntity:referenceObject:
public override NSManagedObjectID ObjectIDForEntity
referenceObjectForObjectID:
public override NSObject ReferenceObjectForObject
save:
public override bool Save
updateCacheNode:fromManagedObject:
public override void UpdateCacheNode
willRemoveCacheNodes:
public override void WillRemoveCacheNodes
cacheNodes
/* property */ public override NSSet get_CacheNodes
objectID
/* property */ public override NSManagedObjectID get_ObjectID
propertyCache
/* property */ public override NSDictionary get_PropertyCache
setPropertyCache:
/* property */ public override void set_PropertyCache
entityForName:inManagedObjectContext:
public NSEntityDescription EntityForName
insertNewObjectForEntityForName:inManagedObjectContext:
public NSObject InsertNewObjectForEntityForName
isKindOfEntity:
public override bool IsKindOfEntity
relationshipsWithDestinationEntity:
public override NSRelationshipDescription[] RelationshipsWithDestinationEntity
isAbstract
/* property */ public override bool get_Abstract
setAbstract:
/* property */ public override void set_Abstract
attributesByName
/* property */ public override NSDictionary get_AttributesByName
compoundIndexes
/* property */ public override NSPropertyDescription[] get_CompoundIndexes
setCompoundIndexes:
/* property */ public override void set_CompoundIndexes
managedObjectClassName
/* property */ public override string get_ManagedObjectClassName
setManagedObjectClassName:
/* property */ public override void set_ManagedObjectClassName
managedObjectModel
/* property */ public override NSManagedObjectModel get_ManagedObjectModel
propertiesByName
/* property */ public override NSDictionary get_PropertiesByName
relationshipsByName
/* property */ public override NSDictionary get_RelationshipsByName
subentities
/* property */ public override NSEntityDescription[] get_Subentities
setSubentities:
/* property */ public override void set_Subentities
subentitiesByName
/* property */ public override NSDictionary get_SubentitiesByName
superentity
/* property */ public override NSEntityDescription get_Superentity
setUserInfo:
/* property */ public override void set_UserInfo
versionHashModifier
/* property */ public override string get_VersionHashModifier
setVersionHashModifier:
/* property */ public override void set_VersionHashModifier
attributeMappings
/* property */ public override NSPropertyMapping[] get_AttributeMappings
setAttributeMappings:
/* property */ public override void set_AttributeMappings
destinationEntityName
/* property */ public override string get_DestinationEntityName
setDestinationEntityName:
/* property */ public override void set_DestinationEntityName
destinationEntityVersionHash
/* property */ public override NSData get_DestinationEntityVersionHash
setDestinationEntityVersionHash:
/* property */ public override void set_DestinationEntityVersionHash
entityMigrationPolicyClassName
/* property */ public override string get_EntityMigrationPolicyClassName
setEntityMigrationPolicyClassName:
/* property */ public override void set_EntityMigrationPolicyClassName
mappingType
/* property */ public override NSEntityMappingType get_MappingType
setMappingType:
/* property */ public override void set_MappingType
relationshipMappings
/* property */ public override NSPropertyMapping[] get_RelationshipMappings
setRelationshipMappings:
/* property */ public override void set_RelationshipMappings
sourceEntityName
/* property */ public override string get_SourceEntityName
setSourceEntityName:
/* property */ public override void set_SourceEntityName
sourceEntityVersionHash
/* property */ public override NSData get_SourceEntityVersionHash
setSourceEntityVersionHash:
/* property */ public override void set_SourceEntityVersionHash
sourceExpression
/* property */ public override NSExpression get_SourceExpression
setSourceExpression:
/* property */ public override void set_SourceExpression
beginEntityMapping:manager:error:
public override bool BeginEntityMapping
createDestinationInstancesForSourceInstance:entityMapping:manager:error:
public override bool CreateDestinationInstancesForSourceInstance
createRelationshipsForDestinationInstance:entityMapping:manager:error:
public override bool CreateRelationshipsForDestinationInstance
endEntityMapping:manager:error:
public override bool EndEntityMapping
endInstanceCreationForEntityMapping:manager:error:
public override bool EndInstanceCreationForEntityMapping
endRelationshipCreationForEntityMapping:manager:error:
public override bool EndRelationshipCreationForEntityMapping
performCustomValidationForEntityMapping:manager:error:
public override bool PerformCustomValidationForEntityMapping
fetchRequest
/* property */ public override NSFetchRequest get_FetchRequest
setFetchRequest:
/* property */ public override void set_FetchRequest
fetchRequestWithEntityName:
public NSFetchRequest FromEntityName
affectedStores
/* property */ public override NSPersistentStore[] get_AffectedStores
setAffectedStores:
/* property */ public override void set_AffectedStores
entity
/* property */ public override NSEntityDescription get_Entity
setEntity:
/* property */ public override void set_Entity
entityName
/* property */ public override string get_EntityName
fetchBatchSize
/* property */ public override nint get_FetchBatchSize
setFetchBatchSize:
/* property */ public override void set_FetchBatchSize
fetchLimit
/* property */ public override nuint get_FetchLimit
setFetchLimit:
/* property */ public override void set_FetchLimit
fetchOffset
/* property */ public override nuint get_FetchOffset
setFetchOffset:
/* property */ public override void set_FetchOffset
havingPredicate
/* property */ public override NSPredicate get_HavingPredicate
setHavingPredicate:
/* property */ public override void set_HavingPredicate
includesPendingChanges
/* property */ public override bool get_IncludesPendingChanges
setIncludesPendingChanges:
/* property */ public override void set_IncludesPendingChanges
includesPropertyValues
/* property */ public override bool get_IncludesPropertyValues
setIncludesPropertyValues:
/* property */ public override void set_IncludesPropertyValues
includesSubentities
/* property */ public override bool get_IncludesSubentities
setIncludesSubentities:
/* property */ public override void set_IncludesSubentities
setPredicate:
/* property */ public override void set_Predicate
propertiesToFetch
/* property */ public override NSPropertyDescription[] get_PropertiesToFetch
setPropertiesToFetch:
/* property */ public override void set_PropertiesToFetch
propertiesToGroupBy
/* property */ public override NSPropertyDescription[] get_PropertiesToGroupBy
setPropertiesToGroupBy:
/* property */ public override void set_PropertiesToGroupBy
relationshipKeyPathsForPrefetching
/* property */ public override string[] get_RelationshipKeyPathsForPrefetching
setRelationshipKeyPathsForPrefetching:
/* property */ public override void set_RelationshipKeyPathsForPrefetching
resultType
/* property */ public override NSTextCheckingType get_ResultType
setResultType:
/* property */ public override void set_ResultType
returnsDistinctResults
/* property */ public override bool get_ReturnsDistinctResults
setReturnsDistinctResults:
/* property */ public override void set_ReturnsDistinctResults
returnsObjectsAsFaults
/* property */ public override bool get_ReturnsObjectsAsFaults
setReturnsObjectsAsFaults:
/* property */ public override void set_ReturnsObjectsAsFaults
shouldRefreshRefetchedObjects
/* property */ public override bool get_ShouldRefreshRefetchedObjects
setShouldRefreshRefetchedObjects:
/* property */ public override void set_ShouldRefreshRefetchedObjects
deleteCacheWithName:
public void DeleteCache
indexPathForObject:
public override NSIndexPath FromObject
objectAtIndexPath:
public override NSObject ObjectAt
performFetch:
public override bool PerformFetch
sectionForSectionIndexTitle:atIndex:
public override nint SectionFor
sectionIndexTitleForSectionName:
public override string SectionIndexTitles
cacheName
/* property */ public override string get_CacheName
fetchedObjects
/* property */ public override NSObject[] get_FetchedObjects
managedObjectContext
/* property */ public override NSManagedObjectContext get_ManagedObjectContext
sectionNameKeyPath
/* property */ public override string get_SectionNameKeyPath
sections
/* property */ public override INSFetchedResultsSectionInfo[] get_Sections
controllerDidChangeContent:
public override void DidChangeContent
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
public override void DidChangeObject
controller:didChangeSection:atIndex:forChangeType:
public override void DidChangeSection
controller:sectionIndexTitleForSectionName:
public override string SectionFor
controllerWillChangeContent:
public override void WillChangeContent
numberOfObjects
/* property */ public override nint get_Count
objects
/* property */ public override NSSet get_Objects
indexTitle
/* property */ public override string get_IndexTitle
executeRequest:withContext:error:
public override NSObject ExecuteRequestwithContexterror
identifierForNewStoreAtURL:
public NSObject IdentifierForNewStoreAtURL
loadMetadata:
public override bool LoadMetadata
managedObjectContextDidRegisterObjectsWithIDs:
public override void ManagedObjectContextDidRegisterObjectsWithIds
managedObjectContextDidUnregisterObjectsWithIDs:
public override void ManagedObjectContextDidUnregisterObjectsWithIds
newObjectIDForEntity:referenceObject:
public override NSManagedObjectID NewObjectIdFor
newValueForRelationship:forObjectWithID:withContext:error:
public override NSObject NewValue
newValuesForObjectWithID:withContext:error:
public override NSIncrementalStoreNode NewValues
obtainPermanentIDsForObjects:error:
public override bool ObtainPermanentIDsForObjects
updateWithValues:version:
public override void Update
valueForPropertyDescription:
public override NSObject ValueForPropertyDescription
awakeFromFetch
public override void AwakeFromFetch
awakeFromInsert
public override void AwakeFromInsert
committedValuesForKeys:
public override NSDictionary CommittedValuesForKeys
didAccessValueForKey:
public override void DidAccessValueForKey
didSave
public override void DidSave
didTurnIntoFault
public override void DidTurnIntoFault
hasFaultForRelationshipNamed:
public override bool HasFaultForRelationshipNamed
prepareForDeletion
public override void PrepareForDeletion
primitiveValueForKey:
public override IntPtr PrimitiveValueForKey
setPrimitiveValue:forKey:
public override void SetPrimitiveValue
validateForDelete:
public override bool ValidateForDelete
validateForInsert:
public override bool ValidateForInsert
validateForUpdate:
public override bool ValidateForUpdate
validateValue:forKey:error:
public override bool ValidateValue
willAccessValueForKey:
public override void WillAccessValueForKey
willSave
public override void WillSave
willTurnIntoFault
public override void WillTurnIntoFault
changedValues
/* property */ public override NSDictionary get_ChangedValues
changedValuesForCurrentEvent
/* property */ public override NSDictionary get_ChangedValuesForCurrentEvent
hasChanges
/* property */ public override bool get_HasChanges
isDeleted
/* property */ public override bool get_IsDeleted
isFault
/* property */ public override bool get_IsFault
isInserted
/* property */ public override bool get_IsInserted
isUpdated
/* property */ public override bool get_IsUpdated
observationInfo
/* property */ public override IntPtr get_ObservationInfo
setObservationInfo:
/* property */ public override void set_ObservationInfo
assignObject:toPersistentStore:
public override void AssignObject
countForFetchRequest:error:
public override nuint CountForFetchRequest
deleteObject:
public override void DeleteObject
detectConflictsForObject:
public override void DetectConflictsForObject
executeFetchRequest:error:
public override NSObject[] ExecuteFetchRequest
executeRequest:error:
public override NSPersistentStoreResult ExecuteRequest
existingObjectWithID:error:
public override NSManagedObject GetExistingObject
insertObject:
public override void InsertObject
mergeChangesFromContextDidSaveNotification:
public override void MergeChangesFromContextDidSaveNotification
objectRegisteredForID:
public override NSManagedObject ObjectRegisteredForID
objectWithID:
public override NSManagedObject ObjectWithID
performBlock:
public override void Perform
performBlockAndWait:
public override void PerformAndWait
processPendingChanges
public override void ProcessPendingChanges
refreshObject:mergeChanges:
public override void RefreshObject
rollback
public override void Rollback
concurrencyType
/* property */ public override NSManagedObjectContextConcurrencyType get_ConcurrencyType
deletedObjects
/* property */ public override NSSet get_DeletedObjects
insertedObjects
/* property */ public override PHObject[] get_InsertedObjects
mergePolicy
/* property */ public override IntPtr get_MergePolicy
setMergePolicy:
/* property */ public override void set_MergePolicy
parentContext
/* property */ public override NSManagedObjectContext get_ParentContext
setParentContext:
/* property */ public override void set_ParentContext
persistentStoreCoordinator
/* property */ public override NSPersistentStoreCoordinator get_PersistentStoreCoordinator
setPersistentStoreCoordinator:
/* property */ public override void set_PersistentStoreCoordinator
propagatesDeletesAtEndOfEvent
/* property */ public override bool get_PropagatesDeletesAtEndOfEvent
setPropagatesDeletesAtEndOfEvent:
/* property */ public override void set_PropagatesDeletesAtEndOfEvent
registeredObjects
/* property */ public override NSSet get_RegisteredObjects
retainsRegisteredObjects
/* property */ public override bool get_RetainsRegisteredObjects
setRetainsRegisteredObjects:
/* property */ public override void set_RetainsRegisteredObjects
stalenessInterval
/* property */ public override Double get_StalenessInterval
setStalenessInterval:
/* property */ public override void set_StalenessInterval
tryLock
public override bool TryLock
setUndoManager:
/* property */ public override void set_UndoManager
updatedObjects
/* property */ public override NSSet get_UpdatedObjects
isTemporaryID
/* property */ public override bool get_IsTemporaryID
persistentStore
/* property */ public override NSPersistentStore get_PersistentStore
URIRepresentation
/* property */ public override NSUrl get_URIRepresentation
entitiesForConfiguration:
public override string[] EntitiesForConfiguration
fetchRequestFromTemplateWithName:substitutionVariables:
public override NSFetchRequest FetchRequestFromTemplateWithName
fetchRequestTemplateForName:
public override NSFetchRequest FetchRequestTemplateForName
isConfiguration:compatibleWithStoreMetadata:
public override bool IsConfiguration
mergedModelFromBundles:
public NSManagedObjectModel MergedModelFromBundles
mergedModelFromBundles:forStoreMetadata:
public NSManagedObjectModel MergedModelFromBundles
modelByMergingModels:
public NSManagedObjectModel ModelByMergingModels
modelByMergingModels:forStoreMetadata:
public NSManagedObjectModel ModelByMergingModels
setEntities:forConfiguration:
public override void SetEntities
setFetchRequestTemplate:forName:
public override void SetFetchRequestTemplate
configurations
/* property */ public override string[] get_Configurations
entities
/* property */ public override NSEntityDescription[] get_Entities
setEntities:
/* property */ public override void set_Entities
entitiesByName
/* property */ public override NSDictionary get_EntitiesByName
entityVersionHashesByName
/* property */ public override NSDictionary get_EntityVersionHashesByName
fetchRequestTemplatesByName
/* property */ public override NSDictionary get_FetchRequestTemplatesByName
localizationDictionary
/* property */ public override NSDictionary get_LocalizationDictionary
setLocalizationDictionary:
/* property */ public override void set_LocalizationDictionary
versionIdentifiers
/* property */ public override NSSet get_VersionIdentifiers
setVersionIdentifiers:
/* property */ public override void set_VersionIdentifiers
mappingModelFromBundles:forSourceModel:destinationModel:
public NSMappingModel MappingModelFromBundles
entityMappings
/* property */ public override NSEntityMapping[] get_EntityMappings
setEntityMappings:
/* property */ public override void set_EntityMappings
entityMappingsByName
/* property */ public override NSDictionary get_EntityMappingsByName
cachedSnapshot
/* property */ public override NSDictionary get_CachedSnapshot
newVersionNumber
/* property */ public override nuint get_NewVersionNumber
objectSnapshot
/* property */ public override NSDictionary get_ObjectSnapshot
oldVersionNumber
/* property */ public override nuint get_OldVersionNumber
persistedSnapshot
/* property */ public override NSDictionary get_PersistedSnapshot
sourceObject
/* property */ public override NSManagedObject get_SourceObject
resolveConflicts:error:
public override bool ResolveConflictserror
mergeType
/* property */ public override NSMergePolicyType get_MergeType
associateSourceInstance:withDestinationInstance:forEntityMapping:
public override void AssociateSourceInstance
cancelMigrationWithError:
public override void CancelMigrationWithError
destinationEntityForEntityMapping:
public override NSEntityDescription DestinationEntityForEntityMapping
destinationInstancesForEntityMappingNamed:sourceInstances:
public override NSManagedObject[] DestinationInstancesForEntityMappingNamed
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
public override bool MigrateStoreFromUrl
sourceEntityForEntityMapping:
public override NSEntityDescription SourceEntityForEntityMapping
sourceInstancesForEntityMappingNamed:destinationInstances:
public override NSManagedObject[] SourceInstancesForEntityMappingNamed
currentEntityMapping
/* property */ public override NSEntityMapping get_CurrentEntityMapping
destinationContext
/* property */ public override NSManagedObjectContext get_DestinationContext
destinationModel
/* property */ public override NSManagedObjectModel get_DestinationModel
mappingModel
/* property */ public override NSMappingModel get_MappingModel
migrationProgress
/* property */ public override Single get_MigrationProgress
sourceContext
/* property */ public override NSManagedObjectContext get_SourceContext
sourceModel
/* property */ public override NSManagedObjectModel get_SourceModel
usesStoreSpecificMigrationManager
/* property */ public override bool get_UsesStoreSpecificMigrationManager
setUsesStoreSpecificMigrationManager:
/* property */ public override void set_UsesStoreSpecificMigrationManager
didAddToPersistentStoreCoordinator:
public override void DidAddToPersistentStoreCoordinator
metadataForPersistentStoreWithURL:error:
public NSDictionary MetadataForPersistentStoreWithUrl
setMetadata:forPersistentStoreWithURL:error:
public bool SetMetadata
willRemoveFromPersistentStoreCoordinator:
public override void WillRemoveFromPersistentStoreCoordinator
configurationName
/* property */ public override string get_ConfigurationName
isReadOnly
/* property */ public override bool get_ReadOnly
setReadOnly:
/* property */ public override void set_ReadOnly
addPersistentStoreWithType:configuration:URL:options:error:
public override NSPersistentStore AddPersistentStoreWithType
managedObjectIDForURIRepresentation:
public override NSManagedObjectID ManagedObjectIDForURIRepresentation
metadataForPersistentStore:
public override NSDictionary MetadataForPersistentStore
metadataForPersistentStoreOfType:URL:error:
public NSDictionary MetadataForPersistentStoreOfType
migratePersistentStore:toURL:options:withType:error:
public override NSPersistentStore MigratePersistentStore
persistentStoreForURL:
public override NSPersistentStore PersistentStoreForUrl
registerStoreClass:forStoreType:
public void RegisterStoreClass
removePersistentStore:error:
public override bool RemovePersistentStore
removeUbiquitousContentAndPersistentStoreAtURL:options:error:
public bool RemoveUbiquitousContentAndPersistentStore
setMetadata:forPersistentStoreOfType:URL:error:
public bool SetMetadata
setMetadata:forPersistentStore:
public override void SetMetadata
setURL:forPersistentStore:
public override bool SetUrl
URLForPersistentStore:
public override NSUrl UrlForPersistentStore
persistentStores
/* property */ public override NSPersistentStore[] get_PersistentStores
registeredStoreTypes
/* property */ public NSDictionary get_RegisteredStoreTypes
requestType
/* property */ public override NSPersistentStoreRequestType get_RequestType
finalResult
/* property */ public override NSObject[] get_FinalResult
result
/* property */ public override NSObject get_Result
operationError
/* property */ public override NSError get_OperationError
estimatedResultCount
/* property */ public override nint get_EstimatedResultCount
setEstimatedResultCount:
/* property */ public override void set_EstimatedResultCount
setValidationPredicates:withValidationWarnings:
public override void SetValidationPredicates
isIndexed
/* property */ public override bool get_Indexed
setIndexed:
/* property */ public override void set_Indexed
isIndexedBySpotlight
/* property */ public override bool get_IndexedBySpotlight
setIndexedBySpotlight:
/* property */ public override void set_IndexedBySpotlight
isOptional
/* property */ public override bool get_Optional
setOptional:
/* property */ public override void set_Optional
isStoredInExternalRecord
/* property */ public override bool get_StoredInExternalRecord
setStoredInExternalRecord:
/* property */ public override void set_StoredInExternalRecord
isTransient
/* property */ public override bool get_Transient
setTransient:
/* property */ public override void set_Transient
validationPredicates
/* property */ public override NSPredicate[] get_ValidationPredicates
validationWarnings
/* property */ public override string[] get_ValidationWarnings
valueExpression
/* property */ public override NSExpression get_ValueExpression
setValueExpression:
/* property */ public override void set_ValueExpression
deleteRule
/* property */ public override NSDeleteRule get_DeleteRule
setDeleteRule:
/* property */ public override void set_DeleteRule
destinationEntity
/* property */ public override NSEntityDescription get_DestinationEntity
setDestinationEntity:
/* property */ public override void set_DestinationEntity
inverseRelationship
/* property */ public override NSRelationshipDescription get_InverseRelationship
setInverseRelationship:
/* property */ public override void set_InverseRelationship
isToMany
/* property */ public override bool get_IsToMany
maxCount
/* property */ public override nuint get_MaxCount
setMaxCount:
/* property */ public override void set_MaxCount
minCount
/* property */ public override nuint get_MinCount
setMinCount:
/* property */ public override void set_MinCount
isOrdered
/* property */ public override bool get_Ordered
setOrdered:
/* property */ public override void set_Ordered
lockedObjects
/* property */ public override NSSet get_LockedObjects
batchUpdateRequestWithEntityName:
public NSBatchUpdateRequest BatchUpdateRequestWithEntityName
propertiesToUpdate
/* property */ public override NSDictionary get_PropertiesToUpdate
setPropertiesToUpdate:
/* property */ public override void set_PropertiesToUpdate
applyWithExtent:roiCallback:arguments:
public override CIImage ApplyWithExtent
kernelsWithString:
public CIKernel[] FromProgramMultiple
kernelWithString:
public CIKernel FromProgramSingle
applyWithExtent:arguments:
public override CIImage ApplyWithExtent
applyWithExtent:roiCallback:inputImage:arguments:
public override CIImage ApplyWithExtent
faceAngle
/* property */ public override Single get_FaceAngle
hasFaceAngle
/* property */ public override bool get_HasFaceAngle
hasLeftEyePosition
/* property */ public override bool get_HasLeftEyePosition
hasMouthPosition
/* property */ public override bool get_HasMouthPosition
hasRightEyePosition
/* property */ public override bool get_HasRightEyePosition
hasSmile
/* property */ public override bool get_HasSmile
hasTrackingFrameCount
/* property */ public override bool get_HasTrackingFrameCount
hasTrackingID
/* property */ public override bool get_HasTrackingId
leftEyeClosed
/* property */ public override bool get_LeftEyeClosed
leftEyePosition
/* property */ public override CGPoint get_LeftEyePosition
mouthPosition
/* property */ public override CGPoint get_MouthPosition
rightEyeClosed
/* property */ public override bool get_RightEyeClosed
rightEyePosition
/* property */ public override CGPoint get_RightEyePosition
trackingFrameCount
/* property */ public override int get_TrackingFrameCount
trackingID
/* property */ public override int get_TrackingId
bottomLeft
/* property */ public override CGPoint get_BottomLeft
bottomRight
/* property */ public override CGPoint get_BottomRight
topLeft
/* property */ public override CGPoint get_TopLeft
topRight
/* property */ public override CGPoint get_TopRight
messageString
/* property */ public override string get_MessageString
headingAccuracy
/* property */ public override Double get_HeadingAccuracy
magneticHeading
/* property */ public override Double get_MagneticHeading
trueHeading
/* property */ public override Double get_TrueHeading
z
/* property */ public override Double get_Z
distanceFromLocation:
public override Double DistanceFrom
altitude
/* property */ public override Double get_Altitude
course
/* property */ public override Double get_Course
floor
public SCNFloor Create
horizontalAccuracy
/* property */ public override Double get_HorizontalAccuracy
verticalAccuracy
/* property */ public override Double get_VerticalAccuracy
locationManager:didChangeAuthorizationStatus:
public override void AuthorizationChanged
locationManager:didFinishDeferredUpdatesWithError:
public override void DeferredUpdatesFinished
locationManager:didDetermineState:forRegion:
public override void DidDetermineState
locationManager:didRangeBeacons:inRegion:
public override void DidRangeBeacons
locationManager:didStartMonitoringForRegion:
public override void DidStartMonitoringForRegion
locationManager:didVisit:
public override void DidVisit
locationManager:didFailWithError:
public override void Failed
locationManager:didUpdateLocations:
public override void LocationsUpdated
locationManagerDidPauseLocationUpdates:
public override void LocationUpdatesPaused
locationManagerDidResumeLocationUpdates:
public override void LocationUpdatesResumed
locationManager:monitoringDidFailForRegion:withError:
public override void MonitoringFailed
locationManager:rangingBeaconsDidFailForRegion:withError:
public override void RangingBeaconsDidFailForRegion
locationManager:didEnterRegion:
public override void RegionEntered
locationManager:didExitRegion:
public override void RegionLeft
locationManagerShouldDisplayHeadingCalibration:
public override bool ShouldDisplayHeadingCalibration
locationManager:didUpdateHeading:
public override void UpdatedHeading
locationManager:didUpdateToLocation:fromLocation:
public override void UpdatedLocation
containsCoordinate:
public override bool ContainsCoordinate
notifyOnEntry
/* property */ public override bool get_NotifyOnEntry
setNotifyOnEntry:
/* property */ public override void set_NotifyOnEntry
notifyOnExit
/* property */ public override bool get_NotifyOnExit
setNotifyOnExit:
/* property */ public override void set_NotifyOnExit
addressDictionary
/* property */ public override NSDictionary get_AddressDictionary
administrativeArea
/* property */ public override string get_AdministrativeArea
areasOfInterest
/* property */ public override string[] get_AreasOfInterest
country
/* property */ public override string get_Country
inlandWater
/* property */ public override string get_InlandWater
ISOcountryCode
/* property */ public override string get_IsoCountryCode
locality
/* property */ public override string get_Locality
ocean
/* property */ public override string get_Ocean
postalCode
/* property */ public override string get_PostalCode
subAdministrativeArea
/* property */ public override string get_SubAdministrativeArea
subLocality
/* property */ public override string get_SubLocality
subThoroughfare
/* property */ public override string get_SubThoroughfare
thoroughfare
/* property */ public override string get_Thoroughfare
peripheralDataWithMeasuredPower:
public override NSMutableDictionary GetPeripheralData
major
/* property */ public override NSNumber get_Major
minor
/* property */ public override NSNumber get_Minor
notifyEntryStateOnDisplay
/* property */ public override bool get_NotifyEntryStateOnDisplay
setNotifyEntryStateOnDisplay:
/* property */ public override void set_NotifyEntryStateOnDisplay
proximityUUID
/* property */ public override NSUuid get_ProximityUuid
accuracy
/* property */ public override Double get_Accuracy
proximity
/* property */ public override EKAlarmProximity get_Proximity
rssi
/* property */ public override nint get_Rssi
cancelGeocode
public override void CancelGeocode
geocodeAddressDictionary:completionHandler:
public override void GeocodeAddress
geocodeAddressString:completionHandler:
public override void GeocodeAddress
geocodeAddressString:inRegion:completionHandler:
public override void GeocodeAddress
reverseGeocodeLocation:completionHandler:
public override void ReverseGeocodeLocation
isGeocoding
/* property */ public override bool get_Geocoding
arrivalDate
/* property */ public override NSDate get_ArrivalDate
departureDate
/* property */ public override NSDate get_DepartureDate
hostWithName:netService:
public MidiNetworkHost Create
hostWithName:netServiceName:netServiceDomain:
public MidiNetworkHost Create
hostWithName:address:port:
public MidiNetworkHost Create
hasSameAddressAs:
public override bool HasSameAddressAs
address
/* property */ public override string get_Address
netServiceDomain
/* property */ public override string get_NetServiceDomain
netServiceName
/* property */ public override string get_NetServiceName
connectionWithHost:
public MidiNetworkConnection FromHost
addContact:
public override bool AddContact
removeContact:
public override bool RemoveContact
destinationEndpoint
/* property */ override int get__DestinationEndpoint
sourceEndpoint
/* property */ override int get__SourceEndpoint
connectionPolicy
/* property */ public override MidiNetworkConnectionPolicy get_ConnectionPolicy
setConnectionPolicy:
/* property */ public override void set_ConnectionPolicy
contacts
/* property */ public override NSSet get_Contacts
defaultSession
/* property */ public MidiNetworkSession get_DefaultSession
localName
/* property */ public override string get_LocalName
networkName
/* property */ public override string get_NetworkName
networkPort
/* property */ public override nint get_NetworkPort
isNew
/* property */ public override bool get_IsNew
addAlarm:
public override void AddAlarm
addRecurrenceRule:
public override void AddRecurrenceRule
removeAlarm:
public override void RemoveAlarm
removeRecurrenceRule:
public override void RemoveRecurrenceRule
alarms
/* property */ public override EKAlarm[] get_Alarms
setAlarms:
/* property */ public override void set_Alarms
attendees
/* property */ public override EKParticipant[] get_Attendees
calendar
/* property */ public override NSCalendar get_Calendar
setCalendar:
public override void SetCalendar
calendarItemExternalIdentifier
/* property */ public override string get_CalendarItemExternalIdentifier
calendarItemIdentifier
/* property */ public override string get_CalendarItemIdentifier
hasAlarms
/* property */ public override bool get_HasAlarms
hasAttendees
/* property */ public override bool get_HasAttendees
hasNotes
/* property */ public override bool get_HasNotes
hasRecurrenceRules
/* property */ public override bool get_HasRecurrenceRules
lastModifiedDate
/* property */ public override NSDate get_LastModifiedDate
setLocation:
/* property */ public override void set_Location
notes
/* property */ public override string get_Notes
setNotes:
/* property */ public override void set_Notes
recurrenceRules
/* property */ public override EKRecurrenceRule[] get_RecurrenceRules
setRecurrenceRules:
/* property */ public override void set_RecurrenceRules
sourceIdentifier
/* property */ public override string get_SourceIdentifier
locationWithTitle:
public EKStructuredLocation FromTitle
geoLocation
/* property */ public override CLLocation get_GeoLocation
setGeoLocation:
/* property */ public override void set_GeoLocation
setRadius:
/* property */ public override void set_Radius
alarmWithAbsoluteDate:
public EKAlarm FromDate
alarmWithRelativeOffset:
public EKAlarm FromTimeInterval
absoluteDate
/* property */ public override NSDate get_AbsoluteDate
setAbsoluteDate:
/* property */ public override void set_AbsoluteDate
setProximity:
/* property */ public override void set_Proximity
relativeOffset
/* property */ public override Double get_RelativeOffset
setRelativeOffset:
/* property */ public override void set_RelativeOffset
structuredLocation
/* property */ public override EKStructuredLocation get_StructuredLocation
setStructuredLocation:
/* property */ public override void set_StructuredLocation
calendarForEntityType:eventStore:
public EKCalendar Create
calendarWithEventStore:
public EKCalendar FromEventStore
allowedEntityTypes
/* property */ public override EKEntityMask get_AllowedEntityTypes
allowsContentModifications
/* property */ public override bool get_AllowsContentModifications
setCGColor:
/* property */ public override void set_CGColor
isImmutable
/* property */ public override bool get_Immutable
source
/* property */ public override HKSource get_Source
setSource:
/* property */ public override void set_Source
isSubscribed
/* property */ public override bool get_Subscribed
supportedEventAvailabilities
/* property */ public override EKCalendarEventAvailability get_SupportedEventAvailabilities
isCurrentUser
/* property */ public override bool get_IsCurrentUser
participantRole
/* property */ public override EKParticipantRole get_ParticipantRole
participantStatus
/* property */ public override EKParticipantStatus get_ParticipantStatus
participantType
/* property */ public override EKParticipantType get_ParticipantType
recurrenceEndWithEndDate:
public EKRecurrenceEnd FromEndDate
recurrenceEndWithOccurrenceCount:
public EKRecurrenceEnd FromOccurrenceCount
occurrenceCount
/* property */ public override nint get_OccurrenceCount
reminderWithEventStore:
public EKReminder Create
isCompleted
/* property */ public override bool get_Completed
setCompleted:
/* property */ public override void set_Completed
setCompletionDate:
/* property */ public override void set_CompletionDate
dueDateComponents
/* property */ public override NSDateComponents get_DueDateComponents
setDueDateComponents:
/* property */ public override void set_DueDateComponents
startDateComponents
/* property */ public override NSDateComponents get_StartDateComponents
setStartDateComponents:
/* property */ public override void set_StartDateComponents
setObject:forKey:cost:
public override void SetCost
countLimit
/* property */ public override nuint get_CountLimit
setCountLimit:
/* property */ public override void set_CountLimit
evictsObjectsWithDiscardedContent
/* property */ public override bool get_EvictsObjectsWithDiscardedContent
setEvictsObjectsWithDiscardedContent:
/* property */ public override void set_EvictsObjectsWithDiscardedContent
totalCostLimit
/* property */ public override nuint get_TotalCostLimit
setTotalCostLimit:
/* property */ public override void set_TotalCostLimit
cache:willEvictObject:
public override void WillEvictObject
storagePolicy
/* property */ public override NSUrlCacheStoragePolicy get_StoragePolicy
characterIsMember:
public override bool Contains
longCharacterIsMember:
public override bool Contains
characterSetWithBitmapRepresentation:
public NSCharacterSet FromBitmapRepresentation
characterSetWithContentsOfFile:
public NSCharacterSet FromFile
characterSetWithRange:
public NSCharacterSet FromRange
characterSetWithCharactersInString:
public NSCharacterSet FromString
bitmapRepresentation
public override NSData GetBitmapRepresentation
hasMemberInPlane:
public override bool HasMemberInPlane
isSupersetOfSet:
public override bool IsSupersetOf
alphanumericCharacterSet
/* property */ public NSCharacterSet get_Alphanumerics
capitalizedLetterCharacterSet
/* property */ public NSCharacterSet get_Capitalized
controlCharacterSet
/* property */ public NSCharacterSet get_Controls
decimalDigitCharacterSet
/* property */ public NSCharacterSet get_DecimalDigits
decomposableCharacterSet
/* property */ public NSCharacterSet get_Decomposables
illegalCharacterSet
/* property */ public NSCharacterSet get_Illegals
invertedSet
/* property */ public override NSCharacterSet get_InvertedSet
letterCharacterSet
/* property */ public NSCharacterSet get_Letters
lowercaseLetterCharacterSet
/* property */ public NSCharacterSet get_LowercaseLetters
nonBaseCharacterSet
/* property */ public NSCharacterSet get_Marks
newlineCharacterSet
/* property */ public NSCharacterSet get_Newlines
punctuationCharacterSet
/* property */ public NSCharacterSet get_Punctuation
symbolCharacterSet
/* property */ public NSCharacterSet get_Symbols
uppercaseLetterCharacterSet
/* property */ public NSCharacterSet get_UppercaseLetters
whitespaceAndNewlineCharacterSet
/* property */ public NSCharacterSet get_WhitespaceAndNewlines
whitespaceCharacterSet
/* property */ public NSCharacterSet get_Whitespaces
stringFromKilograms:
public override string StringFromKilograms
stringFromValue:unit:
public override string StringFromValue
unitStringFromKilograms:usedUnit:
public override string UnitStringFromKilograms
unitStringFromValue:unit:
public override string UnitStringFromValue
isForPersonMassUse
/* property */ public override bool get_ForPersonMassUse
setForPersonMassUse:
/* property */ public override void set_ForPersonMassUse
numberFormatter
/* property */ public override NSNumberFormatter get_NumberFormatter
setNumberFormatter:
/* property */ public override void set_NumberFormatter
unitStyle
/* property */ public override MKDistanceFormatterUnitStyle get_UnitStyle
setUnitStyle:
/* property */ public override void set_UnitStyle
addCharactersInRange:
public override void AddCharacters
addCharactersInString:
public override void AddCharacters
formIntersectionWithCharacterSet:
public override void IntersectWith
invert
public override void Invert
removeCharactersInRange:
public override void RemoveCharacters
removeCharactersInString:
public override void RemoveCharacters
formUnionWithCharacterSet:
public override void UnionWith
predicateWithLeftExpression:rightExpression:modifier:type:options:
public NSComparisonPredicate Create
predicateWithLeftExpression:rightExpression:customSelector:
public NSComparisonPredicate FromSelector
comparisonPredicateModifier
/* property */ public override NSComparisonPredicateModifier get_ComparisonPredicateModifier
customSelector
/* property */ public override Selector get_CustomSelector
leftExpression
/* property */ public override NSExpression get_LeftExpression
predicateOperatorType
/* property */ public override NSPredicateOperatorType get_PredicateOperatorType
rightExpression
/* property */ public override NSExpression get_RightExpression
dataDetectorWithTypes:error:
public NSDataDetector Create
checkingTypes
/* property */ public override NSTextCheckingTypes get_CheckingTypes
valueForComponent:
public override nint GetValueForComponent
isValidDateInCalendar:
public override bool IsValidDateInCalendar
setValue:forComponent:
public override void SetValueForComponent
day
/* property */ public override nint get_Day
setDay:
/* property */ public override void set_Day
era
/* property */ public override nint get_Era
setEra:
/* property */ public override void set_Era
hour
/* property */ public override nint get_Hour
setHour:
/* property */ public override void set_Hour
isLeapMonth
/* property */ public override bool get_IsLeapMonth
setLeapMonth:
/* property */ public override void set_IsLeapMonth
isValidDate
/* property */ public override bool get_IsValidDate
minute
/* property */ public override nint get_Minute
setMinute:
/* property */ public override void set_Minute
month
/* property */ public override nint get_Month
setMonth:
/* property */ public override void set_Month
nanosecond
/* property */ public override nint get_Nanosecond
setNanosecond:
/* property */ public override void set_Nanosecond
quarter
/* property */ public override nint get_Quarter
setQuarter:
/* property */ public override void set_Quarter
second
/* property */ public override nint get_Second
setSecond:
/* property */ public override void set_Second
week
/* property */ public override nint get_Week
setWeek:
/* property */ public override void set_Week
weekday
/* property */ public override nint get_Weekday
setWeekday:
/* property */ public override void set_Weekday
weekdayOrdinal
/* property */ public override nint get_WeekdayOrdinal
setWeekdayOrdinal:
/* property */ public override void set_WeekdayOrdinal
weekOfMonth
/* property */ public override nint get_WeekOfMonth
setWeekOfMonth:
/* property */ public override void set_WeekOfMonth
weekOfYear
/* property */ public override nint get_WeekOfYear
setWeekOfYear:
/* property */ public override void set_WeekOfYear
year
/* property */ public override nint get_Year
setYear:
/* property */ public override void set_Year
yearForWeekOfYear
/* property */ public override nint get_YearForWeekOfYear
setYearForWeekOfYear:
/* property */ public override void set_YearForWeekOfYear
stringFromByteCount:countStyle:
public string Format
stringFromByteCount:
public override string Format
isAdaptive
/* property */ public override bool get_Adaptive
setAdaptive:
/* property */ public override void set_Adaptive
allowedUnits
/* property */ public override NSCalendarUnit get_AllowedUnits
setAllowedUnits:
/* property */ public override void set_AllowedUnits
allowsNonnumericFormatting
/* property */ public override bool get_AllowsNonnumericFormatting
setAllowsNonnumericFormatting:
/* property */ public override void set_AllowsNonnumericFormatting
countStyle
/* property */ public override NSByteCountFormatterCountStyle get_CountStyle
setCountStyle:
/* property */ public override void set_CountStyle
formattingContext
/* property */ public override NSFormattingContext get_FormattingContext
setFormattingContext:
/* property */ public override void set_FormattingContext
includesActualByteCount
/* property */ public override bool get_IncludesActualByteCount
setIncludesActualByteCount:
/* property */ public override void set_IncludesActualByteCount
includesCount
/* property */ public override bool get_IncludesCount
setIncludesCount:
/* property */ public override void set_IncludesCount
includesUnit
/* property */ public override bool get_IncludesUnit
setIncludesUnit:
/* property */ public override void set_IncludesUnit
zeroPadsFractionDigits
/* property */ public override bool get_ZeroPadsFractionDigits
setZeroPadsFractionDigits:
/* property */ public override void set_ZeroPadsFractionDigits
dateFormatFromTemplate:options:locale:
public string GetDateFormatFromTemplate
dateFromString:
public override NSDate Parse
setLocalizedDateFormatFromTemplate:
public override void SetLocalizedDateFormatFromTemplate
localizedStringFromDate:dateStyle:timeStyle:
public string ToLocalizedString
stringFromDate:
public override string ToString
setAMSymbol:
/* property */ public override void set_AMSymbol
formatterBehavior
/* property */ public override NSNumberFormatterBehavior get_FormatterBehavior
setFormatterBehavior:
/* property */ public override void set_FormatterBehavior
dateFormat
/* property */ public override string get_DateFormat
setDateFormat:
/* property */ public override void set_DateFormat
dateStyle
/* property */ public override NSDateIntervalFormatterStyle get_DateStyle
setDateStyle:
/* property */ public override void set_DateStyle
defaultFormatterBehavior
/* property */ public NSNumberFormatterBehavior get_DefaultFormatterBehavior
setDefaultFormatterBehavior:
/* property */ public void set_DefaultFormatterBehavior
defaultDate
/* property */ public override NSDate get_DefaultDate
setDefaultDate:
/* property */ public override void set_DefaultDate
doesRelativeDateFormatting
/* property */ public override bool get_DoesRelativeDateFormatting
setDoesRelativeDateFormatting:
/* property */ public override void set_DoesRelativeDateFormatting
setEraSymbols:
/* property */ public override void set_EraSymbols
generatesCalendarDates
/* property */ public override bool get_GeneratesCalendarDates
setGeneratesCalendarDates:
/* property */ public override void set_GeneratesCalendarDates
gregorianStartDate
/* property */ public override NSDate get_GregorianStartDate
setGregorianStartDate:
/* property */ public override void set_GregorianStartDate
isLenient
/* property */ public override bool get_Lenient
setLenient:
/* property */ public override void set_Lenient
setLongEraSymbols:
/* property */ public override void set_LongEraSymbols
setMonthSymbols:
/* property */ public override void set_MonthSymbols
setPMSymbol:
/* property */ public override void set_PMSymbol
setQuarterSymbols:
/* property */ public override void set_QuarterSymbols
setShortMonthSymbols:
/* property */ public override void set_ShortMonthSymbols
setShortQuarterSymbols:
/* property */ public override void set_ShortQuarterSymbols
setShortStandaloneMonthSymbols:
/* property */ public override void set_ShortStandaloneMonthSymbols
setShortStandaloneQuarterSymbols:
/* property */ public override void set_ShortStandaloneQuarterSymbols
setShortStandaloneWeekdaySymbols:
/* property */ public override void set_ShortStandaloneWeekdaySymbols
setShortWeekdaySymbols:
/* property */ public override void set_ShortWeekdaySymbols
setStandaloneMonthSymbols:
/* property */ public override void set_StandaloneMonthSymbols
setStandaloneQuarterSymbols:
/* property */ public override void set_StandaloneQuarterSymbols
setStandaloneWeekdaySymbols:
/* property */ public override void set_StandaloneWeekdaySymbols
timeStyle
/* property */ public override NSDateIntervalFormatterStyle get_TimeStyle
setTimeStyle:
/* property */ public override void set_TimeStyle
twoDigitStartDate
/* property */ public override NSDate get_TwoDigitStartDate
setTwoDigitStartDate:
/* property */ public override void set_TwoDigitStartDate
setVeryShortMonthSymbols:
/* property */ public override void set_VeryShortMonthSymbols
setVeryShortStandaloneMonthSymbols:
/* property */ public override void set_VeryShortStandaloneMonthSymbols
setVeryShortStandaloneWeekdaySymbols:
/* property */ public override void set_VeryShortStandaloneWeekdaySymbols
setVeryShortWeekdaySymbols:
/* property */ public override void set_VeryShortWeekdaySymbols
setWeekdaySymbols:
/* property */ public override void set_WeekdaySymbols
localizedStringFromDateComponents:unitsStyle:
public string LocalizedStringFromDateComponents
stringFromDate:toDate:
public override string StringFromDate
stringFromDateComponents:
public override string StringFromDateComponents
stringFromTimeInterval:
public override string StringFromTimeInterval
allowsFractionalUnits
/* property */ public override bool get_AllowsFractionalUnits
setAllowsFractionalUnits:
/* property */ public override void set_AllowsFractionalUnits
collapsesLargestUnit
/* property */ public override bool get_CollapsesLargestUnit
setCollapsesLargestUnit:
/* property */ public override void set_CollapsesLargestUnit
includesApproximationPhrase
/* property */ public override bool get_IncludesApproximationPhrase
setIncludesApproximationPhrase:
/* property */ public override void set_IncludesApproximationPhrase
includesTimeRemainingPhrase
/* property */ public override bool get_IncludesTimeRemainingPhrase
setIncludesTimeRemainingPhrase:
/* property */ public override void set_IncludesTimeRemainingPhrase
maximumUnitCount
/* property */ public override nint get_MaximumUnitCount
setMaximumUnitCount:
/* property */ public override void set_MaximumUnitCount
unitsStyle
/* property */ public override NSDateComponentsFormatterUnitsStyle get_UnitsStyle
setUnitsStyle:
/* property */ public override void set_UnitsStyle
zeroFormattingBehavior
/* property */ public override NSDateComponentsFormatterZeroFormattingBehavior get_ZeroFormattingBehavior
setZeroFormattingBehavior:
/* property */ public override void set_ZeroFormattingBehavior
dateTemplate
/* property */ public override string get_DateTemplate
setDateTemplate:
/* property */ public override void set_DateTemplate
stringFromJoules:
public override string StringFromJoules
unitStringFromJoules:usedUnit:
public override string UnitStringFromJoules
isForFoodEnergyUse
/* property */ public override bool get_ForFoodEnergyUse
setForFoodEnergyUse:
/* property */ public override void set_ForFoodEnergyUse
acceptConnectionInBackgroundAndNotifyForModes:
public override void AcceptConnectionInBackground
acceptConnectionInBackgroundAndNotify
public override void AcceptConnectionInBackground
availableData
public override NSData AvailableData
closeFile
public override void CloseFile
fileHandleWithNullDevice
public NSFileHandle FromNullDevice
fileHandleWithStandardError
public NSFileHandle FromStandardError
fileHandleWithStandardInput
public NSFileHandle FromStandardInput
fileHandleWithStandardOutput
public NSFileHandle FromStandardOutput
offsetInFile
public override UInt64 OffsetInFile
fileHandleForReadingAtPath:
public NSFileHandle OpenRead
fileHandleForReadingFromURL:error:
public NSFileHandle OpenReadUrl
fileHandleForUpdatingAtPath:
public NSFileHandle OpenUpdate
fileHandleForUpdatingURL:error:
public NSFileHandle OpenUpdateUrl
fileHandleForWritingAtPath:
public NSFileHandle OpenWrite
fileHandleForWritingToURL:error:
public NSFileHandle OpenWriteUrl
readDataOfLength:
public override NSData ReadDataOfLength
readDataToEndOfFile
public override NSData ReadDataToEndOfFile
readInBackgroundAndNotifyForModes:
public override void ReadInBackground
readInBackgroundAndNotify
public override void ReadInBackground
readToEndOfFileInBackgroundAndNotifyForModes:
public override void ReadToEndOfFileInBackground
readToEndOfFileInBackgroundAndNotify
public override void ReadToEndOfFileInBackground
seekToEndOfFile
public override UInt64 SeekToEndOfFile
seekToFileOffset:
public override void SeekToFileOffset
setReadabilityHandler:
public override void SetReadabilityHandler
setWriteabilityHandler:
public override void SetWriteabilityHandle
synchronizeFile
public override void SynchronizeFile
truncateFileAtOffset:
public override void TruncateFileAtOffset
waitForDataInBackgroundAndNotifyForModes:
public override void WaitForDataInBackground
waitForDataInBackgroundAndNotify
public override void WaitForDataInBackground
writeData:
public override void WriteData
fileDescriptor
/* property */ public override int get_FileDescriptor
pipe
public NSPipe Create
fileHandleForReading
/* property */ public override NSFileHandle get_ReadHandle
fileHandleForWriting
/* property */ public override NSFileHandle get_WriteHandle
archiver:didEncodeObject:
public override void EncodedObject
archiverDidFinish:
public override void Finished
archiverWillFinish:
public override void Finishing
archiver:willReplaceObject:withObject:
public override void ReplacingObject
archiver:willEncodeObject:
public override NSObject WillEncode
unarchiver:cannotDecodeObjectOfClassName:originalClasses:
public override Class CannotDecodeClass
unarchiver:didDecodeObject:
public override NSObject DecodedObject
unarchiverDidFinish:
public override void Finished
unarchiverWillFinish:
public override void Finishing
unarchiver:willReplaceObject:withObject:
public override void ReplacingObject
disableUpdates
public override void DisableUpdates
enableUpdates
public override void EnableUpdates
enumerateResultsUsingBlock:
public override void EnumerateResultsUsingBlock
enumerateResultsWithOptions:usingBlock:
public override void EnumerateResultsWithOptions
indexOfResult:
public override nint IndexOfResult
resultAtIndex:
public override NSObject ResultAtIndex
startQuery
public override bool StartQuery
stopQuery
public override void StopQuery
valueOfAttribute:forResultAtIndex:
public override NSObject ValueOfAttribute
groupedResults
/* property */ public override NSObject[] get_GroupedResults
groupingAttributes
/* property */ public override NSArray get_GroupingAttributes
setGroupingAttributes:
/* property */ public override void set_GroupingAttributes
isGathering
/* property */ public override bool get_IsGathering
isStarted
/* property */ public override bool get_IsStarted
isStopped
/* property */ public override bool get_IsStopped
notificationBatchingInterval
/* property */ public override Double get_NotificationBatchingInterval
setNotificationBatchingInterval:
/* property */ public override void set_NotificationBatchingInterval
operationQueue
/* property */ public override NSOperationQueue get_OperationQueue
setOperationQueue:
/* property */ public override void set_OperationQueue
resultCount
/* property */ public override nint get_ResultCount
results
/* property */ public override NSObject[] get_Results
searchItems
/* property */ public override NSObject[] get_SearchItems
setSearchItems:
/* property */ public override void set_SearchItems
searchScopes
/* property */ public override NSObject[] get_SearchScopes
setSearchScopes:
/* property */ public override void set_SearchScopes
valueListAttributes
/* property */ public override NSObject[] get_ValueListAttributes
setValueListAttributes:
/* property */ public override void set_ValueListAttributes
valueLists
/* property */ public override NSDictionary get_ValueLists
metadataQuery:replacementObjectForResultObject:
public override NSObject ReplacementObjectForResultObject
metadataQuery:replacementValueForAttribute:value:
public override NSObject ReplacementValueForAttributevalue
attribute
/* property */ public override string get_Attribute
subgroups
/* property */ public override NSObject[] get_Subgroups
nextObject
public override NSObject NextObject
callStackReturnAddresses
/* property */ public override NSNumber[] get_CallStackReturnAddresses
callStackSymbols
/* property */ public override string[] get_CallStackSymbols
reason
/* property */ public override string get_Reason
expressionValueWithObject:context:
public override NSExpression ExpressionValueWithObject
expressionForAggregate:
public NSExpression FromAggregate
expressionForAnyKey
public NSExpression FromAnyKey
expressionForConstantValue:
public NSExpression FromConstant
expressionWithFormat:argumentArray:
public NSExpression FromFormat
expressionForFunction:arguments:
public NSExpression FromFunction
expressionForFunction:selectorName:arguments:
public NSExpression FromFunction
expressionForBlock:arguments:
public NSExpression FromFunction
expressionForIntersectSet:with:
public NSExpression FromIntersectSet
expressionForKeyPath:
public NSExpression FromKeyPath
expressionForMinusSet:with:
public NSExpression FromMinusSet
expressionForSubquery:usingIteratorVariable:predicate:
public NSExpression FromSubquery
expressionForUnionSet:with:
public NSExpression FromUnionSet
expressionForVariable:
public NSExpression FromVariable
arguments
/* property */ public override NSObject[] get_Arguments
collection
/* property */ public override GCControllerElement get_Collection
constantValue
/* property */ public override NSObject get_ConstantValue
expressionForEvaluatedObject
/* property */ public NSExpression get_ExpressionForEvaluatedObject
expressionType
/* property */ public override NSExpressionType get_ExpressionType
function
/* property */ public override string get_Function
operand
/* property */ public override NSExpression get_Operand
variable
/* property */ public override string get_Variable
cancelRequestWithError:
public override void CancelRequest
completeRequestReturningItems:completionHandler:
public override void CompleteRequest
openURL:completionHandler:
public override void OpenUrl
inputItems
/* property */ public override NSExtensionItem[] get_InputItems
setAttachments:
/* property */ public override void set_Attachments
attributedContentText
/* property */ public override NSAttributedString get_AttributedContentText
setAttributedContentText:
/* property */ public override void set_AttributedContentText
attributedTitle
/* property */ public override NSAttributedString get_AttributedTitle
setAttributedTitle:
public override void SetTitle
null
/* property */ public NSNull get_Null
stringFromMeters:
public override string StringFromMeters
unitStringFromMeters:usedUnit:
public override string UnitStringFromMeters
isForPersonHeightUse
/* property */ public override bool get_ForPersonHeightUse
setForPersonHeightUse:
/* property */ public override void set_ForPersonHeightUse
enumerateTagsInRange:scheme:options:usingBlock:
public override void EnumerateTagsInRange
availableTagSchemesForLanguage:
public NSString[] GetAvailableTagSchemesForLanguage
orthographyAtIndex:effectiveRange:
public override NSOrthography GetOrthography
possibleTagsAtIndex:scheme:tokenRange:sentenceRange:scores:
override NSString[] GetPossibleTags
sentenceRangeForRange:
public override NSRange GetSentenceRangeForRange
tagAtIndex:scheme:tokenRange:sentenceRange:
public override string GetTag
tagsInRange:scheme:options:tokenRanges:
override NSString[] GetTagsInRange
setOrthography:range:
public override void SetOrthographyrange
stringEditedInRange:changeInLength:
public override void StringEditedInRange
tagSchemes
/* property */ public override NSString[] get_TagSchemes
enumerateMatchesInString:options:range:usingBlock:
public override void EnumerateMatches
firstMatchInString:options:range:
public override NSTextCheckingResult FindFirstMatch
escapedPatternForString:
public NSString GetEscapedPattern
escapedTemplateForString:
public NSString GetEscapedTemplate
matchesInString:options:range:
public override NSString[] GetMatches
numberOfMatchesInString:options:range:
public override nuint GetNumberOfMatches
rangeOfFirstMatchInString:options:range:
public override NSRange GetRangeOfFirstMatch
replacementStringForResult:inString:offset:template:
public override NSString GetReplacementString
stringByReplacingMatchesInString:options:range:withTemplate:
public override string ReplaceMatches
replaceMatchesInString:options:range:withTemplate:
public override nuint ReplaceMatches
numberOfCaptureGroups
/* property */ public override nuint get_NumberOfCaptureGroups
pattern
/* property */ public override NSString get_Pattern
compareObject:toObject:
public override NSComparisonResult Compare
ascending
/* property */ public override bool get_Ascending
reversedSortDescriptor
/* property */ public override NSObject get_ReversedSortDescriptor
sortedArrayUsingDescriptors:
public NSObject[] GetSortedArray
sortUsingDescriptors:
public void SortUsingDescriptors
addUserInfoEntriesFromDictionary:
public override void AddUserInfoEntries
becomeCurrent
public override void BecomeCurrent
getContinuationStreamsWithCompletionHandler:
public override void GetContinuationStreams
needsSave
/* property */ public override bool get_NeedsSave
setNeedsSave:
/* property */ public override void set_NeedsSave
supportsContinuationStreams
/* property */ public override bool get_SupportsContinuationStreams
setSupportsContinuationStreams:
/* property */ public override void set_SupportsContinuationStreams
webpageURL
/* property */ public override NSUrl get_WebPageUrl
setWebpageURL:
/* property */ public override void set_WebPageUrl
userActivity:didReceiveInputStream:outputStream:
public override void UserActivityReceivedData
userActivityWasContinued:
public override void UserActivityWasContinued
userActivityWillSave:
public override void UserActivityWillSave
checkPromisedItemIsReachableAndReturnError:
public bool CheckPromisedItemIsReachable
getPromisedItemResourceValue:forKey:error:
public bool GetPromisedItemResourceValue
promisedItemResourceValuesForKeys:error:
public NSDictionary GetPromisedItemResourceValues
URLFragmentAllowedCharacterSet
/* property */ public NSCharacterSet get_UrlFragmentAllowedCharacterSet
URLHostAllowedCharacterSet
/* property */ public NSCharacterSet get_UrlHostAllowedCharacterSet
URLPasswordAllowedCharacterSet
/* property */ public NSCharacterSet get_UrlPasswordAllowedCharacterSet
URLPathAllowedCharacterSet
/* property */ public NSCharacterSet get_UrlPathAllowedCharacterSet
URLQueryAllowedCharacterSet
/* property */ public NSCharacterSet get_UrlQueryAllowedCharacterSet
URLUserAllowedCharacterSet
/* property */ public NSCharacterSet get_UrlUserAllowedCharacterSet
cachedResponseForRequest:
public override NSCachedUrlResponse CachedResponseForRequest
getCachedResponseForDataTask:completionHandler:
public override void GetCachedResponse
removeAllCachedResponses
public override void RemoveAllCachedResponses
removeCachedResponseForRequest:
public override void RemoveCachedResponse
removeCachedResponseForDataTask:
public override void RemoveCachedResponse
removeCachedResponsesSinceDate:
public override void RemoveCachedResponsesSinceDate
storeCachedResponse:forRequest:
public override void StoreCachedResponse
storeCachedResponse:forDataTask:
public override void StoreCachedResponse
currentDiskUsage
/* property */ public override nuint get_CurrentDiskUsage
currentMemoryUsage
/* property */ public override nuint get_CurrentMemoryUsage
diskCapacity
/* property */ public override nuint get_DiskCapacity
setDiskCapacity:
/* property */ public override void set_DiskCapacity
memoryCapacity
/* property */ public override nuint get_MemoryCapacity
setMemoryCapacity:
/* property */ public override void set_MemoryCapacity
sharedURLCache
/* property */ public NSUrlCache get_SharedCache
setSharedURLCache:
/* property */ public void set_SharedCache
failureResponse
/* property */ public override NSUrlResponse get_FailureResponse
previousFailureCount
/* property */ public override nint get_PreviousFailureCount
proposedCredential
/* property */ public override NSUrlCredential get_ProposedCredential
protectionSpace
/* property */ public override NSUrlProtectionSpace get_ProtectionSpace
connection:canAuthenticateAgainstProtectionSpace:
public override bool CanAuthenticateAgainstProtectionSpace
connection:didCancelAuthenticationChallenge:
public override void CanceledAuthenticationChallenge
connectionShouldUseCredentialStorage:
public override bool ConnectionShouldUseCredentialStorage
connection:didFailWithError:
public override void FailedWithError
connection:didReceiveAuthenticationChallenge:
public override void ReceivedAuthenticationChallenge
connection:willSendRequestForAuthenticationChallenge:
public override void WillSendRequestForAuthenticationChallenge
connectionDidFinishLoading:
public override void FinishedLoading
connection:needNewBodyStream:
public override NSInputStream NeedNewBodyStream
connection:didReceiveData:
public override void ReceivedData
connection:didReceiveResponse:
public override void ReceivedResponse
connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:
public override void SentBodyData
connection:willCacheResponse:
public override NSCachedUrlResponse WillCacheResponse
connection:willSendRequest:redirectResponse:
public override NSUrlRequest WillSendRequest
connectionDidFinishDownloading:destinationURL:
public override void FinishedDownloading
connectionDidResumeDownloading:totalBytesWritten:expectedTotalBytes:
public override void ResumedDownloading
connection:didWriteData:totalBytesWritten:expectedTotalBytes:
public override void WroteData
credentialsForProtectionSpace:
public override NSDictionary GetCredentials
getCredentialsForProtectionSpace:task:completionHandler:
public override void GetCredentials
defaultCredentialForProtectionSpace:
public override NSUrlCredential GetDefaultCredential
getDefaultCredentialForProtectionSpace:task:completionHandler:
public override void GetDefaultCredential
removeCredential:forProtectionSpace:
public override void RemoveCredential
removeCredential:forProtectionSpace:options:
public override void RemoveCredential
removeCredential:forProtectionSpace:options:task:
public override void RemoveCredential
setCredential:forProtectionSpace:
public override void SetCredential
setCredential:forProtectionSpace:task:
public override void SetCredential
setDefaultCredential:forProtectionSpace:
public override void SetDefaultCredential
setDefaultCredential:forProtectionSpace:task:
public override void SetDefaultCredential
allCredentials
/* property */ public override NSDictionary get_AllCredentials
sharedCredentialStorage
/* property */ public NSUrlCredentialStorage get_SharedCredentialStorage
dataTaskWithRequest:
public override NSUrlSessionDataTask CreateDataTask
dataTaskWithURL:
public override NSUrlSessionDataTask CreateDataTask
dataTaskWithRequest:completionHandler:
public override NSUrlSessionDataTask CreateDataTask
dataTaskWithURL:completionHandler:
public override NSUrlSessionDataTask CreateDataTask
downloadTaskWithRequest:
public override NSUrlSessionDownloadTask CreateDownloadTask
downloadTaskWithURL:
public override NSUrlSessionDownloadTask CreateDownloadTask
downloadTaskWithResumeData:
public override NSUrlSessionDownloadTask CreateDownloadTask
downloadTaskWithRequest:completionHandler:
public override NSUrlSessionDownloadTask CreateDownloadTask
downloadTaskWithURL:completionHandler:
public override NSUrlSessionDownloadTask CreateDownloadTask
downloadTaskWithResumeData:completionHandler:
public override NSUrlSessionDownloadTask CreateDownloadTaskFromResumeData
uploadTaskWithRequest:fromFile:
public override NSUrlSessionUploadTask CreateUploadTask
uploadTaskWithRequest:fromData:
public override NSUrlSessionUploadTask CreateUploadTask
uploadTaskWithStreamedRequest:
public override NSUrlSessionUploadTask CreateUploadTask
uploadTaskWithRequest:fromFile:completionHandler:
public override NSUrlSessionUploadTask CreateUploadTask
uploadTaskWithRequest:fromData:completionHandler:
public override NSUrlSessionUploadTask CreateUploadTask
finishTasksAndInvalidate
public override void FinishTasksAndInvalidate
flushWithCompletionHandler:
public override void Flush
sessionWithConfiguration:
public NSUrlSession FromConfiguration
sessionWithConfiguration:delegate:delegateQueue:
public NSUrlSession FromWeakConfiguration
getTasksWithCompletionHandler:
public override void GetTasks
invalidateAndCancel
public override void InvalidateAndCancel
resetWithCompletionHandler:
public override void Reset
configuration
/* property */ public override WKWebViewConfiguration get_Configuration
sessionDescription
/* property */ public override string get_SessionDescription
setSessionDescription:
/* property */ public override void set_SessionDescription
sharedSession
/* property */ public NSUrlSession get_SharedSession
resume
public override void Resume
suspend
public override void Suspend
countOfBytesExpectedToReceive
/* property */ public override Int64 get_BytesExpectedToReceive
countOfBytesExpectedToSend
/* property */ public override Int64 get_BytesExpectedToSend
countOfBytesReceived
/* property */ public override Int64 get_BytesReceived
countOfBytesSent
/* property */ public override Int64 get_BytesSent
taskDescription
/* property */ public override string get_TaskDescription
setTaskDescription:
/* property */ public override void set_TaskDescription
taskIdentifier
/* property */ public override nuint get_TaskIdentifier
cancelByProducingResumeData:
public override void Cancel
backgroundSessionConfiguration:
public NSUrlSessionConfiguration BackgroundSessionConfiguration
backgroundSessionConfigurationWithIdentifier:
public NSUrlSessionConfiguration CreateBackgroundSessionConfiguration
connectionProxyDictionary
/* property */ public override NSDictionary get_ConnectionProxyDictionary
setConnectionProxyDictionary:
/* property */ public override void set_ConnectionProxyDictionary
defaultSessionConfiguration
/* property */ public NSUrlSessionConfiguration get_DefaultSessionConfiguration
isDiscretionary
/* property */ public override bool get_Discretionary
setDiscretionary:
/* property */ public override void set_Discretionary
ephemeralSessionConfiguration
/* property */ public NSUrlSessionConfiguration get_EphemeralSessionConfiguration
HTTPAdditionalHeaders
/* property */ public override NSDictionary get_HttpAdditionalHeaders
setHTTPAdditionalHeaders:
/* property */ public override void set_HttpAdditionalHeaders
HTTPCookieAcceptPolicy
/* property */ public override NSHttpCookieAcceptPolicy get_HttpCookieAcceptPolicy
setHTTPCookieAcceptPolicy:
/* property */ public override void set_HttpCookieAcceptPolicy
HTTPCookieStorage
/* property */ public override NSHttpCookieStorage get_HttpCookieStorage
setHTTPCookieStorage:
/* property */ public override void set_HttpCookieStorage
HTTPMaximumConnectionsPerHost
/* property */ public override nint get_HttpMaximumConnectionsPerHost
setHTTPMaximumConnectionsPerHost:
/* property */ public override void set_HttpMaximumConnectionsPerHost
HTTPShouldSetCookies
/* property */ public override bool get_HttpShouldSetCookies
setHTTPShouldSetCookies:
/* property */ public override void set_HttpShouldSetCookies
HTTPShouldUsePipelining
/* property */ public override bool get_HttpShouldUsePipelining
setHTTPShouldUsePipelining:
/* property */ public override void set_HttpShouldUsePipelining
requestCachePolicy
/* property */ public override NSUrlRequestCachePolicy get_RequestCachePolicy
setRequestCachePolicy:
/* property */ public override void set_RequestCachePolicy
sessionSendsLaunchEvents
/* property */ public override bool get_SessionSendsLaunchEvents
setSessionSendsLaunchEvents:
/* property */ public override void set_SessionSendsLaunchEvents
sharedContainerIdentifier
/* property */ public override string get_SharedContainerIdentifier
setSharedContainerIdentifier:
/* property */ public override void set_SharedContainerIdentifier
timeoutIntervalForRequest
/* property */ public override Double get_TimeoutIntervalForRequest
setTimeoutIntervalForRequest:
/* property */ public override void set_TimeoutIntervalForRequest
timeoutIntervalForResource
/* property */ public override Double get_TimeoutIntervalForResource
setTimeoutIntervalForResource:
/* property */ public override void set_TimeoutIntervalForResource
TLSMaximumSupportedProtocol
/* property */ public override SslProtocol get_TLSMaximumSupportedProtocol
setTLSMaximumSupportedProtocol:
/* property */ public override void set_TLSMaximumSupportedProtocol
TLSMinimumSupportedProtocol
/* property */ public override SslProtocol get_TLSMinimumSupportedProtocol
setTLSMinimumSupportedProtocol:
/* property */ public override void set_TLSMinimumSupportedProtocol
URLCache
/* property */ public override NSUrlCache get_URLCache
setURLCache:
/* property */ public override void set_URLCache
URLCredentialStorage
/* property */ public override NSUrlCredentialStorage get_URLCredentialStorage
setURLCredentialStorage:
/* property */ public override void set_URLCredentialStorage
protocolClasses
/* property */ public override NSArray get_WeakProtocolClasses
setProtocolClasses:
/* property */ public override void set_WeakProtocolClasses
URLSession:didBecomeInvalidWithError:
public override void DidBecomeInvalid
URLSessionDidFinishEventsForBackgroundURLSession:
public override void DidFinishEventsForBackgroundSession
URLSession:didReceiveChallenge:completionHandler:
public override void DidReceiveChallenge
URLSession:task:didCompleteWithError:
public override void DidCompleteWithError
URLSession:task:didReceiveChallenge:completionHandler:
public override void DidReceiveChallenge
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
public override void DidSendBodyData
URLSession:task:needNewBodyStream:
public override void NeedNewBodyStream
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
public override void WillPerformHttpRedirection
URLSession:dataTask:didBecomeDownloadTask:
public override void DidBecomeDownloadTask
URLSession:dataTask:didReceiveData:
public override void DidReceiveData
URLSession:dataTask:didReceiveResponse:completionHandler:
public override void DidReceiveResponse
URLSession:dataTask:willCacheResponse:completionHandler:
public override void WillCacheResponse
URLSession:downloadTask:didFinishDownloadingToURL:
public override void DidFinishDownloading
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
public override void DidResume
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
public override void DidWriteData
expectedContentLength
/* property */ public override Int64 get_ExpectedContentLength
MIMEType
/* property */ public override string get_MimeType
suggestedFilename
/* property */ public override string get_SuggestedFilename
textEncodingName
/* property */ public override string get_TextEncodingName
stream:handleEvent:
public override void HandleEvent
stringByAddingPercentEncodingWithAllowedCharacters:
public NSString CreateStringByAddingPercentEncoding
stringByAddingPercentEscapesUsingEncoding:
public NSString CreateStringByAddingPercentEscapes
stringByRemovingPercentEncoding
public NSString CreateStringByRemovingPercentEncoding
stringByReplacingPercentEscapesUsingEncoding:
public NSString CreateStringByReplacingPercentEscapes
actualScaleFactor
/* property */ public override nfloat get_ActualScaleFactor
actualTrackingAdjustment
/* property */ public override nfloat get_ActualTrackingAdjustment
minimumScaleFactor
/* property */ public override nfloat get_MinimumScaleFactor
setMinimumScaleFactor:
/* property */ public override void set_MinimumScaleFactor
minimumTrackingAdjustment
/* property */ public override nfloat get_MinimumTrackingAdjustment
setMinimumTrackingAdjustment:
/* property */ public override void set_MinimumTrackingAdjustment
totalBounds
/* property */ public override CGRect get_TotalBounds
retain
public override NSObject DangerousRetain
release
public override void DangerousRelease
autorelease
public override NSObject DangerousAutorelease
addDependency:
public override void AddDependency
removeDependency:
public override void RemoveDependency
waitUntilFinished
public override void WaitUntilFinishedNS
isAsynchronous
/* property */ public override bool get_Asynchronous
dependencies
/* property */ public override NSOperation[] get_Dependencies
isConcurrent
/* property */ public override bool get_IsConcurrent
isReady
/* property */ public override bool get_IsReady
queuePriority
/* property */ public override NSOperationQueuePriority get_QueuePriority
setQueuePriority:
/* property */ public override void set_QueuePriority
addExecutionBlock:
public override void AddExecutionBlock
blockOperationWithBlock:
public NSBlockOperation Create
executionBlocks
/* property */ public override NSObject[] get_ExecutionBlocks
addOperationWithBlock:
public override void AddOperation
addOperations:waitUntilFinished:
public override void AddOperations
cancelAllOperations
public override void CancelAllOperations
waitUntilAllOperationsAreFinished
public override void WaitUntilAllOperationsAreFinished
currentQueue
/* property */ public NSOperationQueue get_CurrentQueue
mainQueue
/* property */ public NSOperationQueue get_MainQueue
maxConcurrentOperationCount
/* property */ public override nint get_MaxConcurrentOperationCount
setMaxConcurrentOperationCount:
/* property */ public override void set_MaxConcurrentOperationCount
operationCount
/* property */ public override nint get_OperationCount
operations
/* property */ public override NSOperation[] get_Operations
isSuspended
/* property */ public override bool get_Suspended
setSuspended:
/* property */ public override void set_Suspended
underlyingQueue
/* property */ public override DispatchQueue get_UnderlyingQueue
setUnderlyingQueue:
/* property */ public override void set_UnderlyingQueue
dominantLanguageForScript:
public override string DominantLanguageForScript
languagesForScript:
public override string[] LanguagesForScript
allLanguages
/* property */ public override string[] get_AllLanguages
allScripts
/* property */ public override string[] get_AllScripts
dominantLanguage
/* property */ public override string get_DominantLanguage
dominantScript
/* property */ public override string get_DominantScript
languageMap
/* property */ public override NSDictionary get_LanguageMap
localizedStringForStatusCode:
public string LocalizedStringForStatusCode
allHeaderFields
/* property */ public override NSDictionary get_AllHeaderFields
statusCode
/* property */ public override nint get_StatusCode
containsIndex:
public override bool Contains
containsIndexes:
public override bool Contains
enumerateIndexesUsingBlock:
public override void EnumerateIndexes
enumerateIndexesWithOptions:usingBlock:
public override void EnumerateIndexes
enumerateIndexesInRange:options:usingBlock:
public override void EnumerateIndexes
enumerateRangesUsingBlock:
public override void EnumerateRanges
enumerateRangesWithOptions:usingBlock:
public override void EnumerateRanges
enumerateRangesInRange:options:usingBlock:
public override void EnumerateRanges
indexSetWithIndex:
public NSIndexSet FromIndex
indexSetWithIndexesInRange:
public NSIndexSet FromNSRange
indexGreaterThanIndex:
public override nuint IndexGreaterThan
indexGreaterThanOrEqualToIndex:
public override nuint IndexGreaterThanOrEqual
indexLessThanIndex:
public override nuint IndexLessThan
indexLessThanOrEqualToIndex:
public override nuint IndexLessThanOrEqual
isEqualToIndexSet:
public override bool IsEqual
firstIndex
/* property */ public override nuint get_FirstIndex
lastIndex
/* property */ public override nuint get_LastIndex
getArgument:atIndex:
override void _GetArgument
getReturnValue:
override void _GetReturnValue
setArgument:atIndex:
override void _SetArgument
setReturnValue:
override void _SetReturnValue
invoke
public override void Invoke
invokeWithTarget:
public override void Invoke
methodSignature
/* property */ public override NSMethodSignature get_MethodSignature
hasItemConformingToTypeIdentifier:
public override bool HasItemConformingTo
loadItemForTypeIdentifier:options:completionHandler:
public override void LoadItem
loadPreviewImageWithOptions:completionHandler:
public override void LoadPreviewImage
registerItemForTypeIdentifier:loadHandler:
public override void RegisterItemForTypeIdentifier
setPreviewImageHandler:
public override void SetPreviewImageHandler
registeredTypeIdentifiers
/* property */ public override string[] get_RegisteredTypeIdentifiers
signatureWithObjCTypes:
public NSMethodSignature FromObjcTypes
getArgumentTypeAtIndex:
public override IntPtr GetArgumentType
isOneway
/* property */ public override bool get_IsOneway
methodReturnLength
/* property */ public override nuint get_MethodReturnLength
methodReturnType
/* property */ public override IntPtr get_MethodReturnType
numberOfArguments
/* property */ public override nuint get_NumberOfArguments
addIndexes:
public override void Add
addIndex:
public override void Add
addIndexesInRange:
public override void AddIndexesInRange
removeAllIndexes
public override void Clear
removeIndexes:
public override void Remove
removeIndex:
public override void Remove
removeIndexesInRange:
public override void RemoveIndexesInRange
shiftIndexesStartingAtIndex:by:
public override void ShiftIndexes
netServiceDidResolveAddress:
public override void AddressResolved
netService:didAcceptConnectionWithInputStream:outputStream:
public override void DidAcceptConnection
netServiceDidPublish:
public override void Published
netService:didNotPublish:
public override void PublishFailure
netService:didNotResolve:
public override void ResolveFailure
netServiceDidStop:
public override void Stopped
netService:didUpdateTXTRecordData:
public override void UpdatedTxtRecordData
netServiceWillPublish:
public override void WillPublish
netServiceWillResolve:
public override void WillResolve
searchForBrowsableDomains
public override void SearchForBrowsableDomains
searchForRegistrationDomains
public override void SearchForRegistrationDomains
searchForServicesOfType:inDomain:
public override void SearchForServices
netServiceBrowser:didRemoveDomain:moreComing:
public override void DomainRemoved
netServiceBrowser:didFindDomain:moreComing:
public override void FoundDomain
netServiceBrowser:didFindService:moreComing:
public override void FoundService
netServiceBrowser:didNotSearch:
public override void NotSearched
netServiceBrowserWillSearch:
public override void SearchStarted
netServiceBrowserDidStopSearch:
public override void SearchStopped
netServiceBrowser:didRemoveService:moreComing:
public override void ServiceRemoved
notificationWithName:object:
public NSNotification FromName
notificationWithName:object:userInfo:
public NSNotification FromName
object
/* property */ public override NSObject get_Object
dequeueNotificationsMatching:coalesceMask:
public override void DequeueNotificationsMatchingcoalesceMask
enqueueNotification:postingStyle:
public override void EnqueueNotification
enqueueNotification:postingStyle:coalesceMask:forModes:
public override void EnqueueNotification
defaultQueue
/* property */ public SKPaymentQueue get_DefaultQueue
localizedStringFromNumber:numberStyle:
public string LocalizedStringFromNumbernumberStyle
numberFromString:
public override NSNumber NumberFromString
stringFromNumber:
public override string StringFromNumber
allowsFloats
/* property */ public override bool get_AllowsFloats
setAllowsFloats:
/* property */ public override void set_AllowsFloats
alwaysShowsDecimalSeparator
/* property */ public override bool get_AlwaysShowsDecimalSeparator
setAlwaysShowsDecimalSeparator:
/* property */ public override void set_AlwaysShowsDecimalSeparator
currencyCode
/* property */ public override string get_CurrencyCode
setCurrencyCode:
/* property */ public override void set_CurrencyCode
currencyDecimalSeparator
/* property */ public override string get_CurrencyDecimalSeparator
setCurrencyDecimalSeparator:
/* property */ public override void set_CurrencyDecimalSeparator
currencyGroupingSeparator
/* property */ public override string get_CurrencyGroupingSeparator
setCurrencyGroupingSeparator:
/* property */ public override void set_CurrencyGroupingSeparator
currencySymbol
/* property */ public override string get_CurrencySymbol
setCurrencySymbol:
/* property */ public override void set_CurrencySymbol
decimalSeparator
/* property */ public override string get_DecimalSeparator
setDecimalSeparator:
/* property */ public override void set_DecimalSeparator
exponentSymbol
/* property */ public override string get_ExponentSymbol
setExponentSymbol:
/* property */ public override void set_ExponentSymbol
formatWidth
/* property */ public override nuint get_FormatWidth
setFormatWidth:
/* property */ public override void set_FormatWidth
generatesDecimalNumbers
/* property */ public override bool get_GeneratesDecimalNumbers
setGeneratesDecimalNumbers:
/* property */ public override void set_GeneratesDecimalNumbers
groupingSeparator
/* property */ public override string get_GroupingSeparator
setGroupingSeparator:
/* property */ public override void set_GroupingSeparator
groupingSize
/* property */ public override nuint get_GroupingSize
setGroupingSize:
/* property */ public override void set_GroupingSize
internationalCurrencySymbol
/* property */ public override string get_InternationalCurrencySymbol
setInternationalCurrencySymbol:
/* property */ public override void set_InternationalCurrencySymbol
maximum
/* property */ public override NSNumber get_Maximum
setMaximum:
/* property */ public override void set_Maximum
maximumFractionDigits
/* property */ public override nint get_MaximumFractionDigits
setMaximumFractionDigits:
/* property */ public override void set_MaximumFractionDigits
maximumIntegerDigits
/* property */ public override nint get_MaximumIntegerDigits
setMaximumIntegerDigits:
/* property */ public override void set_MaximumIntegerDigits
maximumSignificantDigits
/* property */ public override nuint get_MaximumSignificantDigits
setMaximumSignificantDigits:
/* property */ public override void set_MaximumSignificantDigits
minimum
/* property */ public override NSNumber get_Minimum
setMinimum:
/* property */ public override void set_Minimum
minimumFractionDigits
/* property */ public override nint get_MinimumFractionDigits
setMinimumFractionDigits:
/* property */ public override void set_MinimumFractionDigits
minimumIntegerDigits
/* property */ public override nint get_MinimumIntegerDigits
setMinimumIntegerDigits:
/* property */ public override void set_MinimumIntegerDigits
minimumSignificantDigits
/* property */ public override nuint get_MinimumSignificantDigits
setMinimumSignificantDigits:
/* property */ public override void set_MinimumSignificantDigits
minusSign
/* property */ public override string get_MinusSign
setMinusSign:
/* property */ public override void set_MinusSign
setMultiplier:
/* property */ public override void set_Multiplier
negativeFormat
/* property */ public override string get_NegativeFormat
setNegativeFormat:
/* property */ public override void set_NegativeFormat
negativeInfinitySymbol
/* property */ public override string get_NegativeInfinitySymbol
setNegativeInfinitySymbol:
/* property */ public override void set_NegativeInfinitySymbol
negativePrefix
/* property */ public override string get_NegativePrefix
setNegativePrefix:
/* property */ public override void set_NegativePrefix
negativeSuffix
/* property */ public override string get_NegativeSuffix
setNegativeSuffix:
/* property */ public override void set_NegativeSuffix
nilSymbol
/* property */ public override string get_NilSymbol
setNilSymbol:
/* property */ public override void set_NilSymbol
notANumberSymbol
/* property */ public override string get_NotANumberSymbol
setNotANumberSymbol:
/* property */ public override void set_NotANumberSymbol
numberStyle
/* property */ public override NSNumberFormatterStyle get_NumberStyle
setNumberStyle:
/* property */ public override void set_NumberStyle
paddingCharacter
/* property */ public override string get_PaddingCharacter
setPaddingCharacter:
/* property */ public override void set_PaddingCharacter
paddingPosition
/* property */ public override NSNumberFormatterPadPosition get_PaddingPosition
setPaddingPosition:
/* property */ public override void set_PaddingPosition
isPartialStringValidationEnabled
/* property */ public override bool get_PartialStringValidationEnabled
setPartialStringValidationEnabled:
/* property */ public override void set_PartialStringValidationEnabled
percentSymbol
/* property */ public override string get_PercentSymbol
setPercentSymbol:
/* property */ public override void set_PercentSymbol
perMillSymbol
/* property */ public override string get_PerMillSymbol
setPerMillSymbol:
/* property */ public override void set_PerMillSymbol
plusSign
/* property */ public override string get_PlusSign
setPlusSign:
/* property */ public override void set_PlusSign
positiveFormat
/* property */ public override string get_PositiveFormat
setPositiveFormat:
/* property */ public override void set_PositiveFormat
positiveInfinitySymbol
/* property */ public override string get_PositiveInfinitySymbol
setPositiveInfinitySymbol:
/* property */ public override void set_PositiveInfinitySymbol
positivePrefix
/* property */ public override string get_PositivePrefix
setPositivePrefix:
/* property */ public override void set_PositivePrefix
positiveSuffix
/* property */ public override string get_PositiveSuffix
setPositiveSuffix:
/* property */ public override void set_PositiveSuffix
roundingIncrement
/* property */ public override NSNumber get_RoundingIncrement
setRoundingIncrement:
/* property */ public override void set_RoundingIncrement
roundingMode
/* property */ public override NSNumberFormatterRoundingMode get_RoundingMode
setRoundingMode:
/* property */ public override void set_RoundingMode
secondaryGroupingSize
/* property */ public override nuint get_SecondaryGroupingSize
setSecondaryGroupingSize:
/* property */ public override void set_SecondaryGroupingSize
textAttributesForNegativeInfinity
/* property */ public override NSDictionary get_TextAttributesForNegativeInfinity
setTextAttributesForNegativeInfinity:
/* property */ public override void set_TextAttributesForNegativeInfinity
textAttributesForNegativeValues
/* property */ public override NSDictionary get_TextAttributesForNegativeValues
setTextAttributesForNegativeValues:
/* property */ public override void set_TextAttributesForNegativeValues
textAttributesForNil
/* property */ public override NSDictionary get_TextAttributesForNil
setTextAttributesForNil:
/* property */ public override void set_TextAttributesForNil
textAttributesForNotANumber
/* property */ public override NSDictionary get_TextAttributesForNotANumber
setTextAttributesForNotANumber:
/* property */ public override void set_TextAttributesForNotANumber
textAttributesForPositiveInfinity
/* property */ public override NSDictionary get_TextAttributesForPositiveInfinity
setTextAttributesForPositiveInfinity:
/* property */ public override void set_TextAttributesForPositiveInfinity
textAttributesForPositiveValues
/* property */ public override NSDictionary get_TextAttributesForPositiveValues
setTextAttributesForPositiveValues:
/* property */ public override void set_TextAttributesForPositiveValues
textAttributesForZero
/* property */ public override NSDictionary get_TextAttributesForZero
setTextAttributesForZero:
/* property */ public override void set_TextAttributesForZero
usesGroupingSeparator
/* property */ public override bool get_UsesGroupingSeparator
setUsesGroupingSeparator:
/* property */ public override void set_UsesGroupingSeparator
usesSignificantDigits
/* property */ public override bool get_UsesSignificantDigits
setUsesSignificantDigits:
/* property */ public override void set_UsesSignificantDigits
zeroSymbol
/* property */ public override string get_ZeroSymbol
setZeroSymbol:
/* property */ public override void set_ZeroSymbol
decimalNumberByAdding:
public override NSDecimalNumber Add
decimalNumberByAdding:withBehavior:
public override NSDecimalNumber Add
decimalNumberByDividingBy:
public override NSDecimalNumber Divide
decimalNumberByDividingBy:withBehavior:
public override NSDecimalNumber Divide
decimalNumberByMultiplyingBy:
public override NSDecimalNumber Multiply
decimalNumberByMultiplyingBy:withBehavior:
public override NSDecimalNumber Multiply
decimalNumberByMultiplyingByPowerOf10:
public override NSDecimalNumber MultiplyPowerOf10
decimalNumberByMultiplyingByPowerOf10:withBehavior:
public override NSDecimalNumber MultiplyPowerOf10
decimalNumberByRaisingToPower:
public override NSDecimalNumber RaiseTo
decimalNumberByRaisingToPower:withBehavior:
public override NSDecimalNumber RaiseTo
decimalNumberByRoundingAccordingToBehavior:
public override NSDecimalNumber Rounding
decimalNumberBySubtracting:
public override NSDecimalNumber Subtract
decimalNumberBySubtracting:withBehavior:
public override NSDecimalNumber Subtract
defaultBehavior
/* property */ public NSObject get_DefaultBehavior
setDefaultBehavior:
/* property */ public void set_DefaultBehavior
maximumDecimalNumber
/* property */ public NSDecimalNumber get_MaxValue
minimumDecimalNumber
/* property */ public NSDecimalNumber get_MinValue
notANumber
/* property */ public NSDecimalNumber get_NaN
one
/* property */ public NSDecimalNumber get_One
zero
/* property */ public NSDecimalNumber get_Zero
sendBeforeDate:components:from:reserved:
public override bool SendBeforeDate
sendBeforeDate:msgid:components:from:reserved:
public override bool SendBeforeDate
handlePortMessage:
public override void MessageReceived
portWithMachPort:
public NSPort FromMachPort
portWithMachPort:options:
public NSPort FromMachPort
machPort
/* property */ public override UInt32 get_MachPort
handleMachMessage:
public override void MachMessageReceived
beginActivityWithOptions:reason:
public override NSObject BeginActivity
endActivity:
public override void EndActivity
isOperatingSystemAtLeastVersion:
public override bool IsOperatingSystemAtLeastVersion
performActivityWithOptions:reason:usingBlock:
public override void PerformActivity
performExpiringActivityWithReason:usingBlock:
public override void PerformExpiringActivity
activeProcessorCount
/* property */ public override nint get_ActiveProcessorCount
environment
/* property */ public override NSDictionary get_Environment
globallyUniqueString
/* property */ public override string get_GloballyUniqueString
operatingSystem
/* property */ public override nint get_OperatingSystem
operatingSystemName
/* property */ public override string get_OperatingSystemName
operatingSystemVersion
/* property */ public override NSOperatingSystemVersion get_OperatingSystemVersion
operatingSystemVersionString
/* property */ public override string get_OperatingSystemVersionString
physicalMemory
/* property */ public override UInt64 get_PhysicalMemory
processIdentifier
/* property */ public override int get_ProcessIdentifier
processInfo
/* property */ public NSProcessInfo get_ProcessInfo
processName
/* property */ public override string get_ProcessName
setProcessName:
/* property */ public override void set_ProcessName
processorCount
/* property */ public override nint get_ProcessorCount
systemUptime
/* property */ public override Double get_SystemUptime
becomeCurrentWithPendingUnitCount:
public override void BecomeCurrent
progressWithTotalUnitCount:
public NSProgress FromTotalUnitCount
resignCurrent
public override void ResignCurrent
setCancellationHandler:
public override void SetCancellationHandler
setPausingHandler:
public override void SetPauseHandler
setUserInfoObject:forKey:
public override void SetUserInfo
isCancellable
/* property */ public override bool get_Cancellable
setCancellable:
/* property */ public override void set_Cancellable
completedUnitCount
/* property */ public override Int64 get_CompletedUnitCount
setCompletedUnitCount:
/* property */ public override void set_CompletedUnitCount
currentProgress
/* property */ public NSProgress get_CurrentProgress
fractionCompleted
/* property */ public override Double get_FractionCompleted
isIndeterminate
/* property */ public override bool get_Indeterminate
kind
/* property */ public override NSString get_Kind
setKind:
/* property */ public override void set_Kind
localizedAdditionalDescription
/* property */ public override string get_LocalizedAdditionalDescription
setLocalizedAdditionalDescription:
/* property */ public override void set_LocalizedAdditionalDescription
setLocalizedDescription:
/* property */ public override void set_LocalizedDescription
isPausable
/* property */ public override bool get_Pausable
setPausable:
/* property */ public override void set_Pausable
totalUnitCount
/* property */ public override Int64 get_TotalUnitCount
setTotalUnitCount:
/* property */ public override void set_TotalUnitCount
beginContentAccess
public override bool BeginContentAccess
discardContentIfPossible
public override void DiscardContentIfPossible
endContentAccess
public override void EndContentAccess
isContentDiscarded
/* property */ public override bool get_IsContentDiscarded
addFilePresenter:
public void AddFilePresenter
coordinateAccessWithIntents:queue:byAccessor:
public override void CoordinateAccess
prepareForReadingItemsAtURLs:options:writingItemsAtURLs:options:error:byAccessor:
public override void CoordinateBatc
coordinateReadingItemAtURL:options:error:byAccessor:
public override void CoordinateRead
coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:
public override void CoordinateReadWrite
coordinateWritingItemAtURL:options:error:byAccessor:
public override void CoordinateWrite
coordinateWritingItemAtURL:options:writingItemAtURL:options:error:byAccessor:
public override void CoordinateWriteWrite
itemAtURL:didMoveToURL:
public override void ItemMoved
removeFilePresenter:
public void RemoveFilePresenter
itemAtURL:willMoveToURL:
public override void WillMove
filePresenters
/* property */ public INSFilePresenter[] get_FilePresenters
purposeIdentifier
/* property */ public override string get_PurposeIdentifier
setPurposeIdentifier:
/* property */ public override void set_PurposeIdentifier
readingIntentWithURL:options:
public NSFileAccessIntent CreateReadingIntent
writingIntentWithURL:options:
public NSFileAccessIntent CreateWritingIntent
fileManager:shouldCopyItemAtPath:toPath:
public override bool ShouldCopyItemAtPath
fileManager:shouldCopyItemAtURL:toURL:
public override bool ShouldCopyItemAtUrl
fileManager:shouldLinkItemAtPath:toPath:
public override bool ShouldLinkItemAtPath
fileManager:shouldLinkItemAtURL:toURL:
public override bool ShouldLinkItemAtUrl
fileManager:shouldMoveItemAtPath:toPath:
public override bool ShouldMoveItemAtPath
fileManager:shouldMoveItemAtURL:toURL:
public override bool ShouldMoveItemAtUrl
fileManager:shouldProceedAfterError:
public override bool ShouldProceedAfterError
fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:
public override bool ShouldProceedAfterErrorCopyingItem
fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:
public override bool ShouldProceedAfterErrorCopyingItem
fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:
public override bool ShouldProceedAfterErrorLinkingItem
fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:
public override bool ShouldProceedAfterErrorLinkingItem
fileManager:shouldProceedAfterError:movingItemAtURL:toURL:
public override bool ShouldProceedAfterErrorMovingItem
fileManager:shouldProceedAfterError:movingItemAtPath:toPath:
public override bool ShouldProceedAfterErrorMovingItem
fileManager:shouldProceedAfterError:removingItemAtURL:
public override bool ShouldProceedAfterErrorRemovingItem
fileManager:shouldProceedAfterError:removingItemAtPath:
public override bool ShouldProceedAfterErrorRemovingItem
fileManager:shouldRemoveItemAtPath:
public override bool ShouldRemoveItemAtPath
fileManager:shouldRemoveItemAtURL:
public override bool ShouldRemoveItemAtUrl
presentedItemURL
/* property */ public override NSUrl get_PresentedItemURL
presentedItemOperationQueue
/* property */ public override NSOperationQueue get_PesentedItemOperationQueue
accommodatePresentedItemDeletionWithCompletionHandler:
public override void AccommodatePresentedItemDeletion
accommodatePresentedSubitemDeletionAtURL:completionHandler:
public override void AccommodatePresentedSubitemDeletion
presentedItemDidChange
public override void PresentedItemChanged
presentedItemDidGainVersion:
public override void PresentedItemGainedVersion
presentedItemDidLoseVersion:
public override void PresentedItemLostVersion
presentedItemDidMoveToURL:
public override void PresentedItemMoved
presentedItemDidResolveConflictVersion:
public override void PresentedItemResolveConflictVersion
presentedSubitemDidAppearAtURL:
public override void PresentedSubitemAppeared
presentedSubitemDidChangeAtURL:
public override void PresentedSubitemChanged
presentedSubitemAtURL:didGainVersion:
public override void PresentedSubitemGainedVersion
presentedSubitemAtURL:didLoseVersion:
public override void PresentedSubitemLostVersion
presentedSubitemAtURL:didMoveToURL:
public override void PresentedSubitemMoved
presentedSubitemAtURL:didResolveConflictVersion:
public override void PresentedSubitemResolvedConflictVersion
relinquishPresentedItemToReader:
public override void RelinquishPresentedItemToReader
relinquishPresentedItemToWriter:
public override void RelinquishPresentedItemToWriter
savePresentedItemChangesWithCompletionHandler:
public override void SavePresentedItemChanges
currentVersionOfItemAtURL:
public NSFileVersion GetCurrentVersion
otherVersionsOfItemAtURL:
public NSFileVersion[] GetOtherVersions
versionOfItemAtURL:forPersistentIdentifier:
public NSFileVersion GetSpecificVersion
unresolvedConflictVersionsOfItemAtURL:
public NSFileVersion[] GetUnresolvedConflictVersions
removeAndReturnError:
public override bool Remove
removeOtherVersionsOfItemAtURL:error:
public bool RemoveOtherVersions
replaceItemAtURL:options:error:
public override NSUrl ReplaceItem
isConflict
/* property */ public override bool get_IsConflict
localizedNameOfSavingComputer
/* property */ public override string get_LocalizedNameOfSavingComputer
persistentIdentifier
/* property */ public override NSObject get_PersistentIdentifier
isResolved
/* property */ public override bool get_Resolved
setResolved:
/* property */ public override void set_Resolved
addFileWrapper:
public override string AddFileWrapper
addRegularFileWithContents:preferredFilename:
public override string AddRegularFile
regularFileContents
public override NSData GetRegularFileContents
serializedRepresentation
public override NSData GetSerializedRepresentation
keyForFileWrapper:
public override string KeyForFileWrapper
matchesContentsOfURL:
public override bool MatchesContentsOfURL
readFromURL:options:error:
public override bool Read
removeFileWrapper:
public override void RemoveFileWrapper
writeToURL:options:originalContentsURL:error:
public override bool Write
setFileAttributes:
/* property */ public override void set_FileAttributes
filename
/* property */ public override string get_Filename
setFilename:
/* property */ public override void set_Filename
fileWrappers
/* property */ public override NSDictionary get_FileWrappers
isDirectory
/* property */ public override bool get_IsDirectory
isRegularFile
/* property */ public override bool get_IsRegularFile
isSymbolicLink
/* property */ public override bool get_IsSymbolicLink
preferredFilename
/* property */ public override string get_PreferredFilename
setPreferredFilename:
/* property */ public override void set_PreferredFilename
symbolicLinkDestinationURL
/* property */ public override NSUrl get_SymbolicLinkDestinationURL
filteredOrderedSetUsingPredicate:
public NSOrderedSet FilterUsingPredicate
filterUsingPredicate:
public void FilterUsingPredicate
filteredSetUsingPredicate:
public NSSet FilterUsingPredicate
URLProtocol:wasRedirectedToRequest:redirectResponse:
public override void Redirected
URLProtocol:cachedResponseIsValid:
public override void CachedResponseIsValid
URLProtocol:didReceiveResponse:cacheStoragePolicy:
public override void ReceivedResponse
URLProtocol:didLoadData:
public override void DataLoaded
URLProtocolDidFinishLoading:
public override void FinishedLoading
URLProtocol:didFailWithError:
public override void FailedWithError
URLProtocol:didReceiveAuthenticationChallenge:
public override void ReceivedAuthenticationChallenge
URLProtocol:didCancelAuthenticationChallenge:
public override void CancelledAuthenticationChallenge
dataWithPropertyList:format:options:error:
public NSData DataWithPropertyList
propertyList:isValidForFormat:
public bool IsValidForFormat
propertyListWithData:options:format:error:
public NSObject PropertyListWithData
propertyListWithStream:options:format:error:
public NSObject PropertyListWithStream
writePropertyList:toStream:format:options:error:
public nint WritePropertyList
beginRequestWithExtensionContext:
public override void BeginRequestWithExtensionContext
addressCheckingResultWithRange:components:
public NSTextCheckingResult AddressCheckingResult
correctionCheckingResultWithRange:replacementString:
public NSTextCheckingResult CorrectionCheckingResult
correctionCheckingResultWithRange:replacementString:alternativeStrings:
public NSTextCheckingResult CorrectionCheckingResult
dashCheckingResultWithRange:replacementString:
public NSTextCheckingResult DashCheckingResult
dateCheckingResultWithRange:date:
public NSTextCheckingResult DateCheckingResult
dateCheckingResultWithRange:date:timeZone:duration:
public NSTextCheckingResult DateCheckingResult
grammarCheckingResultWithRange:details:
public NSTextCheckingResult GrammarCheckingResult
linkCheckingResultWithRange:URL:
public NSTextCheckingResult LinkCheckingResult
orthographyCheckingResultWithRange:orthography:
public NSTextCheckingResult OrthographyCheckingResult
phoneNumberCheckingResultWithRange:phoneNumber:
public NSTextCheckingResult PhoneNumberCheckingResult
quoteCheckingResultWithRange:replacementString:
public NSTextCheckingResult QuoteCheckingResult
rangeAtIndex:
public override NSRange RangeAtIndex
replacementCheckingResultWithRange:replacementString:
public NSTextCheckingResult ReplacementCheckingResult
resultByAdjustingRangesWithOffset:
public override NSTextCheckingResult ResultByAdjustingRanges
spellCheckingResultWithRange:
public NSTextCheckingResult SpellCheckingResult
transitInformationCheckingResultWithRange:components:
public NSTextCheckingResult TransitInformationCheckingResult
alternativeStrings
/* property */ public override string[] get_AlternativeStrings
grammarDetails
/* property */ public override string[] get_GrammarDetails
numberOfRanges
/* property */ public override nuint get_NumberOfRanges
orthography
/* property */ public override NSOrthography get_Orthography
range
/* property */ public override NSRange get_Range
replacementString
/* property */ public override string get_ReplacementString
addressComponents
/* property */ public override NSDictionary get_WeakAddressComponents
lockBeforeDate:
public override bool LockBeforeDate
lockWhenCondition:
public override void LockWhenCondition
lockWhenCondition:beforeDate:
public override bool LockWhenCondition
tryLockWhenCondition:
public override bool TryLockWhenCondition
unlockWithCondition:
public override void UnlockWithCondition
condition
/* property */ public override nint get_Condition
broadcast
public override void Broadcast
signal
public override void Signal
wait
public override void Wait
waitUntilDate:
public override bool WaitUntilDate
isAnalog
/* property */ public override bool get_IsAnalog
valueChangedHandler
/* property */ public override GCExtendedGamepadValueChangedHandler get_ValueChangedHandler
setValueChangedHandler:
public override void SetValueChangedHandler
setPressedChangedHandler:
public override void SetPressedChangedHandler
isPressed
/* property */ public override bool get_IsPressed
down
/* property */ public override GCControllerButtonInput get_Down
left
/* property */ public override GCControllerButtonInput get_Left
right
/* property */ public override GCControllerButtonInput get_Right
up
/* property */ public override GCControllerButtonInput get_Up
xAxis
/* property */ public override GCControllerAxisInput get_XAxis
yAxis
/* property */ public override GCControllerAxisInput get_YAxis
buttonA
/* property */ public override GCControllerButtonInput get_ButtonA
buttonB
/* property */ public override GCControllerButtonInput get_ButtonB
buttonX
/* property */ public override GCControllerButtonInput get_ButtonX
buttonY
/* property */ public override GCControllerButtonInput get_ButtonY
controller
/* property */ public override GCController get_Controller
dpad
/* property */ public override GCControllerDirectionPad get_DPad
leftShoulder
/* property */ public override GCControllerButtonInput get_LeftShoulder
rightShoulder
/* property */ public override GCControllerButtonInput get_RightShoulder
saveSnapshot
public override GCExtendedGamepadSnapshot SaveSnapshot
leftThumbstick
/* property */ public override GCControllerDirectionPad get_LeftThumbstick
leftTrigger
/* property */ public override GCControllerButtonInput get_LeftTrigger
rightThumbstick
/* property */ public override GCControllerDirectionPad get_RightThumbstick
rightTrigger
/* property */ public override GCControllerButtonInput get_RightTrigger
attitude
/* property */ public override CMAttitude get_Attitude
gravity
/* property */ public override CMAcceleration get_Gravity
rotationRate
/* property */ public override CMRotationRate get_RotationRate
userAcceleration
/* property */ public override CMAcceleration get_UserAcceleration
peerPickerController:didSelectConnectionType:
public override void ConnectionTypeSelected
peerPickerControllerDidCancel:
public override void ControllerCancelled
peerPickerController:sessionForConnectionType:
public override GKSession GetSession
peerPickerController:didConnectPeer:toSession:
public override void PeerConnected
dismiss
public override void Dismiss
connectionTypesMask
/* property */ public override GKPeerPickerConnectionType get_ConnectionTypesMask
setConnectionTypesMask:
/* property */ public override void set_ConnectionTypesMask
voiceChatService:sendData:toParticipantID:
public override void SendData
participantID
public override string ParticipantID
voiceChatService:didNotStartWithParticipantID:error:
public override void FailedToConnect
voiceChatService:didReceiveInvitationFromParticipantID:callID:
public override void ReceivedInvitation
voiceChatService:sendRealTimeData:toParticipantID:
public override void SendRealTimeData
voiceChatService:didStartWithParticipantID:
public override void Started
voiceChatService:didStopWithParticipantID:error:
public override void Stopped
acceptCallID:error:
public override bool AcceptCall
denyCallID:
public override void DenyCall
receivedData:fromParticipantID:
public override void ReceivedData
receivedRealTimeData:fromParticipantID:
public override void ReceivedRealTimeData
startVoiceChatWithParticipantID:error:
public override bool StartVoiceChat
stopVoiceChatWithParticipantID:
public override void StopVoiceChat
setClient:
/* property */ public override void set_Client
defaultVoiceChatService
/* property */ public GKVoiceChatService get_Default
isInputMeteringEnabled
/* property */ public override bool get_InputMeteringEnabled
setInputMeteringEnabled:
/* property */ public override void set_InputMeteringEnabled
inputMeterLevel
/* property */ public override Single get_InputMeterLevel
isVoIPAllowed
public bool IsVoIPAllowed
isMicrophoneMuted
/* property */ public override bool get_MicrophoneMuted
setMicrophoneMuted:
/* property */ public override void set_MicrophoneMuted
isOutputMeteringEnabled
/* property */ public override bool get_OutputMeteringEnabled
setOutputMeteringEnabled:
/* property */ public override void set_OutputMeteringEnabled
outputMeterLevel
/* property */ public override Single get_OutputMeterLevel
remoteParticipantVolume
/* property */ public override Single get_RemoteParticipantVolume
setRemoteParticipantVolume:
/* property */ public override void set_RemoteParticipantVolume
session:didFailWithError:
public override void FailedWithError
session:peer:didChangeState:
public override void DidChangeState
session:connectionWithPeerFailed:withError:
public override void PeerConnectionFailed
session:didReceiveConnectionRequestFromPeer:
public override void PeerConnectionRequest
loadCategoriesWithCompletionHandler:
public void LoadCategories
loadImageWithCompletionHandler:
public override void LoadImage
loadLeaderboardsWithCompletionHandler:
public override void LoadLeaderboards
loadScoresWithCompletionHandler:
public override void LoadScores
setDefaultLeaderboard:withCompletionHandler:
public void SetDefaultLeaderboard
groupIdentifier
/* property */ public override string get_GroupIdentifier
localPlayerScore
/* property */ public override GKScore get_LocalPlayerScore
maxRange
/* property */ public override nint get_MaxRange
playerScope
/* property */ public override GKLeaderboardPlayerScope get_PlayerScope
setPlayerScope:
/* property */ public override void set_PlayerScope
setRange:
/* property */ public override void set_Range
scores
/* property */ public override GKScore[] get_Scores
timeScope
/* property */ public override GKLeaderboardTimeScope get_TimeScope
setTimeScope:
/* property */ public override void set_TimeScope
loadLeaderboardSetsWithCompletionHandler:
public void LoadLeaderboardSets
loadPhotoForSize:withCompletionHandler:
public override void LoadPhoto
loadPlayersForIdentifiers:withCompletionHandler:
public void LoadPlayersForIdentifiers
alias
/* property */ public override string get_Alias
isFriend
/* property */ public override bool get_IsFriend
playerID
/* property */ public override string get_PlayerID
leaderboardViewControllerDidFinish:
public override void DidFinish
leaderboardDelegate
/* property */ public override NSObject get_WeakDelegate
setLeaderboardDelegate:
/* property */ public override void set_WeakDelegate
authenticateWithCompletionHandler:
public override void Authenticate
deleteSavedGamesWithName:completionHandler:
public override void DeleteSavedGames
fetchSavedGamesWithCompletionHandler:
public override void FetchSavedGames
generateIdentityVerificationSignatureWithCompletionHandler:
public override void GenerateIdentityVerificationSignature
loadDefaultLeaderboardCategoryIDWithCompletionHandler:
public override void LoadDefaultLeaderboardCategoryID
loadDefaultLeaderboardIdentifierWithCompletionHandler:
public override void LoadDefaultLeaderboardIdentifier
loadFriendPlayersWithCompletionHandler:
public override void LoadFriendPlayers
loadFriendsWithCompletionHandler:
public override void LoadFriends
registerListener:
public override void RegisterListener
resolveConflictingSavedGames:withData:completionHandler:
public override void ResolveConflictingSavedGames
saveGameData:withName:completionHandler:
public override void SaveGameData
setDefaultLeaderboardCategoryID:completionHandler:
public override void SetDefaultLeaderboardCategoryID
setDefaultLeaderboardIdentifier:completionHandler:
public override void SetDefaultLeaderboardIdentifier
unregisterAllListeners
public override void UnregisterAllListeners
unregisterListener:
public override void UnregisterListener
isAuthenticated
/* property */ public override bool get_Authenticated
authenticateHandler
/* property */ public override Action`2 get_AuthenticateHandler
setAuthenticateHandler:
/* property */ public override void set_AuthenticateHandler
friends
/* property */ public override string[] get_Friends
isUnderage
/* property */ public override bool get_IsUnderage
localPlayer
/* property */ public GKLocalPlayer get_LocalPlayer
loadDataWithCompletionHandler:
public override void LoadData
deviceName
/* property */ public override string get_DeviceName
player:didModifySavedGame:
public override void DidModifySavedGame
player:hasConflictingSavedGames:
public override void HasConflictingSavedGames
match:didReceiveData:fromPlayer:
public override void DataReceived
match:didReceiveData:fromRemotePlayer:
public override void DataReceivedFromPlayer
match:didFailWithError:
public override void Failed
match:shouldReinviteDisconnectedPlayer:
public override bool ShouldReinviteDisconnectedPlayer
match:shouldReinvitePlayer:
public override bool ShouldReinvitePlayer
match:player:didChangeState:
public override void StateChanged
match:player:didChangeConnectionState:
public override void StateChangedForPlayer
setMute:forPlayer:
public override void SetMute
setPlayer:muted:
public override void SetMuteStatus
setPlayerVoiceChatStateDidChangeHandler:
public override void SetPlayerVoiceChatStateChangeHandler
playerStateUpdateHandler
/* property */ public override GKPlayerStateUpdateHandler get_PlayerStateUpdateHandler
setPlayerStateUpdateHandler:
/* property */ public override void set_PlayerStateUpdateHandler
maxPlayersAllowedForMatchOfType:
public nint GetMaxPlayersAllowed
setRecipientResponseHandler:
public override void SetRecipientResponseHandler
defaultNumberOfPlayers
/* property */ public override nint get_DefaultNumberOfPlayers
setDefaultNumberOfPlayers:
/* property */ public override void set_DefaultNumberOfPlayers
inviteeResponseHandler
/* property */ public override Action`2 get_InviteeResponseHandler
setInviteeResponseHandler:
/* property */ public override void set_InviteeResponseHandler
inviteMessage
/* property */ public override string get_InviteMessage
setInviteMessage:
/* property */ public override void set_InviteMessage
maxPlayers
/* property */ public override nint get_MaxPlayers
setMaxPlayers:
/* property */ public override void set_MaxPlayers
minPlayers
/* property */ public override nint get_MinPlayers
setMinPlayers:
/* property */ public override void set_MinPlayers
playerAttributes
/* property */ public override UInt32 get_PlayerAttributes
setPlayerAttributes:
/* property */ public override void set_PlayerAttributes
playerGroup
/* property */ public override nint get_PlayerGroup
setPlayerGroup:
/* property */ public override void set_PlayerGroup
playersToInvite
/* property */ public override string[] get_PlayersToInvite
setPlayersToInvite:
/* property */ public override void set_PlayersToInvite
isHosted
/* property */ public override bool get_Hosted
inviter
/* property */ public override string get_Inviter
addPlayersToMatch:matchRequest:completionHandler:
public override void AddPlayers
cancelInviteToPlayer:
public override void CancelInvite
cancelPendingInviteToPlayer:
public override void CancelPendingInvite
findMatchForRequest:withCompletionHandler:
public void FindMatch
findPlayersForHostedMatchRequest:withCompletionHandler:
public override void FindPlayers
findPlayersForHostedRequest:withCompletionHandler:
public override void FindPlayersForHostedRequest
finishMatchmakingForMatch:
public override void FinishMatchmaking
matchForInvite:completionHandler:
public override void Match
queryActivityWithCompletionHandler:
public override void QueryActivity
queryPlayerGroupActivity:withCompletionHandler:
public override void QueryPlayerGroupActivity
setInviteHandler:
public override void SetInviteHandler
startBrowsingForNearbyPlayersWithReachableHandler:
public override void StartBrowsingForNearbyPlayers
startBrowsingForNearbyPlayersWithHandler:
public override void StartBrowsingForNearbyPlayers
stopBrowsingForNearbyPlayers
public override void StopBrowsingForNearbyPlayers
sharedMatchmaker
/* property */ public GKMatchmaker get_SharedMatchmaker
addPlayersToMatch:
public override void AddPlayersToMatch
setHostedPlayer:connected:
public override void SetHostedPlayerConnected
setHostedPlayer:didConnect:
public override void SetHostedPlayerConnected
setHostedPlayerReady:
public override void SetHostedPlayerReady
defaultInvitationMessage
/* property */ public override string get_DefaultInvitationMessage
setDefaultInvitationMessage:
/* property */ public override void set_DefaultInvitationMessage
setHosted:
/* property */ public override void set_Hosted
matchRequest
/* property */ public override GKMatchRequest get_MatchRequest
matchmakerDelegate
/* property */ public override NSObject get_WeakMatchmakerDelegate
setMatchmakerDelegate:
/* property */ public override void set_WeakMatchmakerDelegate
matchmakerViewControllerWasCancelled:
public override void WasCancelled
matchmakerViewController:didFailWithError:
public override void DidFailWithError
matchmakerViewController:didFindMatch:
public override void DidFindMatch
matchmakerViewController:didFindPlayers:
public override void DidFindPlayers
matchmakerViewController:didFindHostedPlayers:
public override void DidFindHostedPlayers
matchmakerViewController:hostedPlayerDidAccept:
public override void HostedPlayerDidAccept
matchmakerViewController:didReceiveAcceptFromHostedPlayer:
public override void ReceivedAcceptFromHostedPlayer
loadAchievementsWithCompletionHandler:
public void LoadAchievements
reportAchievementWithCompletionHandler:
public override void ReportAchievement
reportAchievements:withCompletionHandler:
public void ReportAchievements
reportAchievements:withEligibleChallenges:withCompletionHandler:
public void ReportAchievements
resetAchievementsWithCompletionHandler:
public void ResetAchivements
selectChallengeablePlayerIDs:withCompletionHandler:
public override void SelectChallengeablePlayerIDs
selectChallengeablePlayers:withCompletionHandler:
public override void SelectChallengeablePlayers
lastReportedDate
/* property */ public override NSDate get_LastReportedDate
percentComplete
/* property */ public override nfloat get_PercentComplete
setPercentComplete:
/* property */ public override void set_PercentComplete
showsCompletionBanner
/* property */ public override bool get_ShowsCompletionBanner
setShowsCompletionBanner:
/* property */ public override void set_ShowsCompletionBanner
loadAchievementDescriptionsWithCompletionHandler:
public void LoadAchievementDescriptions
achievedDescription
/* property */ public override string get_AchievedDescription
incompleteAchievementImage
/* property */ public UIImage get_IncompleteAchievementImage
maximumPoints
/* property */ public override nint get_MaximumPoints
placeholderCompletedAchievementImage
/* property */ public UIImage get_PlaceholderCompletedAchievementImage
isReplayable
/* property */ public override bool get_Replayable
unachievedDescription
/* property */ public override string get_UnachievedDescription
achievementViewControllerDidFinish:
public override void DidFinish
achievementDelegate
/* property */ public override NSObject get_WeakDelegate
setAchievementDelegate:
/* property */ public override void set_WeakDelegate
addRecipientPlayers:
public override void AddRecipientPlayers
addRecipientsWithEmailAddresses:
public override void AddRecipientsFromEmails
addRecipientsWithPlayerIDs:
public override void AddRecipientsFromPlayerIDs
maxNumberOfRecipients
/* property */ public nint get_MaxNumberOfRecipients
composeViewDelegate
/* property */ public override NSObject get_WeakComposeViewDelegate
setComposeViewDelegate:
/* property */ public override void set_WeakComposeViewDelegate
friendRequestComposeViewControllerDidFinish:
public override void DidFinish
showBannerWithTitle:message:completionHandler:
public void Show
showBannerWithTitle:message:duration:completionHandler:
public void Show
lastTurnDate
/* property */ public override NSDate get_LastTurnDate
matchOutcome
/* property */ public override GKTurnBasedMatchOutcome get_MatchOutcome
setMatchOutcome:
/* property */ public override void set_MatchOutcome
handleInviteFromGameCenter:
public override void HandleInviteFromGameCenter
handleTurnEventForMatch:didBecomeActive:
public override void HandleTurnEvent
handleMatchEnded:
public override void HandleMatchEnded
handleTurnEventForMatch:
public override void HandleTurnEventForMatch
sharedTurnBasedEventHandler
/* property */ public GKTurnBasedEventHandler get_SharedTurnBasedEventHandler
acceptInviteWithCompletionHandler:
public override void AcceptInvite
declineInviteWithCompletionHandler:
public override void DeclineInvite
endMatchInTurnWithMatchData:completionHandler:
public override void EndMatchInTurn
endMatchInTurnWithMatchData:scores:achievements:completionHandler:
public override void EndMatchInTurn
endTurnWithNextParticipants:turnTimeout:matchData:completionHandler:
public override void EndTurn
endTurnWithNextParticipant:matchData:completionHandler:
public override void EndTurnWithNextParticipant
loadMatchWithID:withCompletionHandler:
public void LoadMatch
loadMatchDataWithCompletionHandler:
public override void LoadMatchData
loadMatchesWithCompletionHandler:
public void LoadMatches
participantQuitInTurnWithOutcome:nextParticipant:matchData:completionHandler:
public override void ParticipantQuitInTurn
participantQuitInTurnWithOutcome:nextParticipants:turnTimeout:matchData:completionHandler:
public override void ParticipantQuitInTurn
participantQuitOutOfTurnWithOutcome:withCompletionHandler:
public override void ParticipantQuitOutOfTurn
removeWithCompletionHandler:
public override void Remove
saveCurrentTurnWithMatchData:completionHandler:
public override void SaveCurrentTurn
saveMergedMatchData:withResolvedExchanges:completionHandler:
public override void SaveMergedMatchData
sendExchangeToParticipants:data:localizableMessageKey:arguments:timeout:completionHandler:
public override void SendExchange
sendReminderToParticipants:localizableMessageKey:arguments:completionHandler:
public override void SendReminder
setLocalizableMessageWithKey:arguments:
public override void SetMessage
activeExchanges
/* property */ public override GKTurnBasedExchange[] get_ActiveExchanges
completedExchanges
/* property */ public override GKTurnBasedExchange[] get_CompletedExchanges
currentParticipant
/* property */ public override GKTurnBasedParticipant get_CurrentParticipant
exchangeMaxInitiatedExchangesPerPlayer
/* property */ public override nuint get_ExchangeMaxInitiatedExchangesPerPlayer
exchanges
/* property */ public override GKTurnBasedExchange[] get_Exchanges
exchangeDataMaximumSize
/* property */ public override nuint get_ExhangeDataMaximumSize
matchData
/* property */ public override NSData get_MatchData
matchDataMaximumSize
/* property */ public override nint get_MatchDataMaximumSize
matchID
/* property */ public override string get_MatchID
participants
/* property */ public override GKTurnBasedParticipant[] get_Participants
showExistingMatches
/* property */ public override bool get_ShowExistingMatches
setShowExistingMatches:
/* property */ public override void set_ShowExistingMatches
turnBasedMatchmakerDelegate
/* property */ public override NSObject get_WeakDelegate
setTurnBasedMatchmakerDelegate:
/* property */ public override void set_WeakDelegate
turnBasedMatchmakerViewControllerWasCancelled:
public override void WasCancelled
turnBasedMatchmakerViewController:didFailWithError:
public override void FailedWithError
turnBasedMatchmakerViewController:didFindMatch:
public override void FoundMatch
turnBasedMatchmakerViewController:playerQuitForMatch:
public override void PlayerQuitForMatch
score
/* property */ public override GKScore get_Score
achievement
/* property */ public override GKAchievement get_Achievement
leaderboardCategory
/* property */ public override string get_LeaderboardCategory
setLeaderboardCategory:
/* property */ public override void set_LeaderboardCategory
leaderboardTimeScope
/* property */ public override GKLeaderboardTimeScope get_LeaderboardTimeScope
setLeaderboardTimeScope:
/* property */ public override void set_LeaderboardTimeScope
viewState
/* property */ public override GKGameCenterViewControllerState get_ViewState
setViewState:
/* property */ public override void set_ViewState
gameCenterDelegate
/* property */ public override NSObject get_WeakDelegate
setGameCenterDelegate:
/* property */ public override void set_WeakDelegate
gameCenterViewControllerDidFinish:
public override void Finished
challengeEventHandler
/* property */ public GKChallengeEventHandler get_Instance
localPlayerDidCompleteChallenge:
public override void LocalPlayerCompletedChallenge
localPlayerDidReceiveChallenge:
public override void LocalPlayerReceivedChallenge
localPlayerDidSelectChallenge:
public override void LocalPlayerSelectedChallenge
remotePlayerDidCompleteChallenge:
public override void RemotePlayerCompletedChallenge
shouldShowBannerForLocallyCompletedChallenge:
public override bool ShouldShowBannerForLocallyCompletedChallenge
shouldShowBannerForLocallyReceivedChallenge:
public override bool ShouldShowBannerForLocallyReceivedChallenge
shouldShowBannerForRemotelyCompletedChallenge:
public override bool ShouldShowBannerForRemotelyCompletedChallenge
player:didAcceptInvite:
public override void DidAcceptInvite
player:didCompleteChallenge:issuedByFriend:
public override void DidCompleteChallenge
player:didReceiveChallenge:
public override void DidReceiveChallenge
player:didRequestMatchWithPlayers:
public override void DidRequestMatchWithPlayers
player:didRequestMatchWithRecipients:
public override void DidRequestMatch
player:didRequestMatchWithOtherPlayers:
public override void DidRequestMatchWithOtherPlayers
player:issuedChallengeWasCompleted:byFriend:
public override void IssuedChallengeWasCompleted
player:matchEnded:
public override void MatchEnded
player:receivedExchangeCancellation:forMatch:
public override void ReceivedExchangeCancellation
player:receivedExchangeReplies:forCompletedExchange:forMatch:
public override void ReceivedExchangeReplies
player:receivedExchangeRequest:forMatch:
public override void ReceivedExchangeRequest
player:receivedTurnEventForMatch:didBecomeActive:
public override void ReceivedTurnEvent
player:wantsToPlayChallenge:
public override void WantsToPlayChallenge
prepareToDraw
public override void PrepareToDraw
colorMaterialEnabled
/* property */ public override bool get_ColorMaterialEnabled
setColorMaterialEnabled:
/* property */ public override void set_ColorMaterialEnabled
constantColor
/* property */ public override Vector4 get_ConstantColor
setConstantColor:
/* property */ public override void set_ConstantColor
fog
/* property */ public override GLKEffectPropertyFog get_Fog
label
/* property */ public override string get_Label
setLabel:
/* property */ public override void set_Label
light0
/* property */ public override GLKEffectPropertyLight get_Light0
light1
/* property */ public override GLKEffectPropertyLight get_Light1
light2
/* property */ public override GLKEffectPropertyLight get_Light2
lightingType
/* property */ public override GLKLightingType get_LightingType
setLightingType:
/* property */ public override void set_LightingType
lightModelAmbientColor
/* property */ public override Vector4 get_LightModelAmbientColor
setLightModelAmbientColor:
/* property */ public override void set_LightModelAmbientColor
lightModelTwoSided
/* property */ public override bool get_LightModelTwoSided
setLightModelTwoSided:
/* property */ public override void set_LightModelTwoSided
material
public SCNMaterial Create
texture2d0
/* property */ public override GLKEffectPropertyTexture get_Texture2d0
texture2d1
/* property */ public override GLKEffectPropertyTexture get_Texture2d1
textureOrder
/* property */ public override GLKEffectPropertyTexture[] get_TextureOrder
setTextureOrder:
/* property */ public override void set_TextureOrder
useConstantColor
/* property */ public override bool get_UseConstantColor
setUseConstantColor:
/* property */ public override void set_UseConstantColor
density
/* property */ public override nfloat get_Density
setDensity:
/* property */ public override void set_Density
enabled
/* property */ public override bool get_Enabled
end
/* property */ public override UITextPosition get_End
setEnd:
/* property */ public override void set_End
setMode:
/* property */ public override void set_Mode
setStart:
/* property */ public override void set_Start
ambientColor
/* property */ public override UIColor get_AmbientColor
setAmbientColor:
/* property */ public override void set_AmbientColor
constantAttenuation
/* property */ public override Single get_ConstantAttenuation
setConstantAttenuation:
/* property */ public override void set_ConstantAttenuation
diffuseColor
/* property */ public override Vector4 get_DiffuseColor
setDiffuseColor:
/* property */ public override void set_DiffuseColor
linearAttenuation
/* property */ public override Single get_LinearAttenuation
setLinearAttenuation:
/* property */ public override void set_LinearAttenuation
quadraticAttenuation
/* property */ public override Single get_QuadraticAttenuation
setQuadraticAttenuation:
/* property */ public override void set_QuadraticAttenuation
specularColor
/* property */ public override Vector4 get_SpecularColor
setSpecularColor:
/* property */ public override void set_SpecularColor
spotCutoff
/* property */ public override Single get_SpotCutoff
setSpotCutoff:
/* property */ public override void set_SpotCutoff
spotDirection
/* property */ public override Vector3 get_SpotDirection
setSpotDirection:
/* property */ public override void set_SpotDirection
spotExponent
/* property */ public override Single get_SpotExponent
setSpotExponent:
/* property */ public override void set_SpotExponent
emissiveColor
/* property */ public override Vector4 get_EmissiveColor
setEmissiveColor:
/* property */ public override void set_EmissiveColor
shininess
/* property */ public override nfloat get_Shininess
setShininess:
/* property */ public override void set_Shininess
envMode
/* property */ public override GLKTextureEnvMode get_EnvMode
setEnvMode:
/* property */ public override void set_EnvMode
modelviewMatrix
/* property */ public override Matrix4 get_ModelViewMatrix
setModelviewMatrix:
/* property */ public override void set_ModelViewMatrix
normalMatrix
/* property */ public override Matrix3 get_NormalMatrix
projectionMatrix
/* property */ public override Matrix4 get_ProjectionMatrix
setProjectionMatrix:
/* property */ public override void set_ProjectionMatrix
setMatrix:
/* property */ public override void set_Matrix
textureCubeMap
/* property */ public override GLKEffectPropertyTexture get_TextureCubeMap
draw
public override void Draw
xSize
/* property */ public override Single get_XSize
setXSize:
/* property */ public override void set_XSize
ySize
/* property */ public override Single get_YSize
setYSize:
/* property */ public override void set_YSize
zSize
/* property */ public override Single get_ZSize
setZSize:
/* property */ public override void set_ZSize
alphaState
/* property */ public override GLKTextureInfoAlphaState get_AlphaState
containsMipmaps
/* property */ public override bool get_ContainsMipmaps
textureOrigin
/* property */ public override GLKTextureInfoOrigin get_TextureOrigin
bindDrawable
public override void BindDrawable
deleteDrawable
public override void DeleteDrawable
snapshot
public override UIImage Snapshot
drawableColorFormat
/* property */ public override GLKViewDrawableColorFormat get_DrawableColorFormat
setDrawableColorFormat:
/* property */ public override void set_DrawableColorFormat
drawableDepthFormat
/* property */ public override GLKViewDrawableDepthFormat get_DrawableDepthFormat
setDrawableDepthFormat:
/* property */ public override void set_DrawableDepthFormat
drawableHeight
/* property */ public override nint get_DrawableHeight
drawableMultisample
/* property */ public override GLKViewDrawableMultisample get_DrawableMultisample
setDrawableMultisample:
/* property */ public override void set_DrawableMultisample
drawableStencilFormat
/* property */ public override GLKViewDrawableStencilFormat get_DrawableStencilFormat
setDrawableStencilFormat:
/* property */ public override void set_DrawableStencilFormat
drawableWidth
/* property */ public override nint get_DrawableWidth
enableSetNeedsDisplay
/* property */ public override bool get_EnableSetNeedsDisplay
setEnableSetNeedsDisplay:
/* property */ public override void set_EnableSetNeedsDisplay
glkView:drawInRect:
public override void DrawInRect
update
public override void Update
framesDisplayed
/* property */ public override nint get_FramesDisplayed
framesPerSecond
/* property */ public override nint get_FramesPerSecond
pauseOnWillResignActive
/* property */ public override bool get_PauseOnWillResignActive
setPauseOnWillResignActive:
/* property */ public override void set_PauseOnWillResignActive
preferredFramesPerSecond
/* property */ public override nint get_PreferredFramesPerSecond
setPreferredFramesPerSecond:
/* property */ public override void set_PreferredFramesPerSecond
resumeOnDidBecomeActive
/* property */ public override bool get_ResumeOnDidBecomeActive
setResumeOnDidBecomeActive:
/* property */ public override void set_ResumeOnDidBecomeActive
timeSinceFirstResume
/* property */ public override Double get_TimeSinceFirstResume
timeSinceLastDraw
/* property */ public override Double get_TimeSinceLastDraw
timeSinceLastResume
/* property */ public override Double get_TimeSinceLastResume
timeSinceLastUpdate
/* property */ public override Double get_TimeSinceLastUpdate
glkViewControllerUpdate:
public override void Update
glkViewController:willPause:
public override void WillPause
managedValueWithValue:
public JSManagedValue Get
managedValueWithValue:andOwner:
public JSManagedValue Get
addManagedReference:withOwner:
public override void AddManagedReference
removeManagedReference:withOwner:
public override void RemoveManagedReference
canEvaluatePolicy:error:
public override bool CanEvaluatePolicy
evaluatePolicy:localizedReason:reply:
public override void EvaluatePolicy
localizedFallbackTitle
/* property */ public override string get_LocalizedFallbackTitle
setLocalizedFallbackTitle:
/* property */ public override void set_LocalizedFallbackTitle
maxBiometryFailures
/* property */ public override NSNumber get_MaxBiometryFailures
setMaxBiometryFailures:
/* property */ public override void set_MaxBiometryFailures
setCoordinate:
/* property */ public override void set_Coordinate
subtitle
/* property */ public override string get_Subtitle
setDragState:animated:
public override void SetDragState
calloutOffset
/* property */ public override CGPoint get_CalloutOffset
setCalloutOffset:
/* property */ public override void set_CalloutOffset
canShowCallout
/* property */ public override bool get_CanShowCallout
setCanShowCallout:
/* property */ public override void set_CanShowCallout
centerOffset
/* property */ public override CGPoint get_CenterOffset
setCenterOffset:
/* property */ public override void set_CenterOffset
isDraggable
/* property */ public override bool get_Draggable
setDraggable:
/* property */ public override void set_Draggable
dragState
/* property */ public override MKAnnotationViewDragState get_DragState
setDragState:
/* property */ public override void set_DragState
leftCalloutAccessoryView
/* property */ public override UIView get_LeftCalloutAccessoryView
setLeftCalloutAccessoryView:
/* property */ public override void set_LeftCalloutAccessoryView
rightCalloutAccessoryView
/* property */ public override UIView get_RightCalloutAccessoryView
setRightCalloutAccessoryView:
/* property */ public override void set_RightCalloutAccessoryView
circle
/* property */ public override MKCircle get_Circle
isDirectionsRequestURL:
public bool IsDirectionsRequestUrl
setArrivalDate:
/* property */ public override void set_ArrivalDate
setDepartureDate:
/* property */ public override void set_DepartureDate
destination
/* property */ public override MKMapItem get_Destination
setDestination:
/* property */ public override void set_Destination
requestsAlternateRoutes
/* property */ public override bool get_RequestsAlternateRoutes
setRequestsAlternateRoutes:
/* property */ public override void set_RequestsAlternateRoutes
transportType
/* property */ public override MKDirectionsTransportType get_TransportType
setTransportType:
/* property */ public override void set_TransportType
addAnnotation:
public override void AddAnnotation
addAnnotations:
public override void AddAnnotations
addOverlay:
public override void AddOverlay
addOverlay:level:
public override void AddOverlay
addOverlays:
public override void AddOverlays
addOverlays:level:
public override void AddOverlays
convertCoordinate:toPointToView:
public override CGPoint ConvertCoordinate
convertPoint:toCoordinateFromView:
public override CLLocationCoordinate2D ConvertPoint
convertRect:toRegionFromView:
public override MKCoordinateRegion ConvertRect
convertRegion:toRectToView:
public override CGRect ConvertRegion
dequeueReusableAnnotationViewWithIdentifier:
public override MKAnnotationView DequeueReusableAnnotation
deselectAnnotation:animated:
public override void DeselectAnnotation
exchangeOverlay:withOverlay:
public override void ExchangeOverlay
exchangeOverlayAtIndex:withOverlayAtIndex:
public override void ExchangeOverlays
annotationsInMapRect:
public override NSSet GetAnnotations
insertOverlay:atIndex:
public override void InsertOverlay
insertOverlay:atIndex:level:
public override void InsertOverlay
insertOverlay:aboveOverlay:
public override void InsertOverlayAbove
insertOverlay:belowOverlay:
public override void InsertOverlayBelow
mapRectThatFits:
public override MKMapRect MapRectThatFits
mapRectThatFits:edgePadding:
public override MKMapRect MapRectThatFits
overlaysInLevel:
public override IMKOverlay[] OverlaysInLevel
regionThatFits:
public override MKCoordinateRegion RegionThatFits
removeAnnotation:
public override void RemoveAnnotation
removeAnnotations:
public override void RemoveAnnotations
removeOverlay:
public override void RemoveOverlay
removeOverlays:
public override void RemoveOverlays
rendererForOverlay:
public override MKOverlayRenderer RendererForOverlay
selectAnnotation:animated:
public override void SelectAnnotation
setCamera:animated:
public override void SetCamera
setCenterCoordinate:animated:
public override void SetCenterCoordinate
setRegion:animated:
public override void SetRegion
setUserTrackingMode:animated:
public override void SetUserTrackingMode
setVisibleMapRect:edgePadding:animated:
public override void SetVisibleMapRect
setVisibleMapRect:animated:
public override void SetVisibleMapRect
showAnnotations:animated:
public override void ShowAnnotations
viewForAnnotation:
public override MKAnnotationView ViewForAnnotation
viewForOverlay:
public override MKOverlayView ViewForOverlay
annotations
/* property */ public override IMKAnnotation[] get_Annotations
annotationVisibleRect
/* property */ public override CGRect get_AnnotationVisibleRect
centerCoordinate
/* property */ public override CLLocationCoordinate2D get_CenterCoordinate
setCenterCoordinate:
/* property */ public override void set_CenterCoordinate
mapType
/* property */ public override MKMapType get_MapType
setMapType:
/* property */ public override void set_MapType
overlays
/* property */ public override IMKOverlay[] get_Overlays
isPitchEnabled
/* property */ public override bool get_PitchEnabled
setPitchEnabled:
/* property */ public override void set_PitchEnabled
isRotateEnabled
/* property */ public override bool get_RotateEnabled
setRotateEnabled:
/* property */ public override void set_RotateEnabled
isScrollEnabled
/* property */ public override bool get_ScrollEnabled
setScrollEnabled:
/* property */ public override void set_ScrollEnabled
selectedAnnotations
/* property */ public override IMKAnnotation[] get_SelectedAnnotations
setSelectedAnnotations:
/* property */ public override void set_SelectedAnnotations
showsBuildings
/* property */ public override bool get_ShowsBuildings
setShowsBuildings:
/* property */ public override void set_ShowsBuildings
showsPointsOfInterest
/* property */ public override bool get_ShowsPointsOfInterest
setShowsPointsOfInterest:
/* property */ public override void set_ShowsPointsOfInterest
showsUserLocation
/* property */ public override bool get_ShowsUserLocation
setShowsUserLocation:
/* property */ public override void set_ShowsUserLocation
userLocation
/* property */ public override MKUserLocation get_UserLocation
isUserLocationVisible
/* property */ public override bool get_UserLocationVisible
userTrackingMode
/* property */ public override MKUserTrackingMode get_UserTrackingMode
setUserTrackingMode:
/* property */ public override void set_UserTrackingMode
visibleMapRect
/* property */ public override MKMapRect get_VisibleMapRect
setVisibleMapRect:
public override void SetVisible
isZoomEnabled
/* property */ public override bool get_ZoomEnabled
setZoomEnabled:
/* property */ public override void set_ZoomEnabled
mapView:annotationView:calloutAccessoryControlTapped:
public override void CalloutAccessoryControlTapped
mapView:annotationView:didChangeDragState:fromOldState:
public override void ChangedDragState
mapView:didAddAnnotationViews:
public override void DidAddAnnotationViews
mapView:didAddOverlayRenderers:
public override void DidAddOverlayRenderers
mapView:didAddOverlayViews:
public override void DidAddOverlayViews
mapView:didChangeUserTrackingMode:animated:
public override void DidChangeUserTrackingMode
mapView:didDeselectAnnotationView:
public override void DidDeselectAnnotationView
mapView:didFailToLocateUserWithError:
public override void DidFailToLocateUser
mapViewDidFinishRenderingMap:fullyRendered:
public override void DidFinishRenderingMap
mapView:didSelectAnnotationView:
public override void DidSelectAnnotationView
mapViewDidStopLocatingUser:
public override void DidStopLocatingUser
mapView:didUpdateUserLocation:
public override void DidUpdateUserLocation
mapView:viewForAnnotation:
public override MKAnnotationView GetViewForAnnotation
mapView:viewForOverlay:
public override MKOverlayView GetViewForOverlay
mapViewDidFailLoadingMap:withError:
public override void LoadingMapFailed
mapViewDidFinishLoadingMap:
public override void MapLoaded
mapView:rendererForOverlay:
public override MKOverlayRenderer OverlayRenderer
mapView:regionDidChangeAnimated:
public override void RegionChanged
mapView:regionWillChangeAnimated:
public override void RegionWillChange
mapViewWillStartLoadingMap:
public override void WillStartLoadingMap
mapViewWillStartLocatingUser:
public override void WillStartLocatingUser
mapViewWillStartRenderingMap:
public override void WillStartRenderingMap
animatesDrop
/* property */ public override bool get_AnimatesDrop
setAnimatesDrop:
/* property */ public override void set_AnimatesDrop
pinColor
/* property */ public override MKPinAnnotationColor get_PinColor
setPinColor:
/* property */ public override void set_PinColor
countryCode
/* property */ public override string get_CountryCode
isQuerying
/* property */ public override bool get_Querying
reverseGeocoder:didFailWithError:
public override void FailedWithError
reverseGeocoder:didFindPlacemark:
public override void FoundWithPlacemark
applyFillPropertiesToContext:atZoomScale:
public override void ApplyFillPropertiesToContext
applyStrokePropertiesToContext:atZoomScale:
public override void ApplyStrokePropertiesToContext
createPath
public override void CreatePath
fillPath:inContext:
public override void FillPath
invalidatePath
public override void InvalidatePath
strokePath:inContext:
public override void StrokePath
setSubtitle:
/* property */ public override void set_Subtitle
polygon
/* property */ public override MKPolygon get_Polygon
polyline
/* property */ public override MKPolyline get_Polyline
isUpdating
/* property */ public override bool get_Updating
mapView
/* property */ public override MKMapView get_MapView
setMapView:
/* property */ public override void set_MapView
naturalLanguageQuery
/* property */ public override string get_NaturalLanguageQuery
setNaturalLanguageQuery:
/* property */ public override void set_NaturalLanguageQuery
mapItems
/* property */ public override MKMapItem[] get_MapItems
boundingRegion
/* property */ public override MKCoordinateRegion get_Region
calculateDirectionsWithCompletionHandler:
public override void CalculateDirections
calculateETAWithCompletionHandler:
public override void CalculateETA
isCalculating
/* property */ public override bool get_Calculating
expectedTravelTime
/* property */ public override Double get_ExpectedTravelTime
routes
/* property */ public override MKRoute[] get_Routes
advisoryNotices
/* property */ public override string[] get_AdvisoryNotices
distance
/* property */ public override NSNumber get_Distance
steps
/* property */ public override MKRouteStep[] get_Steps
notice
/* property */ public override string get_Notice
distanceFromString:
public override Double DistanceFromString
stringFromDistance:
public override string StringFromDistance
setUnits:
/* property */ public override void set_Units
cameraLookingAtCenterCoordinate:fromEyeCoordinate:eyeAltitude:
public MKMapCamera CameraLookingAtCenterCoordinate
setAltitude:
/* property */ public override void set_Altitude
setHeading:
/* property */ public override void set_Heading
pointForCoordinate:
public override CGPoint PointForCoordinate
mapRect
/* property */ public override MKMapRect get_MapRect
setMapRect:
/* property */ public override void set_MapRect
startWithQueue:completionHandler:
public override void Start
isLoading
/* property */ public override bool get_IsLoading
loadTileAtPath:result:
public override void LoadTileAtPath
URLForTilePath:
public override NSUrl URLForTilePath
setCanReplaceMapContent:
/* property */ public override void set_CanReplaceMapContent
maximumZ
/* property */ public override nint get_MaximumZ
setMaximumZ:
/* property */ public override void set_MaximumZ
minimumZ
/* property */ public override nint get_MinimumZ
setMinimumZ:
/* property */ public override void set_MinimumZ
URLTemplate
/* property */ public override string get_URLTemplate
loadFromPreferencesWithCompletionHandler:
public override void LoadFromPreferences
removeFromPreferencesWithCompletionHandler:
public override void RemoveFromPreferences
saveToPreferencesWithCompletionHandler:
public override void SaveToPreferences
isOnDemandEnabled
/* property */ public override bool get_OnDemandEnabled
setOnDemandEnabled:
/* property */ public override void set_OnDemandEnabled
onDemandRules
/* property */ public override NEOnDemandRule[] get_OnDemandRules
setOnDemandRules:
/* property */ public override void set_OnDemandRules
setProtocol:
/* property */ public override void set_Protocol
sharedManager
/* property */ public ASIdentifierManager get_SharedManager
startVPNTunnelAndReturnError:
public override bool StartVpnTunnel
stopVPNTunnel
public override void StopVpnTunnel
disconnectOnSleep
/* property */ public override bool get_DisconnectOnSleep
setDisconnectOnSleep:
/* property */ public override void set_DisconnectOnSleep
identityData
/* property */ public override NSData get_IdentityData
setIdentityData:
/* property */ public override void set_IdentityData
identityDataPassword
/* property */ public override string get_IdentityDataPassword
setIdentityDataPassword:
/* property */ public override void set_IdentityDataPassword
passwordReference
/* property */ public override NSData get_PasswordReference
setPasswordReference:
/* property */ public override void set_PasswordReference
setServerAddress:
/* property */ public override void set_ServerAddress
setAuthenticationMethod:
/* property */ public override void set_AuthenticationMethod
localIdentifier
/* property */ public override string get_LocalIdentifier
setLocalIdentifier:
/* property */ public override void set_LocalIdentifier
remoteIdentifier
/* property */ public override string get_RemoteIdentifier
setRemoteIdentifier:
/* property */ public override void set_RemoteIdentifier
sharedSecretReference
/* property */ public override NSData get_SharedSecretReference
setSharedSecretReference:
/* property */ public override void set_SharedSecretReference
useExtendedAuthentication
/* property */ public override bool get_UseExtendedAuthentication
setUseExtendedAuthentication:
/* property */ public override void set_UseExtendedAuthentication
diffieHellmanGroup
/* property */ public override NEVpnIke2DiffieHellman get_DiffieHellmanGroup
setDiffieHellmanGroup:
/* property */ public override void set_DiffieHellmanGroup
encryptionAlgorithm
/* property */ public override NEVpnIke2EncryptionAlgorithm get_EncryptionAlgorithm
setEncryptionAlgorithm:
/* property */ public override void set_EncryptionAlgorithm
integrityAlgorithm
/* property */ public override NEVpnIke2IntegrityAlgorithm get_IntegrityAlgorithm
setIntegrityAlgorithm:
/* property */ public override void set_IntegrityAlgorithm
lifetimeMinutes
/* property */ public override int get_LifetimeMinutes
setLifetimeMinutes:
/* property */ public override void set_LifetimeMinutes
certificateType
/* property */ public override NEVpnIke2CertificateType get_CertificateType
setCertificateType:
/* property */ public override void set_CertificateType
childSecurityAssociationParameters
/* property */ public override NEVpnIke2SecurityAssociationParameters get_ChildSecurityAssociationParameters
deadPeerDetectionRate
/* property */ public override NEVpnIke2DeadPeerDetectionRate get_DeadPeerDetectionRate
setDeadPeerDetectionRate:
/* property */ public override void set_DeadPeerDetectionRate
IKESecurityAssociationParameters
/* property */ public override NEVpnIke2SecurityAssociationParameters get_IKESecurityAssociationParameters
serverCertificateCommonName
/* property */ public override string get_ServerCertificateCommonName
setServerCertificateCommonName:
/* property */ public override void set_ServerCertificateCommonName
serverCertificateIssuerCommonName
/* property */ public override string get_ServerCertificateIssuerCommonName
setServerCertificateIssuerCommonName:
/* property */ public override void set_ServerCertificateIssuerCommonName
DNSSearchDomainMatch
/* property */ public override string[] get_DnsSearchDomainMatch
setDNSSearchDomainMatch:
/* property */ public override void set_DnsSearchDomainMatch
DNSServerAddressMatch
/* property */ public override string[] get_DnsServerAddressMatch
setDNSServerAddressMatch:
/* property */ public override void set_DnsServerAddressMatch
interfaceTypeMatch
/* property */ public override NEOnDemandRuleInterfaceType get_InterfaceTypeMatch
setInterfaceTypeMatch:
/* property */ public override void set_InterfaceTypeMatch
probeURL
/* property */ public override NSUrl get_ProbeUrl
setProbeURL:
/* property */ public override void set_ProbeUrl
SSIDMatch
/* property */ public override string[] get_SsidMatch
setSSIDMatch:
/* property */ public override void set_SsidMatch
connectionRules
/* property */ public override NEEvaluateConnectionRule[] get_ConnectionRules
setConnectionRules:
/* property */ public override void set_ConnectionRules
matchDomains
/* property */ public override string[] get_MatchDomains
useDNSServers
/* property */ public override string[] get_UseDnsServers
setUseDNSServers:
/* property */ public override void set_UseDnsServers
canPreviewItem:
public bool CanPreviewItem
refreshCurrentPreviewItem
public override void RefreshCurrentPreviewItem
currentPreviewItem
/* property */ public override IQLPreviewItem get_CurrentPreviewItem
currentPreviewItemIndex
/* property */ public override nint get_CurrentPreviewItemIndex
setCurrentPreviewItemIndex:
/* property */ public override void set_CurrentPreviewItemIndex
numberOfPreviewItemsInPreviewController:
public override nint PreviewItemCount
previewController:previewItemAtIndex:
public override IQLPreviewItem GetPreviewItem
previewControllerDidDismiss:
public override void DidDismiss
previewController:frameForPreviewItem:inSourceView:
public override CGRect FrameForPreviewItem
previewController:shouldOpenURL:forPreviewItem:
public override bool ShouldOpenUrl
previewController:transitionImageForPreviewItem:contentRect:
public override UIImage TransitionImageForPreviewItem
previewControllerWillDismiss:
public override void WillDismiss
previewItemURL
/* property */ public override NSUrl get_ItemUrl
previewItemTitle
/* property */ public override string get_ItemTitle
boxWithWidth:height:length:chamferRadius:
public SCNBox Create
chamferSegmentCount
/* property */ public override nint get_ChamferSegmentCount
setChamferSegmentCount:
/* property */ public override void set_ChamferSegmentCount
setHeight:
public override void SetHeight
heightSegmentCount
/* property */ public override nint get_HeightSegmentCount
setHeightSegmentCount:
/* property */ public override void set_HeightSegmentCount
lengthSegmentCount
/* property */ public override nint get_LengthSegmentCount
setLengthSegmentCount:
/* property */ public override void set_LengthSegmentCount
widthSegmentCount
/* property */ public override nint get_WidthSegmentCount
setWidthSegmentCount:
/* property */ public override void set_WidthSegmentCount
aperture
/* property */ public override nfloat get_Aperture
setAperture:
/* property */ public override void set_Aperture
automaticallyAdjustsZRange
/* property */ public override bool get_AutomaticallyAdjustsZRange
setAutomaticallyAdjustsZRange:
/* property */ public override void set_AutomaticallyAdjustsZRange
focalBlurRadius
/* property */ public override nfloat get_FocalBlurRadius
setFocalBlurRadius:
/* property */ public override void set_FocalBlurRadius
focalDistance
/* property */ public override nfloat get_FocalDistance
setFocalDistance:
/* property */ public override void set_FocalDistance
focalSize
/* property */ public override nfloat get_FocalSize
setFocalSize:
/* property */ public override void set_FocalSize
orthographicScale
/* property */ public override nfloat get_OrthographicScale
setOrthographicScale:
/* property */ public override void set_OrthographicScale
projectionTransform
/* property */ public override SCNMatrix4 get_ProjectionTransform
setProjectionTransform:
/* property */ public override void set_ProjectionTransform
technique
/* property */ public override SCNTechnique get_Technique
setTechnique:
/* property */ public override void set_Technique
usesOrthographicProjection
/* property */ public override bool get_UsesOrthographicProjection
setUsesOrthographicProjection:
/* property */ public override void set_UsesOrthographicProjection
xFov
/* property */ public override Double get_XFov
setXFov:
/* property */ public override void set_XFov
yFov
/* property */ public override Double get_YFov
setYFov:
/* property */ public override void set_YFov
zFar
/* property */ public override nfloat get_ZFar
setZFar:
/* property */ public override void set_ZFar
zNear
/* property */ public override nfloat get_ZNear
setZNear:
/* property */ public override void set_ZNear
capsuleWithCapRadius:height:
public SCNCapsule Create
capRadius
/* property */ public override nfloat get_CapRadius
setCapRadius:
/* property */ public override void set_CapRadius
capSegmentCount
/* property */ public override nint get_CapSegmentCount
setCapSegmentCount:
/* property */ public override void set_CapSegmentCount
radialSegmentCount
/* property */ public override nint get_RadialSegmentCount
setRadialSegmentCount:
/* property */ public override void set_RadialSegmentCount
coneWithTopRadius:bottomRadius:height:
public SCNCone Create
bottomRadius
/* property */ public override nfloat get_BottomRadius
setBottomRadius:
/* property */ public override void set_BottomRadius
topRadius
/* property */ public override nfloat get_TopRadius
setTopRadius:
/* property */ public override void set_TopRadius
cylinderWithRadius:height:
public SCNCylinder Create
reflectionFalloffEnd
/* property */ public override nfloat get_ReflectionFalloffEnd
setReflectionFalloffEnd:
/* property */ public override void set_ReflectionFalloffEnd
reflectionFalloffStart
/* property */ public override nfloat get_ReflectionFalloffStart
setReflectionFalloffStart:
/* property */ public override void set_ReflectionFalloffStart
reflectionResolutionScaleFactor
/* property */ public override nfloat get_ReflectionResolutionScaleFactor
setReflectionResolutionScaleFactor:
/* property */ public override void set_ReflectionResolutionScaleFactor
reflectivity
/* property */ public override nfloat get_Reflectivity
setReflectivity:
/* property */ public override void set_Reflectivity
geometryElementWithData:primitiveType:primitiveCount:bytesPerIndex:
public SCNGeometryElement FromData
bytesPerIndex
/* property */ public override nint get_BytesPerIndex
primitiveCount
/* property */ public override nint get_PrimitiveCount
primitiveType
/* property */ public override SCNGeometryPrimitiveType get_PrimitiveType
textureCoordinatesWithMappingChannel:
public override CGPoint GetTextureCoordinatesWithMappingChannel
faceIndex
/* property */ public override nint get_FaceIndex
geometryIndex
/* property */ public override nint get_GeometryIndex
localCoordinates
/* property */ public override SCNVector3 get_LocalCoordinates
localNormal
/* property */ public override SCNVector3 get_LocalNormal
modelTransform
/* property */ public override SCNMatrix4 get_ModelTransform
worldCoordinates
/* property */ public override SCNVector3 get_WorldCoordinates
worldNormal
/* property */ public override SCNVector3 get_WorldNormal
attenuationEndDistance
/* property */ public override nfloat get_AttenuationEndDistance
setAttenuationEndDistance:
/* property */ public override void set_AttenuationEndDistance
attenuationFalloffExponent
/* property */ public override nfloat get_AttenuationFalloffExponent
setAttenuationFalloffExponent:
/* property */ public override void set_AttenuationFalloffExponent
attenuationStartDistance
/* property */ public override nfloat get_AttenuationStartDistance
setAttenuationStartDistance:
/* property */ public override void set_AttenuationStartDistance
gobo
/* property */ public override SCNMaterialProperty get_Gobo
shadowBias
/* property */ public override nfloat get_ShadowBias
setShadowBias:
/* property */ public override void set_ShadowBias
shadowMapSize
/* property */ public override CGSize get_ShadowMapSize
setShadowMapSize:
/* property */ public override void set_ShadowMapSize
shadowMode
/* property */ public override SCNShadowMode get_ShadowMode
setShadowMode:
/* property */ public override void set_ShadowMode
shadowSampleCount
/* property */ public override nuint get_ShadowSampleCount
setShadowSampleCount:
/* property */ public override void set_ShadowSampleCount
spotInnerAngle
/* property */ public override nfloat get_SpotInnerAngle
setSpotInnerAngle:
/* property */ public override void set_SpotInnerAngle
spotOuterAngle
/* property */ public override nfloat get_SpotOuterAngle
setSpotOuterAngle:
/* property */ public override void set_SpotOuterAngle
ambient
/* property */ public override SCNMaterialProperty get_Ambient
cullMode
/* property */ public override SCNCullMode get_CullMode
setCullMode:
public override void SetCullMode
diffuse
/* property */ public override SCNMaterialProperty get_Diffuse
emission
/* property */ public override SCNMaterialProperty get_Emission
lightingModelName
/* property */ public override NSString get_LightingModelName
setLightingModelName:
/* property */ public override void set_LightingModelName
isLitPerPixel
/* property */ public override bool get_LitPerPixel
setLitPerPixel:
/* property */ public override void set_LitPerPixel
locksAmbientWithDiffuse
/* property */ public override bool get_LocksAmbientWithDiffuse
setLocksAmbientWithDiffuse:
/* property */ public override void set_LocksAmbientWithDiffuse
multiply
/* property */ public override SCNMaterialProperty get_Multiply
normal
/* property */ public override SCNMaterialProperty get_Normal
readsFromDepthBuffer
/* property */ public override bool get_ReadsFromDepthBuffer
setReadsFromDepthBuffer:
/* property */ public override void set_ReadsFromDepthBuffer
reflective
/* property */ public override SCNMaterialProperty get_Reflective
specular
/* property */ public override SCNMaterialProperty get_Specular
transparency
/* property */ public override nfloat get_Transparency
setTransparency:
/* property */ public override void set_Transparency
transparencyMode
/* property */ public override SCNTransparencyMode get_TransparencyMode
setTransparencyMode:
/* property */ public override void set_TransparencyMode
transparent
/* property */ public override SCNMaterialProperty get_Transparent
writesToDepthBuffer
/* property */ public override bool get_WritesToDepthBuffer
setWritesToDepthBuffer:
/* property */ public override void set_WritesToDepthBuffer
materialPropertyWithContents:
public SCNMaterialProperty Create
contentsTransform
/* property */ public override SCNMatrix4 get_ContentsTransform
setContentsTransform:
/* property */ public override void set_ContentsTransform
intensity
/* property */ public override nfloat get_Intensity
setIntensity:
/* property */ public override void set_Intensity
mappingChannel
/* property */ public override nint get_MappingChannel
setMappingChannel:
/* property */ public override void set_MappingChannel
maxAnisotropy
/* property */ public override nuint get_MaxAnisotropy
setMaxAnisotropy:
/* property */ public override void set_MaxAnisotropy
mipFilter
/* property */ public override MTLSamplerMipFilter get_MipFilter
setMipFilter:
/* property */ public override void set_MipFilter
wrapS
/* property */ public override SCNWrapMode get_WrapS
setWrapS:
/* property */ public override void set_WrapS
wrapT
/* property */ public override SCNWrapMode get_WrapT
setWrapT:
/* property */ public override void set_WrapT
renderNode:renderer:arguments:
public override void Render
planeWithWidth:height:
public SCNPlane Create
cornerSegmentCount
/* property */ public override nint get_CornerSegmentCount
setCornerSegmentCount:
/* property */ public override void set_CornerSegmentCount
semanticForSymbol:
public override NSString GetSemanticForSymbol
setSemantic:forSymbol:options:
public override void SetSemantic
fragmentShader
/* property */ public override string get_FragmentShader
setFragmentShader:
/* property */ public override void set_FragmentShader
vertexShader
/* property */ public override string get_VertexShader
setVertexShader:
/* property */ public override void set_VertexShader
program:handleError:
public override void HandleError
pyramidWithWidth:height:length:
public SCNPyramid Create
rendererWithContext:options:
public SCNRenderer FromContext
hitTest:options:
public override SCNHitTestResult[] HitTest
isNodeInsideFrustum:withPointOfView:
public override bool IsNodeInsideFrustum
prepareObject:shouldAbortBlock:
public override bool Prepare
prepareObjects:withCompletionHandler:
public override void Prepare
projectPoint:
public override Vector3 ProjectPoint
render
public override void Render
renderAtTime:
public override void Render
unprojectPoint:
public override Vector3 UnprojectPoint
autoenablesDefaultLighting
/* property */ public override bool get_AutoenablesDefaultLighting
setAutoenablesDefaultLighting:
/* property */ public override void set_AutoenablesDefaultLighting
isJitteringEnabled
/* property */ public override bool get_JitteringEnabled
setJitteringEnabled:
/* property */ public override void set_JitteringEnabled
nextFrameTime
/* property */ public override Double get_NextFrameTimeInSeconds
overlaySKScene
/* property */ public override SKScene get_OverlayScene
setOverlaySKScene:
/* property */ public override void set_OverlayScene
setPlaying:
/* property */ public override void set_Playing
pointOfView
/* property */ public override SCNNode get_PointOfView
setPointOfView:
/* property */ public override void set_PointOfView
setScene:
/* property */ public override void set_Scene
sceneTime
/* property */ public override Double get_SceneTime
setSceneTime:
/* property */ public override void set_SceneTime
showsStatistics
/* property */ public override bool get_ShowsStatistics
setShowsStatistics:
/* property */ public override void set_ShowsStatistics
writeImage:withSceneDocumentURL:originalImageURL:
public override NSUrl WriteImage
renderer:didApplyAnimationsAtTime:
public override void DidApplyAnimations
renderer:didRenderScene:atTime:
public override void DidRenderScene
renderer:didSimulatePhysicsAtTime:
public override void DidSimulatePhysics
renderer:updateAtTime:
public override void Update
renderer:willRenderScene:atTime:
public override void WillRenderScene
sphereWithRadius:
public SCNSphere Create
isGeodesic
/* property */ public override bool get_Geodesic
setGeodesic:
/* property */ public override void set_Geodesic
segmentCount
/* property */ public override nint get_SegmentCount
setSegmentCount:
/* property */ public override void set_SegmentCount
torusWithRingRadius:pipeRadius:
public SCNTorus Create
pipeRadius
/* property */ public override nfloat get_PipeRadius
setPipeRadius:
/* property */ public override void set_PipeRadius
pipeSegmentCount
/* property */ public override nint get_PipeSegmentCount
setPipeSegmentCount:
/* property */ public override void set_PipeSegmentCount
ringRadius
/* property */ public override nfloat get_RingRadius
setRingRadius:
/* property */ public override void set_RingRadius
ringSegmentCount
/* property */ public override nint get_RingSegmentCount
setRingSegmentCount:
/* property */ public override void set_RingSegmentCount
tubeWithInnerRadius:outerRadius:height:
public SCNTube Create
innerRadius
/* property */ public override nfloat get_InnerRadius
setInnerRadius:
/* property */ public override void set_InnerRadius
outerRadius
/* property */ public override nfloat get_OuterRadius
setOuterRadius:
/* property */ public override void set_OuterRadius
pause:
public override void Pause
stop:
public override void Stop
allowsCameraControl
/* property */ public override bool get_AllowsCameraControl
setAllowsCameraControl:
/* property */ public override void set_AllowsCameraControl
antialiasingMode
/* property */ public override SCNAntialiasingMode get_AntialiasingMode
setAntialiasingMode:
/* property */ public override void set_AntialiasingMode
eaglContext
/* property */ public override EAGLContext get_EAGLContext
setEaglContext:
/* property */ public override void set_EAGLContext
animationEventWithKeyTime:block:
public SCNAnimationEvent Create
shapeWithPath:extrusionDepth:
public SCNShape Create
chamferMode
/* property */ public override SCNChamferMode get_ChamferMode
setChamferMode:
/* property */ public override void set_ChamferMode
weightForTargetAtIndex:
public override nfloat GetWeight
setWeight:forTargetAtIndex:
public override void SetWeight
targets
/* property */ public override SCNGeometry[] get_Targets
setTargets:
/* property */ public override void set_Targets
influenceFactor
/* property */ public override nfloat get_InfluenceFactor
setInfluenceFactor:
/* property */ public override void set_InfluenceFactor
inverseKinematicsConstraintWithChainRootNode:
public SCNIKConstraint Create
maxAllowedRotationAngleForJoint:
public override nfloat GetMaxAllowedRotationAngle
setMaxAllowedRotationAngle:forJoint:
public override void SetMaxAllowedRotationAnglet
chainRootNode
/* property */ public override SCNNode get_ChainRootNode
targetPosition
/* property */ public override SCNVector3 get_TargetPosition
setTargetPosition:
/* property */ public override void set_TargetPosition
lookAtConstraintWithTarget:
public SCNLookAtConstraint Create
gimbalLockEnabled
/* property */ public override bool get_GimbalLockEnabled
setGimbalLockEnabled:
/* property */ public override void set_GimbalLockEnabled
transformConstraintInWorldSpace:withBlock:
public SCNTransformConstraint Create
levelOfDetailWithGeometry:screenSpaceRadius:
public SCNLevelOfDetail CreateWithScreenSpaceRadius
levelOfDetailWithGeometry:worldSpaceDistance:
public SCNLevelOfDetail CreateWithWorldSpaceDistance
screenSpaceRadius
/* property */ public override nfloat get_ScreenSpaceRadius
worldSpaceDistance
/* property */ public override nfloat get_WorldSpaceDistance
fadeOpacityBy:duration:
public SCNAction FadeOpacityBy
fadeOpacityTo:duration:
public SCNAction FadeOpacityTo
javaScriptActionWithScript:duration:
public SCNAction FromJavascript
moveByX:y:z:duration:
public SCNAction MoveBy
rotateByX:y:z:duration:
public SCNAction RotateBy
rotateByAngle:aroundAxis:duration:
public SCNAction RotateBy
rotateToX:y:z:duration:
public SCNAction RotateTo
rotateToX:y:z:duration:shortestUnitArc:
public SCNAction RotateTo
rotateToAxisAngle:duration:
public SCNAction RotateTo
applyForce:impulse:
public override void ApplyForce
applyForce:atPosition:impulse:
public override void ApplyForce
applyTorque:impulse:
public override void ApplyTorque
clearAllForces
public override void ClearAllForces
bodyWithType:shape:
public SCNPhysicsBody CreateBody
dynamicBody
public SCNPhysicsBody CreateDynamicBody
kinematicBody
public SCNPhysicsBody CreateKinematicBody
staticBody
public SCNPhysicsBody CreateStaticBody
resetTransform
public override void ResetTransform
allowsResting
/* property */ public override bool get_AllowsResting
setAllowsResting:
/* property */ public override void set_AllowsResting
angularDamping
/* property */ public override nfloat get_AngularDamping
setAngularDamping:
/* property */ public override void set_AngularDamping
angularVelocity
/* property */ public override nfloat get_AngularVelocity
setAngularVelocity:
/* property */ public override void set_AngularVelocity
angularVelocityFactor
/* property */ public override SCNVector3 get_AngularVelocityFactor
setAngularVelocityFactor:
/* property */ public override void set_AngularVelocityFactor
charge
/* property */ public override nfloat get_Charge
setCharge:
/* property */ public override void set_Charge
collisionBitMask
/* property */ public override UInt32 get_CollisionBitMask
setCollisionBitMask:
/* property */ public override void set_CollisionBitMask
damping
/* property */ public override nfloat get_Damping
setDamping:
/* property */ public override void set_Damping
friction
/* property */ public override nfloat get_Friction
setFriction:
/* property */ public override void set_Friction
isResting
/* property */ public override bool get_Resting
mass
/* property */ public override nfloat get_Mass
setMass:
/* property */ public override void set_Mass
physicsShape
/* property */ public override SCNPhysicsShape get_PhysicsShape
setPhysicsShape:
/* property */ public override void set_PhysicsShape
restitution
/* property */ public override nfloat get_Restitution
setRestitution:
/* property */ public override void set_Restitution
rollingFriction
/* property */ public override nfloat get_RollingFriction
setRollingFriction:
/* property */ public override void set_RollingFriction
velocityFactor
/* property */ public override SCNVector3 get_VelocityFactor
setVelocityFactor:
/* property */ public override void set_VelocityFactor
linearGravityField
public SCNPhysicsField CreateLinearGravityField
falloffExponent
/* property */ public override nfloat get_FalloffExponent
setFalloffExponent:
/* property */ public override void set_FalloffExponent
halfExtent
/* property */ public override SCNVector3 get_HalfExtent
setHalfExtent:
/* property */ public override void set_HalfExtent
minimumDistance
/* property */ public override nfloat get_MinimumDistance
setMinimumDistance:
/* property */ public override void set_MinimumDistance
setOffset:
/* property */ public override void set_Offset
scope
/* property */ public override SCNPhysicsFieldScope get_Scope
setScope:
/* property */ public override void set_Scope
usesEllipsoidalExtent
/* property */ public override bool get_UsesEllipsoidalExtent
setUsesEllipsoidalExtent:
/* property */ public override void set_UsesEllipsoidalExtent
contactTestBetweenBody:andBody:options:
public override SCNPhysicsContact[] ContactTest
contactTestWithBody:options:
public override SCNPhysicsContact[] ContactTest
convexSweepTestWithShape:fromTransform:toTransform:options:
public override SCNPhysicsContact[] ConvexSweepTest
rayTestWithSegmentFromPoint:toPoint:options:
public override SCNHitTestResult[] RayTestWithSegmentFromPoint
updateCollisionPairs
public override void UpdateCollisionPairs
allBehaviors
/* property */ public override SCNPhysicsBehavior[] get_AllBehaviors
setGravity:
/* property */ public override void set_Gravity
timeStep
/* property */ public override Double get_TimeStep
setTimeStep:
/* property */ public override void set_TimeStep
contactDelegate
/* property */ public override NSObject get_WeakContactDelegate
setContactDelegate:
/* property */ public override void set_WeakContactDelegate
collisionImpulse
/* property */ public override nfloat get_CollisionImpulse
contactNormal
/* property */ public override CGVector get_ContactNormal
contactPoint
/* property */ public override CGPoint get_ContactPoint
nodeA
/* property */ public override SCNNode get_NodeA
nodeB
/* property */ public override SCNNode get_NodeB
penetrationDistance
/* property */ public override nfloat get_PenetrationDistance
physicsWorld:didBeginContact:
public override void DidBeginContact
physicsWorld:didEndContact:
public override void DidEndContact
physicsWorld:didUpdateContact:
public override void DidUpdateContact
jointWithBodyA:axisA:anchorA:bodyB:axisB:anchorB:
public SCNPhysicsSliderJoint Create
jointWithBody:axis:anchor:
public SCNPhysicsSliderJoint Create
anchorA
/* property */ public override SCNVector3 get_AnchorA
setAnchorA:
/* property */ public override void set_AnchorA
anchorB
/* property */ public override SCNVector3 get_AnchorB
setAnchorB:
/* property */ public override void set_AnchorB
axisA
/* property */ public override SCNVector3 get_AxisA
setAxisA:
/* property */ public override void set_AxisA
axisB
/* property */ public override SCNVector3 get_AxisB
setAxisB:
/* property */ public override void set_AxisB
bodyA
/* property */ public override SKPhysicsBody get_BodyA
bodyB
/* property */ public override SKPhysicsBody get_BodyB
jointWithBodyA:anchorA:bodyB:anchorB:
public SCNPhysicsBallSocketJoint Create
jointWithBody:anchor:
public SCNPhysicsBallSocketJoint Create
maximumAngularLimit
/* property */ public override nfloat get_MaximumAngularLimit
setMaximumAngularLimit:
/* property */ public override void set_MaximumAngularLimit
maximumLinearLimit
/* property */ public override nfloat get_MaximumLinearLimit
setMaximumLinearLimit:
/* property */ public override void set_MaximumLinearLimit
minimumAngularLimit
/* property */ public override nfloat get_MinimumAngularLimit
setMinimumAngularLimit:
/* property */ public override void set_MinimumAngularLimit
minimumLinearLimit
/* property */ public override nfloat get_MinimumLinearLimit
setMinimumLinearLimit:
/* property */ public override void set_MinimumLinearLimit
motorMaximumForce
/* property */ public override nfloat get_MotorMaximumForce
setMotorMaximumForce:
/* property */ public override void set_MotorMaximumForce
motorMaximumTorque
/* property */ public override nfloat get_MotorMaximumTorque
setMotorMaximumTorque:
/* property */ public override void set_MotorMaximumTorque
motorTargetAngularVelocity
/* property */ public override nfloat get_MotorTargetAngularVelocity
setMotorTargetAngularVelocity:
/* property */ public override void set_MotorTargetAngularVelocity
motorTargetLinearVelocity
/* property */ public override nfloat get_MotorTargetLinearVelocity
setMotorTargetLinearVelocity:
/* property */ public override void set_MotorTargetLinearVelocity
applyBrakingForce:forWheelAtIndex:
public override void ApplyBrakingForce
applyEngineForce:forWheelAtIndex:
public override void ApplyEngineForce
vehicleWithChassisBody:wheels:
public SCNPhysicsVehicle Create
setSteeringAngle:forWheelAtIndex:
public override void SetSteeringAngle
chassisBody
/* property */ public override SCNPhysicsBody get_ChassisBody
speedInKilometersPerHour
/* property */ public override nfloat get_SpeedInKilometersPerHour
wheels
/* property */ public override SCNPhysicsVehicleWheel[] get_Wheels
wheelWithNode:
public SCNPhysicsVehicleWheel Create
axle
/* property */ public override SCNVector3 get_Axle
setAxle:
/* property */ public override void set_Axle
connectionPosition
/* property */ public override SCNVector3 get_ConnectionPosition
setConnectionPosition:
/* property */ public override void set_ConnectionPosition
frictionSlip
/* property */ public override nfloat get_FrictionSlip
setFrictionSlip:
/* property */ public override void set_FrictionSlip
maximumSuspensionForce
/* property */ public override nfloat get_MaximumSuspensionForce
setMaximumSuspensionForce:
/* property */ public override void set_MaximumSuspensionForce
maximumSuspensionTravel
/* property */ public override nfloat get_MaximumSuspensionTravel
setMaximumSuspensionTravel:
/* property */ public override void set_MaximumSuspensionTravel
steeringAxis
/* property */ public override SCNVector3 get_SteeringAxis
setSteeringAxis:
/* property */ public override void set_SteeringAxis
suspensionCompression
/* property */ public override nfloat get_SuspensionCompression
setSuspensionCompression:
/* property */ public override void set_SuspensionCompression
suspensionDamping
/* property */ public override nfloat get_SuspensionDamping
setSuspensionDamping:
/* property */ public override void set_SuspensionDamping
suspensionRestLength
/* property */ public override nfloat get_SuspensionRestLength
setSuspensionRestLength:
/* property */ public override void set_SuspensionRestLength
suspensionStiffness
/* property */ public override nfloat get_SuspensionStiffness
setSuspensionStiffness:
/* property */ public override void set_SuspensionStiffness
controllerWithAnimation:
public SCNParticlePropertyController Create
setAnimation:
/* property */ public override void set_Animation
inputBias
/* property */ public override nfloat get_InputBias
setInputBias:
/* property */ public override void set_InputBias
inputMode
/* property */ public override SCNParticleInputMode get_InputMode
setInputMode:
/* property */ public override void set_InputMode
inputOrigin
/* property */ public override SCNNode get_InputOrigin
setInputOrigin:
/* property */ public override void set_InputOrigin
inputProperty
/* property */ public override NSString get_InputProperty
setInputProperty:
/* property */ public override void set_InputProperty
inputScale
/* property */ public override nfloat get_InputScale
setInputScale:
/* property */ public override void set_InputScale
textViewDidChange:
public override void Changed
didSelectCancel
public override void DidSelectCancel
didSelectPost
public override void DidSelectPost
textViewDidEndEditing:
public override void EditingEnded
textViewDidBeginEditing:
public override void EditingStarted
configurationItems
public override SLComposeSheetConfigurationItem[] GetConfigurationItems
isContentValid
public override bool IsContentValid
loadPreviewView
public override UIView LoadPreviewView
popConfigurationViewController
public override void PopConfigurationViewController
presentationAnimationDidFinish
public override void PresentationAnimationDidFinish
pushConfigurationViewController:
public override void PushConfigurationViewController
reloadConfigurationItems
public override void ReloadConfigurationItems
textViewDidChangeSelection:
public override void SelectionChanged
textViewShouldBeginEditing:
public override bool ShouldBeginEditing
textView:shouldChangeTextInRange:replacementText:
public override bool ShouldChangeText
textViewShouldEndEditing:
public override bool ShouldEndEditing
textView:shouldInteractWithTextAttachment:inRange:
public override bool ShouldInteractWithTextAttachment
textView:shouldInteractWithURL:inRange:
public override bool ShouldInteractWithUrl
validateContent
public override void ValidateContent
autoCompletionViewController
/* property */ public override UIViewController get_AutoCompletionViewController
setAutoCompletionViewController:
/* property */ public override void set_AutoCompletionViewController
charactersRemaining
/* property */ public override NSNumber get_CharactersRemaining
setCharactersRemaining:
/* property */ public override void set_CharactersRemaining
contentText
/* property */ public override string get_ContentText
textView
/* property */ public override UITextView get_TextView
setTapHandler:
public override void SetTapHandler
valuePending
/* property */ public override bool get_ValuePending
setValuePending:
/* property */ public override void set_ValuePending
nodeWithViewportSize:
public SK3DNode FromViewportSize
scnScene
/* property */ public override SCNScene get_ScnScene
setScnScene:
/* property */ public override void set_ScnScene
viewportSize
/* property */ public override CGSize get_ViewportSize
setViewportSize:
/* property */ public override void set_ViewportSize
locationInNode:
public CGPoint LocationInNode
previousLocationInNode:
public CGPoint PreviousLocationInNode
shader
/* property */ public override SKShader get_Shader
setShader:
/* property */ public override void set_Shader
shouldCenterFilter
/* property */ public override bool get_ShouldCenterFilter
setShouldCenterFilter:
/* property */ public override void set_ShouldCenterFilter
shouldEnableEffects
/* property */ public override bool get_ShouldEnableEffects
setShouldEnableEffects:
/* property */ public override void set_ShouldEnableEffects
convertPointFromView:
public override CGPoint ConvertPointFromView
convertPointToView:
public override CGPoint ConvertPointToView
didApplyConstraints
public override void DidApplyConstraints
didChangeSize:
public override void DidChangeSize
didEvaluateActions
public override void DidEvaluateActions
didFinishUpdate
public override void DidFinishUpdate
didMoveToView:
public override void DidMoveToView
didSimulatePhysics
public override void DidSimulatePhysics
sceneWithSize:
public SKScene FromSize
update:
public override void Update
willMoveFromView:
public override void WillMoveFromView
scaleMode
/* property */ public override SKSceneScaleMode get_ScaleMode
setScaleMode:
/* property */ public override void set_ScaleMode
didApplyConstraintsForScene:
public override void DidApplyConstraints
didEvaluateActionsForScene:
public override void DidEvaluateActions
didFinishUpdateForScene:
public override void DidFinishUpdate
didSimulatePhysicsForScene:
public override void DidSimulatePhysics
update:forScene:
public override void Update
addUniform:
public override void AddUniform
shaderWithFileNamed:
public SKShader FromFile
shaderWithSource:
public SKShader FromShaderSourceCode
shaderWithSource:uniforms:
public SKShader FromShaderSourceCode
uniformNamed:
public override SKUniform GetUniform
removeUniformNamed:
public override void RemoveUniform
uniforms
/* property */ public override SKUniform[] get_Uniforms
setUniforms:
/* property */ public override void set_Uniforms
spriteNodeWithTexture:normalMap:
public SKSpriteNode Create
spriteNodeWithImageNamed:normalMapped:
public SKSpriteNode Create
spriteNodeWithColor:size:
public SKSpriteNode FromColor
spriteNodeWithImageNamed:
public SKSpriteNode FromImageNamed
spriteNodeWithTexture:size:
public SKSpriteNode FromTexture
spriteNodeWithTexture:
public SKSpriteNode FromTexture
centerRect
/* property */ public override CGRect get_CenterRect
setCenterRect:
/* property */ public override void set_CenterRect
colorBlendFactor
/* property */ public override nfloat get_ColorBlendFactor
setColorBlendFactor:
/* property */ public override void set_ColorBlendFactor
lightingBitMask
/* property */ public override UInt32 get_LightingBitMask
setLightingBitMask:
/* property */ public override void set_LightingBitMask
normalTexture
/* property */ public override SKTexture get_NormalTexture
setNormalTexture:
/* property */ public override void set_NormalTexture
shadowCastBitMask
/* property */ public override UInt32 get_ShadowCastBitMask
setShadowCastBitMask:
/* property */ public override void set_ShadowCastBitMask
shadowedBitMask
/* property */ public override UInt32 get_ShadowedBitMask
setShadowedBitMask:
/* property */ public override void set_ShadowedBitMask
advanceSimulationTime:
public override void AdvanceSimulationTime
resetSimulation
public override void ResetSimulation
emissionAngle
/* property */ public override nfloat get_EmissionAngle
setEmissionAngle:
/* property */ public override void set_EmissionAngle
emissionAngleRange
/* property */ public override nfloat get_EmissionAngleRange
setEmissionAngleRange:
/* property */ public override void set_EmissionAngleRange
fieldBitMask
/* property */ public override UInt32 get_FieldBitMask
setFieldBitMask:
/* property */ public override void set_FieldBitMask
numParticlesToEmit
/* property */ public override nuint get_NumParticlesToEmit
setNumParticlesToEmit:
/* property */ public override void set_NumParticlesToEmit
particleAction
/* property */ public override SKAction get_ParticleAction
setParticleAction:
/* property */ public override void set_ParticleAction
particleAlpha
/* property */ public override nfloat get_ParticleAlpha
setParticleAlpha:
/* property */ public override void set_ParticleAlpha
particleAlphaRange
/* property */ public override nfloat get_ParticleAlphaRange
setParticleAlphaRange:
/* property */ public override void set_ParticleAlphaRange
particleAlphaSequence
/* property */ public override SKKeyframeSequence get_ParticleAlphaSequence
setParticleAlphaSequence:
/* property */ public override void set_ParticleAlphaSequence
particleAlphaSpeed
/* property */ public override nfloat get_ParticleAlphaSpeed
setParticleAlphaSpeed:
/* property */ public override void set_ParticleAlphaSpeed
particleBirthRate
/* property */ public override nfloat get_ParticleBirthRate
setParticleBirthRate:
/* property */ public override void set_ParticleBirthRate
particleBlendMode
/* property */ public override SKBlendMode get_ParticleBlendMode
setParticleBlendMode:
/* property */ public override void set_ParticleBlendMode
particleColorAlphaRange
/* property */ public override nfloat get_ParticleColorAlphaRange
setParticleColorAlphaRange:
/* property */ public override void set_ParticleColorAlphaRange
particleColorAlphaSpeed
/* property */ public override nfloat get_ParticleColorAlphaSpeed
setParticleColorAlphaSpeed:
/* property */ public override void set_ParticleColorAlphaSpeed
particleColorBlendFactor
/* property */ public override nfloat get_ParticleColorBlendFactor
setParticleColorBlendFactor:
/* property */ public override void set_ParticleColorBlendFactor
particleColorBlendFactorRange
/* property */ public override nfloat get_ParticleColorBlendFactorRange
setParticleColorBlendFactorRange:
/* property */ public override void set_ParticleColorBlendFactorRange
particleColorBlendFactorSequence
/* property */ public override SKKeyframeSequence get_ParticleColorBlendFactorSequence
setParticleColorBlendFactorSequence:
/* property */ public override void set_ParticleColorBlendFactorSequence
particleColorBlendFactorSpeed
/* property */ public override nfloat get_ParticleColorBlendFactorSpeed
setParticleColorBlendFactorSpeed:
/* property */ public override void set_ParticleColorBlendFactorSpeed
particleColorBlueRange
/* property */ public override nfloat get_ParticleColorBlueRange
setParticleColorBlueRange:
/* property */ public override void set_ParticleColorBlueRange
particleColorBlueSpeed
/* property */ public override nfloat get_ParticleColorBlueSpeed
setParticleColorBlueSpeed:
/* property */ public override void set_ParticleColorBlueSpeed
particleColorGreenRange
/* property */ public override nfloat get_ParticleColorGreenRange
setParticleColorGreenRange:
/* property */ public override void set_ParticleColorGreenRange
particleColorGreenSpeed
/* property */ public override nfloat get_ParticleColorGreenSpeed
setParticleColorGreenSpeed:
/* property */ public override void set_ParticleColorGreenSpeed
particleColorRedRange
/* property */ public override nfloat get_ParticleColorRedRange
setParticleColorRedRange:
/* property */ public override void set_ParticleColorRedRange
particleColorRedSpeed
/* property */ public override nfloat get_ParticleColorRedSpeed
setParticleColorRedSpeed:
/* property */ public override void set_ParticleColorRedSpeed
particleColorSequence
/* property */ public override SKKeyframeSequence get_ParticleColorSequence
setParticleColorSequence:
/* property */ public override void set_ParticleColorSequence
particleLifetime
/* property */ public override nfloat get_ParticleLifetime
setParticleLifetime:
/* property */ public override void set_ParticleLifetime
particleLifetimeRange
/* property */ public override nfloat get_ParticleLifetimeRange
setParticleLifetimeRange:
/* property */ public override void set_ParticleLifetimeRange
particlePosition
/* property */ public override CGPoint get_ParticlePosition
setParticlePosition:
/* property */ public override void set_ParticlePosition
particlePositionRange
/* property */ public override CGVector get_ParticlePositionRange
setParticlePositionRange:
/* property */ public override void set_ParticlePositionRange
particleRotation
/* property */ public override nfloat get_ParticleRotation
setParticleRotation:
/* property */ public override void set_ParticleRotation
particleRotationRange
/* property */ public override nfloat get_ParticleRotationRange
setParticleRotationRange:
/* property */ public override void set_ParticleRotationRange
particleRotationSpeed
/* property */ public override nfloat get_ParticleRotationSpeed
setParticleRotationSpeed:
/* property */ public override void set_ParticleRotationSpeed
particleScale
/* property */ public override nfloat get_ParticleScale
setParticleScale:
/* property */ public override void set_ParticleScale
particleScaleRange
/* property */ public override nfloat get_ParticleScaleRange
setParticleScaleRange:
/* property */ public override void set_ParticleScaleRange
particleScaleSequence
/* property */ public override SKKeyframeSequence get_ParticleScaleSequence
setParticleScaleSequence:
/* property */ public override void set_ParticleScaleSequence
particleScaleSpeed
/* property */ public override nfloat get_ParticleScaleSpeed
setParticleScaleSpeed:
/* property */ public override void set_ParticleScaleSpeed
particleSpeed
/* property */ public override nfloat get_ParticleSpeed
setParticleSpeed:
/* property */ public override void set_ParticleSpeed
particleSpeedRange
/* property */ public override nfloat get_ParticleSpeedRange
setParticleSpeedRange:
/* property */ public override void set_ParticleSpeedRange
particleTexture
/* property */ public override SKTexture get_ParticleTexture
setParticleTexture:
/* property */ public override void set_ParticleTexture
particleZPosition
/* property */ public override nfloat get_ParticleZPosition
setParticleZPosition:
/* property */ public override void set_ParticleZPosition
particleZPositionRange
/* property */ public override nfloat get_ParticleZPositionRange
setParticleZPositionRange:
/* property */ public override void set_ParticleZPositionRange
particleZPositionSpeed
/* property */ public override nfloat get_ParticleZPositionSpeed
setParticleZPositionSpeed:
/* property */ public override void set_ParticleZPositionSpeed
targetNode
/* property */ public override SKNode get_TargetNode
setTargetNode:
/* property */ public override void set_TargetNode
shapeNodeWithCircleOfRadius:
public SKShapeNode FromCircle
shapeNodeWithEllipseInRect:
public SKShapeNode FromEllipse
shapeNodeWithEllipseOfSize:
public SKShapeNode FromEllipse
shapeNodeWithPath:
public SKShapeNode FromPath
shapeNodeWithPath:centered:
public SKShapeNode FromPath
shapeNodeWithPoints:count:
public SKShapeNode FromPoints
shapeNodeWithRect:
public SKShapeNode FromRect
shapeNodeWithRectOfSize:
public SKShapeNode FromRect
shapeNodeWithRect:cornerRadius:
public SKShapeNode FromRect
shapeNodeWithRectOfSize:cornerRadius:
public SKShapeNode FromRect
shapeNodeWithSplinePoints:count:
public SKShapeNode FromSplinePoints
isAntialiased
/* property */ public override bool get_Antialiased
setAntialiased:
/* property */ public override void set_Antialiased
fillShader
/* property */ public override SKShader get_FillShader
setFillShader:
/* property */ public override void set_FillShader
fillTexture
/* property */ public override SKTexture get_FillTexture
setFillTexture:
/* property */ public override void set_FillTexture
glowWidth
/* property */ public override nfloat get_GlowWidth
setGlowWidth:
/* property */ public override void set_GlowWidth
lineLength
/* property */ public override nfloat get_LineLength
strokeShader
/* property */ public override SKShader get_StrokeShader
setStrokeShader:
/* property */ public override void set_StrokeShader
strokeTexture
/* property */ public override SKTexture get_StrokeTexture
setStrokeTexture:
/* property */ public override void set_StrokeTexture
lowerAngleLimit
/* property */ public override nfloat get_LowerAngleLimit
setLowerAngleLimit:
/* property */ public override void set_LowerAngleLimit
upperAngleLimit
/* property */ public override nfloat get_UpperAngleLimit
setUpperAngleLimit:
/* property */ public override void set_UpperAngleLimit
regionByDifferenceFromRegion:
public override SKRegion CreateDifference
regionByIntersectionWithRegion:
public override SKRegion CreateIntersection
regionByUnionWithRegion:
public override SKRegion CreateUnion
inverseRegion
public override SKRegion InverseRegion
infiniteRegion
/* property */ public SKRegion get_InfiniteRegion
labelNodeWithFontNamed:
public SKLabelNode FromFont
labelNodeWithText:
public SKLabelNode FromText
fontColor
/* property */ public override UIColor get_FontColor
setFontColor:
/* property */ public override void set_FontColor
setFontName:
/* property */ public override void set_FontName
horizontalAlignmentMode
/* property */ public override SKLabelHorizontalAlignmentMode get_HorizontalAlignmentMode
setHorizontalAlignmentMode:
/* property */ public override void set_HorizontalAlignmentMode
verticalAlignmentMode
/* property */ public override SKLabelVerticalAlignmentMode get_VerticalAlignmentMode
setVerticalAlignmentMode:
/* property */ public override void set_VerticalAlignmentMode
lightColor
/* property */ public override UIColor get_LightColor
setLightColor:
/* property */ public override void set_LightColor
videoNodeWithVideoFileNamed:
public SKVideoNode FromFile
videoNodeWithAVPlayer:
public SKVideoNode FromPlayer
videoNodeWithVideoURL:
public SKVideoNode FromUrl
distance:toNode:
public SKConstraint CreateDistance
distance:toPoint:
public SKConstraint CreateDistance
distance:toPoint:inNode:
public SKConstraint CreateDistance
orientToNode:offset:
public SKConstraint CreateOrientToNode
orientToPoint:offset:
public SKConstraint CreateOrientToPoint
orientToPoint:inNode:offset:
public SKConstraint CreateOrientToPoint
positionX:Y:
public SKConstraint CreateRestriction
positionX:
public SKConstraint CreateXRestriction
positionY:
public SKConstraint CreateYRestriction
zRotation:
public SKConstraint CreateZRotation
referenceNode
/* property */ public override SKNode get_ReferenceNode
setReferenceNode:
/* property */ public override void set_ReferenceNode
maskNode
/* property */ public override SKNode get_MaskNode
setMaskNode:
/* property */ public override void set_MaskNode
convertPoint:fromScene:
public override CGPoint ConvertPointFromScene
convertPoint:toScene:
public override CGPoint ConvertPointToScene
presentScene:
public override void PresentScene
presentScene:transition:
public override void PresentScene
textureFromNode:
public override SKTexture TextureFromNode
textureFromNode:crop:
public override SKTexture TextureFromNode
allowsTransparency
/* property */ public override bool get_AllowsTransparency
setAllowsTransparency:
/* property */ public override void set_AllowsTransparency
setAsynchronous:
/* property */ public override void set_Asynchronous
ignoresSiblingOrder
/* property */ public override bool get_IgnoresSiblingOrder
setIgnoresSiblingOrder:
/* property */ public override void set_IgnoresSiblingOrder
shouldCullNonVisibleNodes
/* property */ public override bool get_ShouldCullNonVisibleNodes
setShouldCullNonVisibleNodes:
/* property */ public override void set_ShouldCullNonVisibleNodes
showsDrawCount
/* property */ public override bool get_ShowsDrawCount
setShowsDrawCount:
/* property */ public override void set_ShowsDrawCount
showsFields
/* property */ public override bool get_ShowsFields
setShowsFields:
/* property */ public override void set_ShowsFields
showsFPS
/* property */ public override bool get_ShowsFPS
setShowsFPS:
/* property */ public override void set_ShowsFPS
showsNodeCount
/* property */ public override bool get_ShowsNodeCount
setShowsNodeCount:
/* property */ public override void set_ShowsNodeCount
showsPhysics
/* property */ public override bool get_ShowsPhysics
setShowsPhysics:
/* property */ public override void set_ShowsPhysics
showsQuadCount
/* property */ public override bool get_ShowsQuadCount
setShowsQuadCount:
/* property */ public override void set_ShowsQuadCount
crossFadeWithDuration:
public SKTransition CrossFadeWithDuration
doorsCloseHorizontalWithDuration:
public SKTransition DoorsCloseHorizontalWithDuration
doorsCloseVerticalWithDuration:
public SKTransition DoorsCloseVerticalWithDuration
doorsOpenHorizontalWithDuration:
public SKTransition DoorsOpenHorizontalWithDuration
doorsOpenVerticalWithDuration:
public SKTransition DoorsOpenVerticalWithDuration
doorwayWithDuration:
public SKTransition DoorwayWithDuration
fadeWithColor:duration:
public SKTransition FadeWithColor
fadeWithDuration:
public SKTransition FadeWithDuration
flipHorizontalWithDuration:
public SKTransition FlipHorizontalWithDuration
flipVerticalWithDuration:
public SKTransition FlipVerticalWithDuration
moveInWithDirection:duration:
public SKTransition MoveInWithDirection
pushWithDirection:duration:
public SKTransition PushWithDirection
revealWithDirection:duration:
public SKTransition RevealWithDirection
transitionWithCIFilter:duration:
public SKTransition TransitionWithCIFilter
pausesIncomingScene
/* property */ public override bool get_PausesIncomingScene
setPausesIncomingScene:
/* property */ public override void set_PausesIncomingScene
pausesOutgoingScene
/* property */ public override bool get_PausesOutgoingScene
setPausesOutgoingScene:
/* property */ public override void set_PausesOutgoingScene
textureByGeneratingNormalMap
public override SKTexture CreateTextureByGeneratingNormalMap
textureByGeneratingNormalMapWithSmoothness:contrast:
public override SKTexture CreateTextureByGeneratingNormalMap
textureWithData:size:
public SKTexture FromData
textureWithData:size:rowLength:alignment:
public SKTexture FromData
textureWithData:size:flipped:
public SKTexture FromData
textureWithCGImage:
public SKTexture FromImage
textureWithImage:
public SKTexture FromImage
textureWithImageNamed:
public SKTexture FromImageNamed
textureWithRect:inTexture:
public SKTexture FromRectangle
textureNoiseWithSmoothness:size:grayscale:
public SKTexture FromTextureNoise
textureVectorNoiseWithSmoothness:size:
public SKTexture FromTextureVectorNoise
preloadWithCompletionHandler:
public override void Preload
preloadTextures:withCompletionHandler:
public void PreloadTextures
textureByApplyingCIFilter:
public override SKTexture TextureByApplyingCIFilter
filteringMode
/* property */ public override SKTextureFilteringMode get_FilteringMode
setFilteringMode:
/* property */ public override void set_FilteringMode
textureRect
/* property */ public override CGRect get_TextureRect
usesMipmaps
/* property */ public override bool get_UsesMipmaps
setUsesMipmaps:
/* property */ public override void set_UsesMipmaps
mutableTextureWithSize:
public SKMutableTexture Create
modifyPixelDataWithBlock:
public override void ModifyPixelData
atlasWithDictionary:
public SKTextureAtlas FromDictionary
atlasNamed:
public SKTextureAtlas FromName
preloadTextureAtlases:withCompletionHandler:
public void PreloadTextures
textureNamed:
public override SKTexture TextureNamed
textureNames
/* property */ public override string[] get_TextureNames
floatMatrix2Value
/* property */ public override Matrix2 get_FloatMatrix2Value
setFloatMatrix2Value:
/* property */ public override void set_FloatMatrix2Value
floatMatrix3Value
/* property */ public override Matrix3 get_FloatMatrix3Value
setFloatMatrix3Value:
/* property */ public override void set_FloatMatrix3Value
floatMatrix4Value
/* property */ public override Matrix4 get_FloatMatrix4Value
setFloatMatrix4Value:
/* property */ public override void set_FloatMatrix4Value
setFloatValue:
/* property */ public override void set_FloatValue
floatVector2Value
/* property */ public override Vector2 get_FloatVector2Value
setFloatVector2Value:
/* property */ public override void set_FloatVector2Value
floatVector3Value
/* property */ public override Vector3 get_FloatVector3Value
setFloatVector3Value:
/* property */ public override void set_FloatVector3Value
floatVector4Value
/* property */ public override Vector4 get_FloatVector4Value
setFloatVector4Value:
/* property */ public override void set_FloatVector4Value
textureValue
/* property */ public override SKTexture get_TextureValue
setTextureValue:
/* property */ public override void set_TextureValue
uniformType
/* property */ public override SKUniformType get_UniformType
applyAngularImpulse:
public override void ApplyAngularImpulse
applyForce:
public override void ApplyForce
applyForce:atPoint:
public override void ApplyForce
applyImpulse:
public override void ApplyImpulse
applyImpulse:atPoint:
public override void ApplyImpulse
applyTorque:
public override void ApplyTorque
bodyWithTexture:size:
public SKPhysicsBody Create
bodyWithTexture:alphaThreshold:size:
public SKPhysicsBody Create
bodyWithPolygonFromPath:
public SKPhysicsBody CreateBodyFromPath
bodyWithCircleOfRadius:
public SKPhysicsBody CreateCircularBody
bodyWithCircleOfRadius:center:
public SKPhysicsBody CreateCircularBody
bodyWithEdgeFromPoint:toPoint:
public SKPhysicsBody CreateEdge
bodyWithEdgeChainFromPath:
public SKPhysicsBody CreateEdgeChain
bodyWithEdgeLoopFromPath:
public SKPhysicsBody CreateEdgeLoop
bodyWithEdgeLoopFromRect:
public SKPhysicsBody CreateEdgeLoop
bodyWithRectangleOfSize:
public SKPhysicsBody CreateRectangularBody
bodyWithRectangleOfSize:center:
public SKPhysicsBody CreateRectangularBody
bodyWithBodies:
public SKPhysicsBody FromBodies
allContactedBodies
/* property */ public override SKPhysicsBody[] get_AllContactedBodies
allowsRotation
/* property */ public override bool get_AllowsRotation
setAllowsRotation:
/* property */ public override void set_AllowsRotation
area
/* property */ public override nfloat get_Area
contactTestBitMask
/* property */ public override UInt32 get_ContactTestBitMask
setContactTestBitMask:
/* property */ public override void set_ContactTestBitMask
isDynamic
/* property */ public override bool get_Dynamic
setDynamic:
/* property */ public override void set_Dynamic
joints
/* property */ public override SKPhysicsJoint[] get_Joints
linearDamping
/* property */ public override nfloat get_LinearDamping
setLinearDamping:
/* property */ public override void set_LinearDamping
pinned
/* property */ public override bool get_Pinned
setPinned:
/* property */ public override void set_Pinned
setResting:
/* property */ public override void set_Resting
usesPreciseCollisionDetection
/* property */ public override bool get_UsesPreciseCollisionDetection
setUsesPreciseCollisionDetection:
/* property */ public override void set_UsesPreciseCollisionDetection
didBeginContact:
public override void DidBeginContact
didEndContact:
public override void DidEndContact
addJoint:
public override void AddJoint
enumerateBodiesAtPoint:usingBlock:
public override void EnumerateBodies
enumerateBodiesInRect:usingBlock:
public override void EnumerateBodies
enumerateBodiesAlongRayStart:end:usingBlock:
public override void EnumerateBodies
bodyAtPoint:
public override SKPhysicsBody GetBody
bodyInRect:
public override SKPhysicsBody GetBody
bodyAlongRayStart:end:
public override SKPhysicsBody GetBody
removeAllJoints
public override void RemoveAllJoints
removeJoint:
public override void RemoveJoint
sampleFieldsAt:
public override Vector3 SampleFields
setBodyA:
/* property */ public override void set_BodyA
setBodyB:
/* property */ public override void set_BodyB
reactionForce
/* property */ public override CGVector get_ReactionForce
reactionTorque
/* property */ public override nfloat get_ReactionTorque
jointWithBodyA:bodyB:anchor:
public SKPhysicsJointFixed Create
frictionTorque
/* property */ public override nfloat get_FrictionTorque
setFrictionTorque:
/* property */ public override void set_FrictionTorque
rotationSpeed
/* property */ public override nfloat get_RotationSpeed
setRotationSpeed:
/* property */ public override void set_RotationSpeed
shouldEnableLimits
/* property */ public override bool get_ShouldEnableLimits
setShouldEnableLimits:
/* property */ public override void set_ShouldEnableLimits
jointWithBodyA:bodyB:anchorA:anchorB:
public SKPhysicsJointLimit Create
jointWithBodyA:bodyB:anchor:axis:
public SKPhysicsJointSliding Create
lowerDistanceLimit
/* property */ public override nfloat get_LowerDistanceLimit
setLowerDistanceLimit:
/* property */ public override void set_LowerDistanceLimit
upperDistanceLimit
/* property */ public override nfloat get_UpperDistanceLimit
setUpperDistanceLimit:
/* property */ public override void set_UpperDistanceLimit
setMaxLength:
/* property */ public override void set_MaxLength
rangeWithLowerLimit:upperLimit:
public SKRange Create
rangeWithConstantValue:
public SKRange CreateConstant
rangeWithNoLimits
public SKRange CreateUnlimited
rangeWithLowerLimit:
public SKRange CreateWithLowerLimit
rangeWithUpperLimit:
public SKRange CreateWithUpperLimit
rangeWithValue:variance:
public SKRange CreateWithVariance
lowerLimit
/* property */ public override nfloat get_LowerLimit
setLowerLimit:
/* property */ public override void set_LowerLimit
upperLimit
/* property */ public override nfloat get_UpperLimit
setUpperLimit:
/* property */ public override void set_UpperLimit
contentIdentifier
/* property */ public override string get_ContentIdentifier
contentVersion
/* property */ public override string get_ContentVersion
downloadState
/* property */ public override SKDownloadState get_DownloadState
timeRemaining
/* property */ public override Double get_TimeRemaining
transaction
/* property */ public override SKPaymentTransaction get_Transaction
paymentWithProduct:
public SKMutablePayment PaymentWithProduct
paymentWithProductIdentifier:
public SKMutablePayment PaymentWithProduct
applicationUsername
/* property */ public override string get_ApplicationUsername
productIdentifier
/* property */ public override string get_ProductIdentifier
quantity
/* property */ public override HKQuantity get_Quantity
requestData
/* property */ public override NSData get_RequestData
simulatesAskToBuyInSandbox
/* property */ public override bool get_SimulatesAskToBuyInSandbox
setApplicationUsername:
/* property */ public override void set_ApplicationUsername
setProductIdentifier:
/* property */ public override void set_ProductIdentifier
setQuantity:
/* property */ public override void set_Quantity
setRequestData:
/* property */ public override void set_RequestData
setSimulatesAskToBuyInSandbox:
/* property */ public override void set_SimulatesAskToBuyInSandbox
addPayment:
public override void AddPayment
addTransactionObserver:
public override void AddTransactionObserver
cancelDownloads:
public override void CancelDownloads
finishTransaction:
public override void FinishTransaction
pauseDownloads:
public override void PauseDownloads
removeTransactionObserver:
public override void RemoveTransactionObserver
restoreCompletedTransactions
public override void RestoreCompletedTransactions
restoreCompletedTransactionsWithApplicationUsername:
public override void RestoreCompletedTransactions
resumeDownloads:
public override void ResumeDownloads
startDownloads:
public override void StartDownloads
canMakePayments
/* property */ public bool get_CanMakePayments
transactions
/* property */ public override SKPaymentTransaction[] get_Transactions
isDownloadable
/* property */ public override bool get_Downloadable
downloadContentLengths
/* property */ public override NSNumber[] get_DownloadContentLengths
downloadContentVersion
/* property */ public override string get_DownloadContentVersion
localizedTitle
/* property */ public override string get_LocalizedTitle
price
/* property */ public override NSDecimalNumber get_Price
priceLocale
/* property */ public override NSLocale get_PriceLocale
paymentQueue:updatedTransactions:
public override void UpdatedTransactions
paymentQueueRestoreCompletedTransactionsFinished:
public override void PaymentQueueRestoreCompletedTransactionsFinished
paymentQueue:removedTransactions:
public override void RemovedTransactions
paymentQueue:restoreCompletedTransactionsFailedWithError:
public override void RestoreCompletedTransactionsFailedWithError
paymentQueue:updatedDownloads:
public override void UpdatedDownloads
downloads
/* property */ public override SKDownload[] get_Downloads
originalTransaction
/* property */ public override SKPaymentTransaction get_OriginalTransaction
payment
/* property */ public override SKPayment get_Payment
transactionDate
/* property */ public override NSDate get_TransactionDate
transactionIdentifier
/* property */ public override string get_TransactionIdentifier
transactionReceipt
/* property */ public override NSData get_TransactionReceipt
transactionState
/* property */ public override SKPaymentTransactionState get_TransactionState
request:didFailWithError:
public override void RequestFailed
requestDidFinish:
public override void RequestFinished
invalidProductIdentifiers
/* property */ public override string[] get_InvalidProducts
products
/* property */ public override SKProduct[] get_Products
productsRequest:didReceiveResponse:
public override void ReceivedResponse
loadProductWithParameters:completionBlock:
override void LoadProduct
productViewControllerDidFinish:
public override void Finished
initialURL
/* property */ public override NSUrl get_InitialUrl
itemAtIndex:
public override WKBackForwardListItem ItemAtIndex
backList
/* property */ public override WKBackForwardListItem[] get_BackList
forwardItem
/* property */ public override WKBackForwardListItem get_ForwardItem
forwardList
/* property */ public override WKBackForwardListItem[] get_ForwardList
isMainFrame
/* property */ public override bool get_MainFrame
navigationType
/* property */ public override WKNavigationType get_NavigationType
sourceFrame
/* property */ public override WKFrameInfo get_SourceFrame
targetFrame
/* property */ public override WKFrameInfo get_TargetFrame
webView:decidePolicyForNavigationAction:decisionHandler:
public override void DecidePolicy
webView:decidePolicyForNavigationResponse:decisionHandler:
public override void DecidePolicy
webView:didCommitNavigation:
public override void DidCommitNavigation
webView:didFailNavigation:withError:
public override void DidFailNavigation
webView:didFailProvisionalNavigation:withError:
public override void DidFailProvisionalNavigation
webView:didFinishNavigation:
public override void DidFinishNavigation
webView:didReceiveAuthenticationChallenge:completionHandler:
public override void DidReceiveAuthenticationChallenge
webView:didReceiveServerRedirectForProvisionalNavigation:
public override void DidReceiveServerRedirectForProvisionalNavigation
webView:didStartProvisionalNavigation:
public override void DidStartProvisionalNavigation
canShowMIMEType
/* property */ public override bool get_CanShowMimeType
isForMainFrame
/* property */ public override bool get_IsForMainFrame
javaScriptCanOpenWindowsAutomatically
/* property */ public override bool get_JavaScriptCanOpenWindowsAutomatically
setJavaScriptCanOpenWindowsAutomatically:
/* property */ public override void set_JavaScriptCanOpenWindowsAutomatically
javaScriptEnabled
/* property */ public override bool get_JavaScriptEnabled
setJavaScriptEnabled:
/* property */ public override void set_JavaScriptEnabled
frameInfo
/* property */ public override WKFrameInfo get_FrameInfo
webView
/* property */ public override WKWebView get_WebView
userContentController:didReceiveScriptMessage:
public override void DidReceiveScriptMessage
webView:createWebViewWithConfiguration:forNavigationAction:windowFeatures:
public override WKWebView CreateWebView
webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:completionHandler:
public override void RunJavaScriptAlertPanel
webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:completionHandler:
public override void RunJavaScriptConfirmPanel
webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:completionHandler:
public override void RunJavaScriptTextInputPanel
addScriptMessageHandler:name:
public override void AddScriptMessageHandler
addUserScript:
public override void AddUserScript
removeAllUserScripts
public override void RemoveAllUserScripts
removeScriptMessageHandlerForName:
public override void RemoveScriptMessageHandler
userScripts
/* property */ public override WKUserScript[] get_UserScripts
injectionTime
/* property */ public override WKUserScriptInjectionTime get_InjectionTime
isForMainFrameOnly
/* property */ public override bool get_IsForMainFrameOnly
evaluateJavaScript:completionHandler:
public override void EvaluateJavaScript
goBack
public override void GoBack
goForward
public override void GoForward
goToBackForwardListItem:
public override WKNavigation GoTo
loadHTMLString:baseURL:
public override void LoadHtmlString
loadRequest:
public override void LoadRequest
reload
public override void Reload
reloadFromOrigin
public override WKNavigation ReloadFromOrigin
allowsBackForwardNavigationGestures
/* property */ public override bool get_AllowsBackForwardNavigationGestures
setAllowsBackForwardNavigationGestures:
/* property */ public override void set_AllowsBackForwardNavigationGestures
backForwardList
/* property */ public override WKBackForwardList get_BackForwardList
canGoBack
/* property */ public override bool get_CanGoBack
canGoForward
/* property */ public override bool get_CanGoForward
estimatedProgress
/* property */ public override Double get_EstimatedProgress
hasOnlySecureContent
/* property */ public override bool get_HasOnlySecureContent
scrollView
/* property */ public override UIScrollView get_ScrollView
navigationDelegate
/* property */ public override NSObject get_WeakNavigationDelegate
setNavigationDelegate:
/* property */ public override void set_WeakNavigationDelegate
UIDelegate
/* property */ public override NSObject get_WeakUIDelegate
setUIDelegate:
/* property */ public override void set_WeakUIDelegate
allowsInlineMediaPlayback
/* property */ public override bool get_AllowsInlineMediaPlayback
setAllowsInlineMediaPlayback:
/* property */ public override void set_AllowsInlineMediaPlayback
mediaPlaybackAllowsAirPlay
/* property */ public override bool get_MediaPlaybackAllowsAirPlay
setMediaPlaybackAllowsAirPlay:
/* property */ public override void set_MediaPlaybackAllowsAirPlay
mediaPlaybackRequiresUserAction
/* property */ public override bool get_MediaPlaybackRequiresUserAction
setMediaPlaybackRequiresUserAction:
/* property */ public override void set_MediaPlaybackRequiresUserAction
preferences
/* property */ public override WKPreferences get_Preferences
setPreferences:
/* property */ public override void set_Preferences
processPool
/* property */ public override WKProcessPool get_ProcessPool
setProcessPool:
/* property */ public override void set_ProcessPool
selectionGranularity
/* property */ public override WKSelectionGranularity get_SelectionGranularity
setSelectionGranularity:
/* property */ public override void set_SelectionGranularity
suppressesIncrementalRendering
/* property */ public override bool get_SuppressesIncrementalRendering
setSuppressesIncrementalRendering:
/* property */ public override void set_SuppressesIncrementalRendering
userContentController
/* property */ public override WKUserContentController get_UserContentController
setUserContentController:
/* property */ public override void set_UserContentController
newPersonViewController:didCompleteWithNewPerson:
public override void DidCompleteWithNewPerson
peoplePickerNavigationControllerDidCancel:
public override void Cancelled
peoplePickerNavigationController:didSelectPerson:
public override void DidSelectPerson
peoplePickerNavigationController:didSelectPerson:property:identifier:
public override void DidSelectPerson
peoplePickerNavigationController:shouldContinueAfterSelectingPerson:
public override bool ShouldContinue
peoplePickerNavigationController:shouldContinueAfterSelectingPerson:property:identifier:
public override bool ShouldContinue
personViewController:shouldPerformDefaultActionForPerson:property:identifier:
public override bool ShouldPerformDefaultActionForPerson
unknownPersonViewController:didResolveToPerson:
public override void DidResolveToPerson
unknownPersonViewController:shouldPerformDefaultActionForPerson:property:identifier:
public override bool ShouldPerformDefaultActionForPerson
cancelBannerViewAction
public override void CancelBannerViewAction
sizeFromBannerContentSizeIdentifier:
public CGSize SizeFromContentSizeIdentifier
adType
/* property */ public override ADAdType get_AdType
advertisingSection
/* property */ public override string get_AdvertisingSection
setAdvertisingSection:
/* property */ public override void set_AdvertisingSection
isBannerLoaded
/* property */ public override bool get_BannerLoaded
isBannerViewActionInProgress
/* property */ public override bool get_BannerViewActionInProgress
currentContentSizeIdentifier
/* property */ public override string get_CurrentContentSizeIdentifier
setCurrentContentSizeIdentifier:
/* property */ public override void set_CurrentContentSizeIdentifier
requiredContentSizeIdentifiers
/* property */ public override NSSet get_RequiredContentSizeIdentifiers
setRequiredContentSizeIdentifiers:
/* property */ public override void set_RequiredContentSizeIdentifiers
bannerViewActionDidFinish:
public override void ActionFinished
bannerViewActionShouldBegin:willLeaveApplication:
public override bool ActionShouldBegin
bannerViewDidLoadAd:
public override void AdLoaded
bannerView:didFailToReceiveAdWithError:
public override void FailedToReceiveAd
bannerViewWillLoadAd:
public override void WillLoad
cancelAction
public override void CancelAction
presentFromViewController:
public override void PresentFromViewController
presentInView:
public override bool PresentInView
isActionInProgress
/* property */ public override bool get_ActionInProgress
interstitialAdDidUnload:
public override void AdUnloaded
interstitialAd:didFailWithError:
public override void FailedToReceiveAd
interstitialAdDidLoad:
public override void AdLoaded
interstitialAdActionShouldBegin:willLeaveApplication:
public override bool ActionShouldBegin
interstitialAdActionDidFinish:
public override void ActionFinished
interstitialAdWillLoad:
public override void WillLoad
cancelPreroll
public void CancelPreroll
playPrerollAdWithCompletionHandler:
public void PlayPrerollAd
preparePrerollAds
void PreparePrerollAds
isDisplayingBannerAd
public bool DisplayingBannerAd
canDisplayBannerAds
public bool GetCanDisplayBannerAds
interstitialPresentationPolicy
public ADInterstitialPresentationPolicy GetInterstitialPresentationPolicy
originalContentView
public UIView GetOriginalContentView
prepareInterstitialAds
void PrepareInterstitialAds
isPresentingFullScreenAd
public bool PresentingFullScreenAd
requestInterstitialAdPresentation
public bool RequestInterstitialAdPresentation
setCanDisplayBannerAds:
public void SetCanDisplayBannerAds
setInterstitialPresentationPolicy:
public void SetInterstitialPresentationPolicy
shouldPresentInterstitialAd
public bool ShouldPresentInterstitialAd
addClientToSegments:replaceExisting:
public override void AddClientToSegments
determineAppInstallationAttributionWithCompletionHandler:
public override void DetermineAppInstallationAttribution
lookupAdConversionDetails:
public override void LookupAdConversionDetails
sharedClient
/* property */ public ADClient get_SharedClient
advertisingIdentifier
/* property */ public override NSUuid get_AdvertisingIdentifier
isAdvertisingTrackingEnabled
/* property */ public override bool get_IsAdvertisingTrackingEnabled
addAssetsGroupAlbumWithName:resultBlock:failureBlock:
public override void AddAssetsGroupAlbum
assetForURL:resultBlock:failureBlock:
public override void AssetForUrl
disableSharedPhotoStreamsSupport
public void DisableSharedPhotoStreamsSupport
enumerateGroupsWithTypes:usingBlock:failureBlock:
public override void Enumerate
groupForURL:resultBlock:failureBlock:
public override void GroupForUrl
videoAtPathIsCompatibleWithSavedPhotosAlbum:
public override bool VideoAtPathIsIsCompatibleWithSavedPhotosAlbum
writeImageDataToSavedPhotosAlbum:metadata:completionBlock:
public override void WriteImageToSavedPhotosAlbum
writeImageToSavedPhotosAlbum:metadata:completionBlock:
public override void WriteImageToSavedPhotosAlbum
writeImageToSavedPhotosAlbum:orientation:completionBlock:
public override void WriteImageToSavedPhotosAlbum
writeVideoAtPathToSavedPhotosAlbum:completionBlock:
public override void WriteVideoToSavedPhotosAlbum
getBytes:fromOffset:length:error:
public override nuint GetBytes
fullScreenImage
public override CGImage GetFullScreenImage
fullResolutionImage
public override CGImage GetImage
CGImageWithOptions:
public override CGImage GetImage
dimensions
/* property */ public override CGSize get_Dimensions
allAssets
/* property */ public ALAssetsFilter get_AllAssets
allPhotos
/* property */ public ALAssetsFilter get_AllPhotos
allVideos
/* property */ public ALAssetsFilter get_AllVideos
startAccelerometerUpdates
public override void StartAccelerometerUpdates
startAccelerometerUpdatesToQueue:withHandler:
public override void StartAccelerometerUpdates
startDeviceMotionUpdates
public override void StartDeviceMotionUpdates
startDeviceMotionUpdatesToQueue:withHandler:
public override void StartDeviceMotionUpdates
startDeviceMotionUpdatesUsingReferenceFrame:
public override void StartDeviceMotionUpdates
startDeviceMotionUpdatesUsingReferenceFrame:toQueue:withHandler:
public override void StartDeviceMotionUpdates
startGyroUpdates
public override void StartGyroUpdates
startGyroUpdatesToQueue:withHandler:
public override void StartGyroUpdates
startMagnetometerUpdates
public override void StartMagnetometerUpdates
startMagnetometerUpdatesToQueue:withHandler:
public override void StartMagnetometerUpdates
stopAccelerometerUpdates
public override void StopAccelerometerUpdates
stopDeviceMotionUpdates
public override void StopDeviceMotionUpdates
stopGyroUpdates
public override void StopGyroUpdates
stopMagnetometerUpdates
public override void StopMagnetometerUpdates
isAccelerometerActive
/* property */ public override bool get_AccelerometerActive
isAccelerometerAvailable
/* property */ public override bool get_AccelerometerAvailable
accelerometerData
/* property */ public override CMAccelerometerData get_AccelerometerData
accelerometerUpdateInterval
/* property */ public override Double get_AccelerometerUpdateInterval
setAccelerometerUpdateInterval:
/* property */ public override void set_AccelerometerUpdateInterval
attitudeReferenceFrame
/* property */ public override CMAttitudeReferenceFrame get_AttitudeReferenceFrame
availableAttitudeReferenceFrames
/* property */ public CMAttitudeReferenceFrame get_AvailableAttitudeReferenceFrames
deviceMotion
/* property */ public override CMDeviceMotion get_DeviceMotion
isDeviceMotionActive
/* property */ public override bool get_DeviceMotionActive
isDeviceMotionAvailable
/* property */ public override bool get_DeviceMotionAvailable
deviceMotionUpdateInterval
/* property */ public override Double get_DeviceMotionUpdateInterval
setDeviceMotionUpdateInterval:
/* property */ public override void set_DeviceMotionUpdateInterval
isGyroActive
/* property */ public override bool get_GyroActive
isGyroAvailable
/* property */ public override bool get_GyroAvailable
gyroData
/* property */ public override CMGyroData get_GyroData
gyroUpdateInterval
/* property */ public override Double get_GyroUpdateInterval
setGyroUpdateInterval:
/* property */ public override void set_GyroUpdateInterval
isMagnetometerActive
/* property */ public override bool get_MagnetometerActive
isMagnetometerAvailable
/* property */ public override bool get_MagnetometerAvailable
magnetometerData
/* property */ public override CMMagnetometerData get_MagnetometerData
magnetometerUpdateInterval
/* property */ public override Double get_MagnetometerUpdateInterval
setMagnetometerUpdateInterval:
/* property */ public override void set_MagnetometerUpdateInterval
showsDeviceMovementDisplay
/* property */ public override bool get_ShowsDeviceMovementDisplay
setShowsDeviceMovementDisplay:
/* property */ public override void set_ShowsDeviceMovementDisplay
multiplyByInverseOfAttitude:
public override void MultiplyByInverseOfAttitude
quaternion
/* property */ public override CMQuaternion get_Quaternion
roll
/* property */ public override Double get_Roll
rotationMatrix
/* property */ public override CMRotationMatrix get_RotationMatrix
yaw
/* property */ public override Double get_Yaw
queryStepCountStartingFrom:to:toQueue:withHandler:
public override void QueryStepCount
startStepCountingUpdatesToQueue:updateOn:withHandler:
public override void StartStepCountingUpdates
stopStepCountingUpdates
public override void StopStepCountingUpdates
isStepCountingAvailable
/* property */ public bool get_IsStepCountingAvailable
floorsAscended
/* property */ public override NSNumber get_FloorsAscended
floorsDescended
/* property */ public override NSNumber get_FloorsDescended
numberOfSteps
/* property */ public override NSNumber get_NumberOfSteps
queryPedometerDataFromDate:toDate:withHandler:
public override void QueryPedometerData
startPedometerUpdatesFromDate:withHandler:
public override void StartPedometerUpdates
stopPedometerUpdates
public override void StopPedometerUpdates
isDistanceAvailable
/* property */ public bool get_IsDistanceAvailable
isFloorCountingAvailable
/* property */ public bool get_IsFloorCountingAvailable
queryActivityStartingFromDate:toDate:toQueue:withHandler:
public override void QueryActivity
startActivityUpdatesToQueue:withHandler:
public override void StartActivityUpdates
stopActivityUpdates
public override void StopActivityUpdates
isActivityAvailable
/* property */ public bool get_IsActivityAvailable
automotive
/* property */ public override bool get_Automotive
confidence
/* property */ public override CMMotionActivityConfidence get_Confidence
cycling
/* property */ public override bool get_Cycling
running
/* property */ public override bool get_Running
stationary
/* property */ public override bool get_Stationary
unknown
/* property */ public override bool get_Unknown
walking
/* property */ public override bool get_Walking
pressure
/* property */ public override NSNumber get_Pressure
relativeAltitude
/* property */ public override NSNumber get_RelativeAltitude
startRelativeAltitudeUpdatesToQueue:withHandler:
public override void StartRelativeAltitudeUpdates
stopRelativeAltitudeUpdates
public override void StopRelativeAltitudeUpdates
isRelativeAltitudeAvailable
/* property */ public bool get_IsRelativeAltitudeAvailable
subscriberCellularProviderDidUpdateNotifier
/* property */ public override Action`1 get_CellularProviderUpdatedEventHandler
setSubscriberCellularProviderDidUpdateNotifier:
/* property */ public override void set_CellularProviderUpdatedEventHandler
currentRadioAccessTechnology
/* property */ public override NSString get_CurrentRadioAccessTechnology
subscriberCellularProvider
/* property */ public override CTCarrier get_SubscriberCellularProvider
callEventHandler
/* property */ public override Action`1 get_CallEventHandler
setCallEventHandler:
/* property */ public override void set_CallEventHandler
currentCalls
/* property */ public override NSSet get_CurrentCalls
allowsVOIP
/* property */ public override bool get_AllowsVoip
carrierName
/* property */ public override string get_CarrierName
isoCountryCode
/* property */ public override string get_IsoCountryCode
mobileCountryCode
/* property */ public override string get_MobileCountryCode
mobileNetworkCode
/* property */ public override string get_MobileNetworkCode
carrierToken
/* property */ public override NSData get_CarrierToken
subscriber
/* property */ public CTSubscriber get_Subscriber
allowsCalendarPreview
/* property */ public override bool get_AllowsCalendarPreview
setAllowsCalendarPreview:
/* property */ public override void set_AllowsCalendarPreview
event
/* property */ public override EKEvent get_Event
setEvent:
/* property */ public override void set_Event
eventViewController:didCompleteWithAction:
public override void Completed
cancelEditing
public override void CancelEditing
eventStore
/* property */ public override EKEventStore get_EventStore
setEventStore:
/* property */ public override void set_EventStore
editViewDelegate
/* property */ public override NSObject get_WeakEditViewDelegate
setEditViewDelegate:
/* property */ public override void set_WeakEditViewDelegate
eventEditViewController:didCompleteWithAction:
public override void Completed
eventEditViewControllerDefaultCalendarForNewEvents:
public override EKCalendar GetDefaultCalendarForNewEvents
selectedCalendars
/* property */ public override NSSet get_SelectedCalendars
setSelectedCalendars:
/* property */ public override void set_SelectedCalendars
showsDoneButton
/* property */ public override bool get_ShowsDoneButton
setShowsDoneButton:
/* property */ public override void set_ShowsDoneButton
calendarChooserDidCancel:
public override void Cancelled
calendarChooserDidFinish:
public override void Finished
calendarChooserSelectionDidChange:
public override void SelectionChanged
connectionID
/* property */ public override nuint get_ConnectionID
firmwareRevision
/* property */ public override string get_FirmwareRevision
hardwareRevision
/* property */ public override string get_HardwareRevision
manufacturer
/* property */ public override string get_Manufacturer
modelNumber
/* property */ public override string get_ModelNumber
protocolStrings
/* property */ public override string[] get_ProtocolStrings
serialNumber
/* property */ public override string get_SerialNumber
accessoryDidDisconnect:
public override void Disconnected
registerForLocalNotifications
public override void RegisterForLocalNotifications
showBluetoothAccessoryPickerWithNameFilter:completion:
public override void ShowBluetoothAccessoryPicker
unregisterForLocalNotifications
public override void UnregisterForLocalNotifications
connectedAccessories
/* property */ public override EAAccessory[] get_ConnectedAccessories
sharedAccessoryManager
/* property */ public EAAccessoryManager get_SharedAccessoryManager
inputStream
/* property */ public override NSInputStream get_InputStream
outputStream
/* property */ public override NSOutputStream get_OutputStream
protocolString
/* property */ public override string get_ProtocolString
macAddress
/* property */ public override string get_MacAddress
ssid
/* property */ public override string get_Ssid
configureAccessory:withConfigurationUIOnViewController:
public override void ConfigureAccessory
startSearchingForUnconfiguredAccessoriesMatchingPredicate:
public override void StartSearchingForUnconfiguredAccessories
stopSearchingForUnconfiguredAccessories
public override void StopSearchingForUnconfiguredAccessories
unconfiguredAccessories
/* property */ public override NSSet get_UnconfiguredAccessories
accessoryBrowser:didUpdateState:
public override void DidUpdateState
accessoryBrowser:didFindUnconfiguredAccessories:
public override void DidFindUnconfiguredAccessories
accessoryBrowser:didRemoveUnconfiguredAccessories:
public override void DidRemoveUnconfiguredAccessories
accessoryBrowser:didFinishConfiguringAccessory:withStatus:
public override void DidFinishConfiguringAccessory
categorySampleWithType:value:startDate:endDate:metadata:
public HKCategorySample FromType
categorySampleWithType:value:startDate:endDate:
public HKCategorySample FromType
categoryType
/* property */ public override HKCategoryType get_CategoryType
correlationWithType:startDate:endDate:objects:metadata:
public HKCorrelation Create
correlationWithType:startDate:endDate:objects:
public HKCorrelation Create
objectsForType:
public override NSSet GetObjects
correlationType
/* property */ public override HKCorrelationType get_CorrelationType
samplePredicates
/* property */ public override NSDictionary get_SamplePredicates
addSamples:toWorkout:completion:
public override void AddSamples
deleteObject:withCompletion:
public override void DeleteObject
disableAllBackgroundDeliveryWithCompletion:
public override void DisableAllBackgroundDelivery
disableBackgroundDeliveryForType:withCompletion:
public override void DisableBackgroundDelivery
enableBackgroundDeliveryForType:frequency:withCompletion:
public override void EnableBackgroundDelivery
executeQuery:
public override void ExecuteQuery
authorizationStatusForType:
public override HKAuthorizationStatus GetAuthorizationStatus
biologicalSexWithError:
public override HKBiologicalSexObject GetBiologicalSex
bloodTypeWithError:
public override HKBloodTypeObject GetBloodType
dateOfBirthWithError:
public override NSDate GetDateOfBirth
preferredUnitsForQuantityTypes:completion:
public override void GetPreferredUnits
requestAuthorizationToShareTypes:readTypes:completion:
public override void RequestAuthorizationToShare
saveObject:withCompletion:
public override void SaveObject
saveObjects:withCompletion:
public override void SaveObjects
stopQuery:
public override void StopQuery
isHealthDataAvailable
/* property */ public bool get_IsHealthDataAvailable
biologicalSex
/* property */ public override HKBiologicalSex get_BiologicalSex
bloodType
/* property */ public override HKBloodType get_BloodType
categoryTypeForIdentifier:
public HKCategoryType GetCategoryType
characteristicTypeForIdentifier:
public HKCharacteristicType GetCharacteristicType
correlationTypeForIdentifier:
public HKCorrelationType GetCorrelationType
quantityTypeForIdentifier:
public HKQuantityType GetQuantityType
workoutType
public HKWorkout WorkoutType
quantityWithUnit:doubleValue:
public HKQuantity FromQuantity
doubleValueForUnit:
public override Double GetDoubleValue
quantitySampleWithType:quantity:startDate:endDate:
public HKQuantitySample FromType
quantitySampleWithType:quantity:startDate:endDate:metadata:
public HKQuantitySample FromType
quantityType
/* property */ public override HKQuantityType get_QuantityType
predicateForCategorySamplesWithOperatorType:value:
public NSPredicate GetPredicateForCategorySamples
predicateForWorkoutsWithOperatorType:duration:
public NSPredicate GetPredicateForDuration
predicateForObjectsWithMetadataKey:
public NSPredicate GetPredicateForMetadataKey
predicateForObjectsWithMetadataKey:allowedValues:
public NSPredicate GetPredicateForMetadataKey
predicateForObjectsWithMetadataKey:operatorType:value:
public NSPredicate GetPredicateForMetadataKey
predicateForObjectWithUUID:
public NSPredicate GetPredicateForObject
predicateForObjectsWithUUIDs:
public NSPredicate GetPredicateForObjects
predicateForObjectsFromSource:
public NSPredicate GetPredicateForObjectsFromSource
predicateForObjectsFromSources:
public NSPredicate GetPredicateForObjectsFromSources
predicateForObjectsFromWorkout:
public NSPredicate GetPredicateForObjectsFromWorkout
predicateForQuantitySamplesWithOperatorType:quantity:
public NSPredicate GetPredicateForQuantitySamples
predicateForSamplesWithStartDate:endDate:options:
public NSPredicate GetPredicateForSamples
predicateForWorkoutsWithOperatorType:totalDistance:
public NSPredicate GetPredicateForTotalDistance
predicateForWorkoutsWithOperatorType:totalEnergyBurned:
public NSPredicate GetPredicateForTotalEnergyBurned
predicateForWorkoutsWithWorkoutActivityType:
public NSPredicate GetPredicateForWorkouts
predicateForObjectsWithNoCorrelation
public NSPredicate PredicateForObjectsWithNoCorrelation
sampleType
/* property */ public override HKSampleType get_SampleType
defaultSource
/* property */ public HKSource get_GetDefaultSource
averageQuantityForSource:
public override HKQuantity AverageQuantity
averageQuantity
public override HKQuantity AverageQuantity
maximumQuantityForSource:
public override HKQuantity MaximumQuantity
maximumQuantity
public override HKQuantity MaximumQuantity
minimumQuantityForSource:
public override HKQuantity MinimumQuantity
minimumQuantity
public override HKQuantity MinimumQuantity
sumQuantityForSource:
public override HKQuantity SumQuantity
sumQuantity
public override HKQuantity SumQuantity
enumerateStatisticsFromDate:toDate:withBlock:
public override void EnumerateStatistics
statisticsForDate:
public override HKStatistics GetStatistics
statistics
/* property */ public override HKStatistics[] get_Statistics
setInitialResultsHandler:
public override void SetInitialResultsHandler
setStatisticsUpdateHandler:
public override void SetStatisticsUpdateHandler
anchorDate
/* property */ public override NSDate get_AnchorDate
intervalComponents
/* property */ public override NSDateComponents get_IntervalComponents
workoutWithActivityType:startDate:endDate:
public HKWorkout Create
workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:metadata:
public HKWorkout Create
workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:metadata:
public HKWorkout Create
totalDistance
/* property */ public override HKQuantity get_TotalDistance
totalEnergyBurned
/* property */ public override HKQuantity get_TotalEnergyBurned
workoutActivityType
/* property */ public override HKWorkoutActivityType get_WorkoutActivityType
workoutEvents
/* property */ public override HKWorkoutEvent[] get_WorkoutEvents
workoutEventWithType:date:
public HKWorkoutEvent Create
addHomeWithName:completionHandler:
public override void AddHome
removeHome:completionHandler:
public override void RemoveHome
updatePrimaryHome:completionHandler:
public override void UpdatePrimaryHome
homes
/* property */ public override HMHome[] get_Homes
primaryHome
/* property */ public override HMHome get_PrimaryHome
homeManager:didAddHome:
public override void DidAddHome
homeManager:didRemoveHome:
public override void DidRemoveHome
homeManagerDidUpdateHomes:
public override void DidUpdateHomes
homeManagerDidUpdatePrimaryHome:
public override void DidUpdatePrimaryHome
identifyWithCompletionHandler:
public override void Identify
isBlocked
/* property */ public override bool get_Blocked
isBridged
/* property */ public override bool get_Bridged
identifiersForBridgedAccessories
/* property */ public override NSUuid[] get_IdentifiersForBridgedAccessories
isReachable
/* property */ public override bool get_Reachable
room
/* property */ public override HMRoom get_Room
accessory:didUpdateAssociatedServiceTypeForService:
public override void DidUpdateAssociatedServiceType
accessoryDidUpdateName:
public override void DidUpdateName
accessory:didUpdateNameForService:
public override void DidUpdateNameForService
accessoryDidUpdateReachability:
public override void DidUpdateReachability
accessoryDidUpdateServices:
public override void DidUpdateServices
accessory:service:didUpdateValueForCharacteristic:
public override void DidUpdateValueForCharacteristic
startSearchingForNewAccessories
public override void StartSearchingForNewAccessories
stopSearchingForNewAccessories
public override void StopSearchingForNewAccessories
discoveredAccessories
/* property */ public override HMAccessory[] get_DiscoveredAccessories
accessoryBrowser:didFindNewAccessory:
public override void DidFindNewAccessory
accessoryBrowser:didRemoveNewAccessory:
public override void DidRemoveNewAccessory
addAction:completionHandler:
public override void AddAction
removeAction:completionHandler:
public override void RemoveAction
updateTargetValue:completionHandler:
public override void UpdateTargetValue
targetValue
/* property */ public override NSObject get_TargetValue
home:didAddAccessory:
public override void DidAddAccessory
home:didAddActionSet:
public override void DidAddActionSet
home:didAddRoom:
public override void DidAddRoom
home:didAddRoom:toZone:
public override void DidAddRoomToZone
home:didAddService:toServiceGroup:
public override void DidAddService
home:didAddServiceGroup:
public override void DidAddServiceGroup
home:didAddTrigger:
public override void DidAddTrigger
home:didAddUser:
public override void DidAddUser
home:didAddZone:
public override void DidAddZone
home:didEncounterError:forAccessory:
public override void DidEncounterError
home:didRemoveAccessory:
public override void DidRemoveAccessory
home:didRemoveActionSet:
public override void DidRemoveActionSet
home:didRemoveRoom:
public override void DidRemoveRoom
home:didRemoveRoom:fromZone:
public override void DidRemoveRoomFromZone
home:didRemoveService:fromServiceGroup:
public override void DidRemoveService
home:didRemoveServiceGroup:
public override void DidRemoveServiceGroup
home:didRemoveTrigger:
public override void DidRemoveTrigger
home:didRemoveUser:
public override void DidRemoveUser
home:didRemoveZone:
public override void DidRemoveZone
home:didUnblockAccessory:
public override void DidUnblockAccessory
home:didUpdateActionsForActionSet:
public override void DidUpdateActionsForActionSet
home:didUpdateNameForActionSet:
public override void DidUpdateNameForActionSet
homeDidUpdateName:
public override void DidUpdateNameForHome
home:didUpdateNameForRoom:
public override void DidUpdateNameForRoom
home:didUpdateNameForServiceGroup:
public override void DidUpdateNameForServiceGroup
home:didUpdateNameForTrigger:
public override void DidUpdateNameForTrigger
home:didUpdateNameForZone:
public override void DidUpdateNameForZone
home:didUpdateRoom:forAccessory:
public override void DidUpdateRoom
home:didUpdateTrigger:
public override void DidUpdateTrigger
addService:completionHandler:
public override void AddService
removeService:completionHandler:
public override void RemoveService
updateFireDate:completionHandler:
public override void UpdateFireDate
updateRecurrence:completionHandler:
public override void UpdateRecurrence
updateTimeZone:completionHandler:
public override void UpdateTimeZone
recurrence
/* property */ public override NSDateComponents get_Recurrence
recurrenceCalendar
/* property */ public override NSCalendar get_RecurrenceCalendar
addActionSet:completionHandler:
public override void AddActionSet
enable:completionHandler:
public override void Enable
lastFireDate
/* property */ public override NSDate get_LastFireDate
addRoom:completionHandler:
public override void AddRoom
canFilterByProperty:
public bool CanFilterByProperty
enumerateValuesForProperties:usingBlock:
public override void EnumerateValues
imageWithSize:
public override UIImage ImageWithSize
imageCropRect
/* property */ public override CGRect get_ImageCropRectangle
collectionWithItems:
public MPMediaItemCollection FromItems
representativeItem
/* property */ public override MPMediaItem get_RepresentativeItem
beginGeneratingLibraryChangeNotifications
public override void BeginGeneratingLibraryChangeNotifications
endGeneratingLibraryChangeNotifications
public override void EndGeneratingLibraryChangeNotifications
defaultMediaLibrary
/* property */ public MPMediaLibrary get_DefaultMediaLibrary
allowsPickingMultipleItems
/* property */ public override bool get_AllowsPickingMultipleItems
setAllowsPickingMultipleItems:
/* property */ public override void set_AllowsPickingMultipleItems
showsCloudItems
/* property */ public override bool get_ShowsCloudItems
setShowsCloudItems:
/* property */ public override void set_ShowsCloudItems
mediaPicker:didPickMediaItems:
public override void MediaItemsPicked
mediaPickerDidCancel:
public override void MediaPickerDidCancel
persistentID
/* property */ public override UInt64 get_PersistentID
playlistAttributes
/* property */ public override MPMediaPlaylistAttribute get_PlaylistAttributes
seedItems
/* property */ public override MPMediaItem[] get_SeedItems
predicateWithValue:forProperty:
public MPMediaPropertyPredicate PredicateWithValue
predicateWithValue:forProperty:comparisonType:
public MPMediaPropertyPredicate PredicateWithValue
comparisonType
/* property */ public override MPMediaPredicateComparison get_ComparisonType
property
/* property */ public override string get_Property
allMetadata
/* property */ public override NSDictionary get_AllMetadata
keyspace
/* property */ public override string get_Keyspace
moviePlayer
/* property */ public override MPMoviePlayerController get_MoviePlayer
beginGeneratingPlaybackNotifications
public override void BeginGeneratingPlaybackNotifications
endGeneratingPlaybackNotifications
public override void EndGeneratingPlaybackNotifications
setQueueWithQuery:
public override void SetQueue
setQueueWithItemCollection:
public override void SetQueue
skipToBeginning
public override void SkipToBeginning
skipToNextItem
public override void SkipToNextItem
skipToPreviousItem
public override void SkipToPreviousItem
applicationMusicPlayer
/* property */ public MPMusicPlayerController get_ApplicationMusicPlayer
iPodMusicPlayer
/* property */ public MPMusicPlayerController get_iPodMusicPlayer
nowPlayingItem
/* property */ public override MPMediaItem get_NowPlayingItem
setNowPlayingItem:
/* property */ public override void set_NowPlayingItem
shuffleMode
/* property */ public override MPMusicShuffleMode get_ShuffleMode
setShuffleMode:
/* property */ public override void set_ShuffleMode
systemMusicPlayer
/* property */ public MPMusicPlayerController get_SystemMusicPlayer
maximumVolumeSliderImageForState:
public override UIImage GetMaximumVolumeSliderImage
minimumVolumeSliderImageForState:
public override UIImage GetMinimumVolumeSliderImage
routeButtonImageForState:
public override UIImage GetRouteButtonImage
routeButtonRectForBounds:
public override CGRect GetRouteButtonRect
volumeSliderRectForBounds:
public override CGRect GetVolumeSliderRect
volumeThumbImageForState:
public override UIImage GetVolumeThumbImage
volumeThumbRectForBounds:volumeSliderRect:value:
public override CGRect GetVolumeThumbRect
setMaximumVolumeSliderImage:forState:
public override void SetMaximumVolumeSliderImage
setMinimumVolumeSliderImage:forState:
public override void SetMinimumVolumeSliderImage
setRouteButtonImage:forState:
public override void SetRouteButtonImage
setVolumeThumbImage:forState:
public override void SetVolumeThumbImage
areWirelessRoutesAvailable
/* property */ public override bool get_AreWirelessRoutesAvailable
isWirelessRouteActive
/* property */ public override bool get_IsWirelessRouteActive
showsRouteButton
/* property */ public override bool get_ShowsRouteButton
setShowsRouteButton:
/* property */ public override void set_ShowsRouteButton
showsVolumeSlider
/* property */ public override bool get_ShowsVolumeSlider
setShowsVolumeSlider:
/* property */ public override void set_ShowsVolumeSlider
volumeWarningSliderImage
/* property */ public override UIImage get_VolumeWarningSliderImage
setVolumeWarningSliderImage:
/* property */ public override void set_VolumeWarningSliderImage
artwork
/* property */ public override MPMediaItemArtwork get_Artwork
setArtwork:
/* property */ public override void set_Artwork
isContainer
/* property */ public override bool get_Container
setPlayable:
/* property */ public override void set_Playable
playbackProgress
/* property */ public override Single get_PlaybackProgress
setPlaybackProgress:
/* property */ public override void set_PlaybackProgress
contentItemAtIndexPath:
public override MPContentItem ContentItem
numberOfChildItemsAtIndexPath:
public override nint NumberOfChildItems
beginLoadingChildItemsAtIndexPath:completionHandler:
public override void BeginLoadingChildItems
childItemsDisplayPlaybackProgressAtIndexPath:
public override bool ChildItemsDisplayPlaybackProgress
playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:
public override void PlayableContentManager
sharedContentManager
/* property */ public MPPlayableContentManager get_Shared
addTargetWithHandler:
public override NSObject AddTarget
removeTarget:
public override void RemoveTarget
supportedPlaybackRates
/* property */ public override NSNumber[] get_SupportedPlaybackRates
setSupportedPlaybackRates:
/* property */ public override void set_SupportedPlaybackRates
localizedShortTitle
/* property */ public override string get_LocalizedShortTitle
setLocalizedShortTitle:
/* property */ public override void set_LocalizedShortTitle
setLocalizedTitle:
/* property */ public override void set_LocalizedTitle
maximumRating
/* property */ public override Single get_MaximumRating
setMaximumRating:
/* property */ public override void set_MaximumRating
minimumRating
/* property */ public override Single get_MinimumRating
setMinimumRating:
/* property */ public override void set_MinimumRating
bookmarkCommand
/* property */ public override MPFeedbackCommand get_BookmarkCommand
changePlaybackRateCommand
/* property */ public override MPChangePlaybackRateCommand get_ChangePlaybackRateCommand
dislikeCommand
/* property */ public override MPFeedbackCommand get_DislikeCommand
likeCommand
/* property */ public override MPFeedbackCommand get_LikeCommand
nextTrackCommand
/* property */ public override MPRemoteCommand get_NextTrackCommand
pauseCommand
/* property */ public override MPRemoteCommand get_PauseCommand
playCommand
/* property */ public override MPRemoteCommand get_PlayCommand
previousTrackCommand
/* property */ public override MPRemoteCommand get_PreviousTrackCommand
ratingCommand
/* property */ public override MPRatingCommand get_RatingCommand
seekBackwardCommand
/* property */ public override MPRemoteCommand get_SeekBackwardCommand
seekForwardCommand
/* property */ public override MPRemoteCommand get_SeekForwardCommand
sharedCommandCenter
/* property */ public MPRemoteCommandCenter get_Shared
skipBackwardCommand
/* property */ public override MPSkipIntervalCommand get_SkipBackwardCommand
skipForwardCommand
/* property */ public override MPSkipIntervalCommand get_SkipForwardCommand
stopCommand
/* property */ public override MPRemoteCommand get_StopCommand
togglePlayPauseCommand
/* property */ public override MPRemoteCommand get_TogglePlayPauseCommand
command
/* property */ public override MPRemoteCommand get_Command
playbackRate
/* property */ public override Single get_PlaybackRate
rating
/* property */ public override Single get_Rating
isNegative
/* property */ public override bool get_Negative
mailComposeController:didFinishWithResult:error:
public override void Finished
messageComposeViewController:didFinishWithResult:
public override void Finished
access
/* property */ public override MTLArgumentAccess get_Access
bufferAlignment
/* property */ public override nuint get_BufferAlignment
bufferDataSize
/* property */ public override nuint get_BufferDataSize
bufferDataType
/* property */ public override MTLDataType get_BufferDataType
bufferStructType
/* property */ public override MTLStructType get_BufferStructType
index
/* property */ public override nuint get_Index
textureDataType
/* property */ public override MTLDataType get_TextureDataType
textureType
/* property */ public override MTLTextureType get_TextureType
threadgroupMemoryAlignment
/* property */ public override nuint get_ThreadgroupMemoryAlignment
threadgroupMemoryDataSize
/* property */ public override nuint get_ThreadgroupMemoryDataSize
elementArrayType
public override MTLArrayType ElementArrayType
elementStructType
public override MTLStructType ElementStructType
elementType
/* property */ public override MTLDataType get_ElementType
arrayLength
/* property */ public override nuint get_ArrayLength
endEncoding
public override void EndEncoding
insertDebugSignpost:
public override void InsertDebugSignpost
pushDebugGroup:
public override void PushDebugGroup
popDebugGroup
public override void PopDebugGroup
newTextureWithDescriptor:offset:bytesPerRow:
public override IMTLTexture CreateTexture
setPurgeableState:
public override MTLPurgeableState SetPurgeableState
cpuCacheMode
/* property */ public override MTLCpuCacheMode get_CpuCacheMode
enqueue
public override void Enqueue
addScheduledHandler:
public override void AddScheduledHandler
waitUntilScheduled
public override void WaitUntilScheduled
addCompletedHandler:
public override void AddCompletedHandler
waitUntilCompleted
public override void WaitUntilCompleted
parallelRenderCommandEncoderWithDescriptor:
public override IMTLParallelRenderCommandEncoder CreateParallelRenderCommandEncoder
presentDrawable:
public override void PresentDrawable
presentDrawable:atTime:
public override void PresentDrawable
renderCommandEncoderWithDescriptor:
public override IMTLRenderCommandEncoder CreateRenderCommandEncoder
commandQueue
/* property */ public override IMTLCommandQueue get_CommandQueue
retainedReferences
/* property */ public override bool get_RetainedReferences
blitCommandEncoder
/* property */ public override IMTLBlitCommandEncoder get_BlitCommandEncoder
computeCommandEncoder
/* property */ public override IMTLComputeCommandEncoder get_ComputeCommandEncoder
commandBuffer
public override IMTLCommandBuffer CommandBuffer
commandBufferWithUnretainedReferences
public override IMTLCommandBuffer CommandBufferWithUnretainedReferences
insertDebugCaptureBoundary
public override void InsertDebugCaptureBoundary
setComputePipelineState:
public override void SetComputePipelineState
setBuffer:offset:atIndex:
public override void SetBuffer
setTexture:atIndex:
public override void SetTexture
setSamplerState:atIndex:
public override void SetSamplerState
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
public override void SetSamplerState
setThreadgroupMemoryLength:atIndex:
public override void SetThreadgroupMemoryLength
dispatchThreadgroups:threadsPerThreadgroup:
public override void DispatchThreadgroups
setBuffers:offsets:withRange:
public override void SetBuffers
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
public override void SetSamplerStates
setSamplerStates:withRange:
public override void SetSamplerStates
setTextures:withRange:
public override void SetTextures
setBufferOffset:atIndex:
public override void SetBufferOffset
setBytes:length:atIndex:
public override void SetBytes
maxTotalThreadsPerThreadgroup
/* property */ public override nuint get_MaxTotalThreadsPerThreadgroup
threadExecutionWidth
/* property */ public override nuint get_ThreadExecutionWidth
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
public override void CopyFromTexture
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
public override void CopyFromBuffer
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
public override void CopyFromTexture
generateMipmapsForTexture:
public override void GenerateMipmapsForTexture
fillBuffer:range:value:
public override void FillBuffer
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
public override void CopyFromBuffer
newCommandQueue
public override IMTLCommandQueue CreateCommandQueue
newCommandQueueWithMaxCommandBufferCount:
public override IMTLCommandQueue CreateCommandQueue
newBufferWithLength:options:
public override IMTLBuffer CreateBuffer
newBufferWithBytes:length:options:
public override IMTLBuffer CreateBuffer
newBufferWithBytesNoCopy:length:options:deallocator:
public override IMTLBuffer CreateBufferNoCopy
newDepthStencilStateWithDescriptor:
public override IMTLDepthStencilState CreateDepthStencilState
newTextureWithDescriptor:
public override IMTLTexture CreateTexture
newSamplerStateWithDescriptor:
public override IMTLSamplerState CreateSamplerState
newDefaultLibrary
public override IMTLLibrary CreateDefaultLibrary
newLibraryWithFile:error:
public override IMTLLibrary CreateLibrary
newLibraryWithData:error:
public override IMTLLibrary CreateLibrary
newLibraryWithSource:options:error:
public override IMTLLibrary CreateLibrary
newLibraryWithSource:options:completionHandler:
public override void CreateLibrary
newRenderPipelineStateWithDescriptor:error:
public override IMTLRenderPipelineState CreateRenderPipelineState
newRenderPipelineStateWithDescriptor:completionHandler:
public override void CreateRenderPipelineState
newRenderPipelineStateWithDescriptor:options:reflection:error:
public override IMTLRenderPipelineState CreateRenderPipelineState
newRenderPipelineStateWithDescriptor:options:completionHandler:
public override void CreateRenderPipelineState
newComputePipelineStateWithFunction:options:reflection:error:
public override IMTLComputePipelineState CreateComputePipelineState
newComputePipelineStateWithFunction:completionHandler:
public override void CreateComputePipelineState
newComputePipelineStateWithFunction:error:
public override IMTLComputePipelineState CreateComputePipelineState
newComputePipelineStateWithFunction:options:completionHandler:
public override void CreateComputePipelineState
supportsFeatureSet:
public override bool SupportsFeatureSet
newTextureViewWithPixelFormat:
public override IMTLTexture CreateTextureView
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
public override void GetBytes
getBytes:bytesPerRow:fromRegion:mipmapLevel:
public override void GetBytes
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
public override void ReplaceRegion
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
public override void ReplaceRegion
rootResource
/* property */ public override IMTLResource get_RootResource
depth
/* property */ public override nuint get_Depth
mipmapLevelCount
/* property */ public override nuint get_MipmapLevelCount
sampleCount
/* property */ public override nuint get_SampleCount
isFramebufferOnly
/* property */ public override bool get_FramebufferOnly
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
public MTLTextureDescriptor CreateTexture2DDescriptor
textureCubeDescriptorWithPixelFormat:size:mipmapped:
public MTLTextureDescriptor CreateTextureCubeDescriptor
setArrayLength:
/* property */ public override void set_ArrayLength
setDepth:
/* property */ public override void set_Depth
setMipmapLevelCount:
/* property */ public override void set_MipmapLevelCount
resourceOptions
/* property */ public override MTLResourceOptions get_ResourceOptions
setResourceOptions:
/* property */ public override void set_ResourceOptions
setSampleCount:
/* property */ public override void set_SampleCount
setTextureType:
/* property */ public override void set_TextureType
lodMaxClamp
/* property */ public override Single get_LodMaxClamp
setLodMaxClamp:
/* property */ public override void set_LodMaxClamp
lodMinClamp
/* property */ public override Single get_LodMinClamp
setLodMinClamp:
/* property */ public override void set_LodMinClamp
magFilter
/* property */ public override MTLSamplerMinMagFilter get_MagFilter
setMagFilter:
/* property */ public override void set_MagFilter
minFilter
/* property */ public override MTLSamplerMinMagFilter get_MinFilter
setMinFilter:
/* property */ public override void set_MinFilter
normalizedCoordinates
/* property */ public override bool get_NormalizedCoordinates
setNormalizedCoordinates:
/* property */ public override void set_NormalizedCoordinates
rAddressMode
/* property */ public override MTLSamplerAddressMode get_RAddressMode
setRAddressMode:
/* property */ public override void set_RAddressMode
sAddressMode
/* property */ public override MTLSamplerAddressMode get_SAddressMode
setSAddressMode:
/* property */ public override void set_SAddressMode
tAddressMode
/* property */ public override MTLSamplerAddressMode get_TAddressMode
setTAddressMode:
/* property */ public override void set_TAddressMode
isAlphaToCoverageEnabled
/* property */ public override bool get_AlphaToCoverageEnabled
setAlphaToCoverageEnabled:
/* property */ public override void set_AlphaToCoverageEnabled
isAlphaToOneEnabled
/* property */ public override bool get_AlphaToOneEnabled
setAlphaToOneEnabled:
/* property */ public override void set_AlphaToOneEnabled
colorAttachments
/* property */ public override MTLRenderPassColorAttachmentDescriptorArray get_ColorAttachments
depthAttachmentPixelFormat
/* property */ public override MTLPixelFormat get_DepthAttachmentPixelFormat
setDepthAttachmentPixelFormat:
/* property */ public override void set_DepthAttachmentPixelFormat
fragmentFunction
/* property */ public override IMTLFunction get_FragmentFunction
setFragmentFunction:
/* property */ public override void set_FragmentFunction
isRasterizationEnabled
/* property */ public override bool get_RasterizationEnabled
setRasterizationEnabled:
/* property */ public override void set_RasterizationEnabled
stencilAttachmentPixelFormat
/* property */ public override MTLPixelFormat get_StencilAttachmentPixelFormat
setStencilAttachmentPixelFormat:
/* property */ public override void set_StencilAttachmentPixelFormat
vertexDescriptor
public MTLVertexDescriptor Create
setVertexDescriptor:
/* property */ public override void set_VertexDescriptor
vertexFunction
/* property */ public override IMTLFunction get_VertexFunction
setVertexFunction:
/* property */ public override void set_VertexFunction
stepFunction
/* property */ public override MTLVertexStepFunction get_StepFunction
setStepFunction:
/* property */ public override void set_StepFunction
stepRate
/* property */ public override nuint get_StepRate
setStepRate:
/* property */ public override void set_StepRate
setStride:
/* property */ public override void set_Stride
bufferIndex
/* property */ public override nuint get_BufferIndex
setBufferIndex:
/* property */ public override void set_BufferIndex
setFormat:
/* property */ public override void set_Format
layouts
/* property */ public override MTLVertexBufferLayoutDescriptorArray get_Layouts
attributeIndex
/* property */ public override nuint get_AttributeIndex
functionType
/* property */ public override MTLFunctionType get_FunctionType
vertexAttributes
/* property */ public override MTLVertexAttribute[] get_VertexAttributes
newFunctionWithName:
public override IMTLFunction CreateFunction
functionNames
/* property */ public override string[] get_FunctionNames
fastMathEnabled
/* property */ public override bool get_FastMathEnabled
setFastMathEnabled:
/* property */ public override void set_FastMathEnabled
preprocessorMacros
/* property */ public override NSDictionary get_PreprocessorMacros
setPreprocessorMacros:
/* property */ public override void set_PreprocessorMacros
depthFailureOperation
/* property */ public override MTLStencilOperation get_DepthFailureOperation
setDepthFailureOperation:
/* property */ public override void set_DepthFailureOperation
depthStencilPassOperation
/* property */ public override MTLStencilOperation get_DepthStencilPassOperation
setDepthStencilPassOperation:
/* property */ public override void set_DepthStencilPassOperation
readMask
/* property */ public override UInt32 get_ReadMask
setReadMask:
/* property */ public override void set_ReadMask
stencilCompareFunction
/* property */ public override MTLCompareFunction get_StencilCompareFunction
setStencilCompareFunction:
/* property */ public override void set_StencilCompareFunction
stencilFailureOperation
/* property */ public override MTLStencilOperation get_StencilFailureOperation
setStencilFailureOperation:
/* property */ public override void set_StencilFailureOperation
writeMask
/* property */ public override MTLColorWriteMask get_WriteMask
setWriteMask:
/* property */ public override void set_WriteMask
arrayType
public override MTLArrayType ArrayType
structType
public override MTLStructType StructType
memberByName:
public override MTLStructMember Lookup
members
/* property */ public override MTLStructMember[] get_Members
backFaceStencil
/* property */ public override MTLStencilDescriptor get_BackFaceStencil
setBackFaceStencil:
/* property */ public override void set_BackFaceStencil
depthCompareFunction
/* property */ public override MTLCompareFunction get_DepthCompareFunction
setDepthCompareFunction:
/* property */ public override void set_DepthCompareFunction
isDepthWriteEnabled
/* property */ public override bool get_DepthWriteEnabled
setDepthWriteEnabled:
/* property */ public override void set_DepthWriteEnabled
frontFaceStencil
/* property */ public override MTLStencilDescriptor get_FrontFaceStencil
setFrontFaceStencil:
/* property */ public override void set_FrontFaceStencil
renderCommandEncoder
public override IMTLRenderCommandEncoder CreateRenderCommandEncoder
setRenderPipelineState:
public override void SetRenderPipelineState
setVertexBuffer:offset:atIndex:
public override void SetVertexBuffer
setVertexTexture:atIndex:
public override void SetVertexTexture
setVertexSamplerState:atIndex:
public override void SetVertexSamplerState
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
public override void SetVertexSamplerState
setViewport:
public override void SetViewport
setFrontFacingWinding:
public override void SetFrontFacingWinding
setDepthBias:slopeScale:clamp:
public override void SetDepthBias
setScissorRect:
public override void SetScissorRect
setTriangleFillMode:
public override void SetTriangleFillMode
setFragmentBuffer:offset:atIndex:
public override void SetFragmentBuffer
setFragmentBufferOffset:atIndex:
public override void SetFragmentBufferOffset
setFragmentBytes:length:atIndex:
public override void SetFragmentBytes
setFragmentTexture:atIndex:
public override void SetFragmentTexture
setFragmentSamplerState:atIndex:
public override void SetFragmentSamplerState
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
public override void SetFragmentSamplerState
setBlendColorRed:green:blue:alpha:
public override void SetBlendColor
setDepthStencilState:
public override void SetDepthStencilState
setStencilReferenceValue:
public override void SetStencilReferenceValue
setVisibilityResultMode:offset:
public override void SetVisibilityResultMode
drawPrimitives:vertexStart:vertexCount:instanceCount:
public override void DrawPrimitives
drawPrimitives:vertexStart:vertexCount:
public override void DrawPrimitives
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
public override void DrawIndexedPrimitives
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
public override void DrawIndexedPrimitives
setFragmentBuffers:offsets:withRange:
public override void SetFragmentBuffers
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
public override void SetFragmentSamplerStates
setFragmentSamplerStates:withRange:
public override void SetFragmentSamplerStates
setFragmentTextures:withRange:
public override void SetFragmentTextures
setVertexBuffers:offsets:withRange:
public override void SetVertexBuffers
setVertexBufferOffset:atIndex:
public override void SetVertexBufferOffset
setVertexBytes:length:atIndex:
public override void SetVertexBytes
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
public override void SetVertexSamplerStates
setVertexSamplerStates:withRange:
public override void SetVertexSamplerStates
setVertexTextures:withRange:
public override void SetVertexTextures
alphaBlendOperation
/* property */ public override MTLBlendOperation get_AlphaBlendOperation
setAlphaBlendOperation:
/* property */ public override void set_AlphaBlendOperation
isBlendingEnabled
/* property */ public override bool get_BlendingEnabled
setBlendingEnabled:
/* property */ public override void set_BlendingEnabled
destinationAlphaBlendFactor
/* property */ public override MTLBlendFactor get_DestinationAlphaBlendFactor
setDestinationAlphaBlendFactor:
/* property */ public override void set_DestinationAlphaBlendFactor
destinationRGBBlendFactor
/* property */ public override MTLBlendFactor get_DestinationRgbBlendFactor
setDestinationRGBBlendFactor:
/* property */ public override void set_DestinationRgbBlendFactor
rgbBlendOperation
/* property */ public override MTLBlendOperation get_RgbBlendOperation
setRgbBlendOperation:
/* property */ public override void set_RgbBlendOperation
sourceAlphaBlendFactor
/* property */ public override MTLBlendFactor get_SourceAlphaBlendFactor
setSourceAlphaBlendFactor:
/* property */ public override void set_SourceAlphaBlendFactor
sourceRGBBlendFactor
/* property */ public override MTLBlendFactor get_SourceRgbBlendFactor
setSourceRGBBlendFactor:
/* property */ public override void set_SourceRgbBlendFactor
fragmentArguments
/* property */ public override NSObject[] get_FragmentArguments
vertexArguments
/* property */ public override NSObject[] get_VertexArguments
depthPlane
/* property */ public override nuint get_DepthPlane
setDepthPlane:
/* property */ public override void set_DepthPlane
loadAction
/* property */ public override MTLLoadAction get_LoadAction
setLoadAction:
/* property */ public override void set_LoadAction
resolveDepthPlane
/* property */ public override nuint get_ResolveDepthPlane
setResolveDepthPlane:
/* property */ public override void set_ResolveDepthPlane
resolveLevel
/* property */ public override nuint get_ResolveLevel
setResolveLevel:
/* property */ public override void set_ResolveLevel
resolveSlice
/* property */ public override nuint get_ResolveSlice
setResolveSlice:
/* property */ public override void set_ResolveSlice
resolveTexture
/* property */ public override IMTLTexture get_ResolveTexture
setResolveTexture:
/* property */ public override void set_ResolveTexture
slice
/* property */ public override nuint get_Slice
setSlice:
/* property */ public override void set_Slice
storeAction
/* property */ public override MTLStoreAction get_StoreAction
setStoreAction:
/* property */ public override void set_StoreAction
setClearColor:
/* property */ public override void set_ClearColor
clearDepth
/* property */ public override Double get_ClearDepth
setClearDepth:
/* property */ public override void set_ClearDepth
clearStencil
/* property */ public override UInt32 get_ClearStencil
setClearStencil:
/* property */ public override void set_ClearStencil
renderPassDescriptor
public MTLRenderPassDescriptor CreateRenderPassDescriptor
depthAttachment
/* property */ public override MTLRenderPassDepthAttachmentDescriptor get_DepthAttachment
setDepthAttachment:
/* property */ public override void set_DepthAttachment
stencilAttachment
/* property */ public override MTLRenderPassStencilAttachmentDescriptor get_StencilAttachment
setStencilAttachment:
/* property */ public override void set_StencilAttachment
visibilityResultBuffer
/* property */ public override IMTLBuffer get_VisibilityResultBuffer
setVisibilityResultBuffer:
/* property */ public override void set_VisibilityResultBuffer
session:didReceiveData:fromPeer:
public override void DidReceiveData
session:didStartReceivingResourceWithName:fromPeer:withProgress:
public override void DidStartReceivingResource
session:didFinishReceivingResourceWithName:fromPeer:atURL:withError:
public override void DidFinishReceivingResource
session:didReceiveStream:withName:fromPeer:
public override void DidReceiveStream
session:didReceiveCertificate:fromPeer:certificateHandler:
public override bool DidReceiveCertificate
startAdvertisingPeer
public override void StartAdvertisingPeer
stopAdvertisingPeer
public override void StopAdvertisingPeer
discoveryInfo
/* property */ public override NSDictionary get_DiscoveryInfo
advertiser:didReceiveInvitationFromPeer:withContext:invitationHandler:
public override void DidReceiveInvitationFromPeer
advertiser:didNotStartAdvertisingPeer:
public override void DidNotStartAdvertisingPeer
invitePeer:toSession:withContext:timeout:
public override void InvitePeer
startBrowsingForPeers
public override void StartBrowsingForPeers
stopBrowsingForPeers
public override void StopBrowsingForPeers
browser:foundPeer:withDiscoveryInfo:
public override void FoundPeer
browser:lostPeer:
public override void LostPeer
browser:didNotStartBrowsingForPeers:
public override void DidNotStartBrowsingForPeers
browser
/* property */ public override MCNearbyServiceBrowser get_Browser
maximumNumberOfPeers
/* property */ public override nuint get_MaximumNumberOfPeers
setMaximumNumberOfPeers:
/* property */ public override void set_MaximumNumberOfPeers
minimumNumberOfPeers
/* property */ public override nuint get_MinimumNumberOfPeers
setMinimumNumberOfPeers:
/* property */ public override void set_MinimumNumberOfPeers
browserViewControllerWasCancelled:
public override void WasCancelled
browserViewControllerDidFinish:
public override void DidFinish
browserViewController:shouldPresentNearbyPeer:withDiscoveryInfo:
public override bool ShouldPresentNearbyPeer
advertiserAssistantDidDismissInvitation:
public override void DidDismissInvitation
advertiserAssistantWillPresentInvitation:
public override void WillPresentInvitation
downloadWithDelegate:
public override NSUrlConnection DownloadWithDelegate
issue
/* property */ public override NKIssue get_Issue
URLRequest
/* property */ public override NSUrlRequest get_UrlRequest
addAssetWithRequest:
public override NKAssetDownload AddAsset
downloadingAssets
/* property */ public override NKAssetDownload[] get_DownloadingAssets
addIssueWithName:date:
public override NKIssue AddIssue
issueWithName:
public override NKIssue GetIssue
removeIssue:
public override void RemoveIssue
currentlyReadingIssue
/* property */ public override NKIssue get_CurrentlyReadingIssue
setCurrentlyReadingIssue:
/* property */ public override void set_CurrentlyReadingIssue
issues
/* property */ public override NKIssue[] get_Issues
sharedLibrary
/* property */ public NKLibrary get_SharedLibrary
widgetController
public NCWidgetController GetWidgetController
setHasContent:forWidgetWithBundleIdentifier:
public override void SetHasContent
widgetMarginInsetsForProposedMarginInsets:
public override UIEdgeInsets GetWidgetMarginInsets
widgetPerformUpdateWithCompletionHandler:
public override void WidgetPerformUpdate
notificationCenterVibrancyEffect
UIVibrancyEffect NotificationCenterVibrancyEffect
presentRenderbuffer:
public override bool PresentRenderBuffer
renderbufferStorage:fromDrawable:
public override bool RenderBufferStorage
setCurrentContext:
public bool SetCurrentContext
API
/* property */ public override EAGLRenderingAPI get_API
setMultiThreaded:
/* property */ public override void set_IsMultiThreaded
sharegroup
/* property */ public override EAGLSharegroup get_ShareGroup
activatePaymentPass:withActivationData:completion:
public override void ActivatePaymentPass
activatePaymentPass:withActivationCode:completion:
public override void ActivatePaymentPass
addPasses:withCompletionHandler:
public override void AddPasses
containsPass:
public override bool Contains
passWithPassTypeIdentifier:serialNumber:
public override PKPass GetPass
passes
public override PKPass[] GetPasses
passesOfType:
public override PKPass[] GetPasses
openPaymentSetup
public override void OpenPaymentSetup
removePass:
public override void Remove
replacePassWithPass:
public override bool Replace
isPassLibraryAvailable
/* property */ public bool get_IsAvailable
isPaymentPassActivationAvailable
/* property */ public bool get_IsPaymentPassActivationAvailable
billingAddress
/* property */ public override ABRecord get_BillingAddress
shippingAddress
/* property */ public override ABRecord get_ShippingAddress
shippingMethod
/* property */ public override PKShippingMethod get_ShippingMethod
token
/* property */ public override NSData get_Token
paymentAuthorizationViewController:didAuthorizePayment:completion:
public override void DidAuthorizePayment
paymentAuthorizationViewControllerDidFinish:
public override void PaymentAuthorizationViewControllerDidFinish
paymentAuthorizationViewControllerWillAuthorizePayment:
public override void WillAuthorizePayment
paymentAuthorizationViewController:didSelectShippingAddress:completion:
public override void DidSelectShippingAddress
paymentAuthorizationViewController:didSelectShippingMethod:completion:
public override void DidSelectShippingMethod
canMakePaymentsUsingNetworks:
public bool CanMakePaymentsUsingNetworks
summaryItemWithLabel:amount:
public PKPaymentSummaryItem Create
amount
/* property */ public override NSDecimalNumber get_Amount
setAmount:
/* property */ public override void set_Amount
detail
/* property */ public override string get_Detail
setDetail:
/* property */ public override void set_Detail
applicationData
/* property */ public override NSData get_ApplicationData
setApplicationData:
/* property */ public override void set_ApplicationData
setBillingAddress:
/* property */ public override void set_BillingAddress
setCountryCode:
/* property */ public override void set_CountryCode
merchantCapabilities
/* property */ public override PKMerchantCapability get_MerchantCapabilities
setMerchantCapabilities:
/* property */ public override void set_MerchantCapabilities
merchantIdentifier
/* property */ public override string get_MerchantIdentifier
setMerchantIdentifier:
/* property */ public override void set_MerchantIdentifier
paymentSummaryItems
/* property */ public override PKPaymentSummaryItem[] get_PaymentSummaryItems
setPaymentSummaryItems:
/* property */ public override void set_PaymentSummaryItems
requiredBillingAddressFields
/* property */ public override PKAddressField get_RequiredBillingAddressFields
setRequiredBillingAddressFields:
/* property */ public override void set_RequiredBillingAddressFields
requiredShippingAddressFields
/* property */ public override PKAddressField get_RequiredShippingAddressFields
setRequiredShippingAddressFields:
/* property */ public override void set_RequiredShippingAddressFields
setShippingAddress:
/* property */ public override void set_ShippingAddress
shippingMethods
/* property */ public override PKShippingMethod[] get_ShippingMethods
setShippingMethods:
/* property */ public override void set_ShippingMethods
shippingType
/* property */ public override PKShippingType get_ShippingType
setShippingType:
/* property */ public override void set_ShippingType
supportedNetworks
/* property */ public override NSString[] get_SupportedNetworks
setSupportedNetworks:
/* property */ public override void set_SupportedNetworks
paymentData
/* property */ public override NSData get_PaymentData
paymentInstrumentName
/* property */ public override string get_PaymentInstrumentName
paymentNetwork
/* property */ public override string get_PaymentNetwork
canAddPasses
/* property */ public bool get_CanAddPasses
addPassesViewControllerDidFinish:
public override void Finished
localizedValueForFieldKey:
public override NSObject GetLocalizedValue
authenticationToken
/* property */ public override string get_AuthenticationToken
icon
/* property */ public override UIImage get_Icon
organizationName
/* property */ public override string get_OrganizationName
passType
/* property */ public override PKPassType get_PassType
passTypeIdentifier
/* property */ public override string get_PassTypeIdentifier
passURL
/* property */ public override NSUrl get_PassUrl
paymentPass
/* property */ public override PKPaymentPass get_PaymentPass
relevantDate
/* property */ public override NSDate get_RelevantDate
webServiceURL
/* property */ public override NSUrl get_WebServiceUrl
activationState
/* property */ public override PKPaymentPassActivationState get_ActivationState
deviceAccountIdentifier
/* property */ public override string get_DeviceAccountIdentifier
deviceAccountNumberSuffix
/* property */ public override string get_DeviceAccountNumberSuffix
primaryAccountIdentifier
/* property */ public override string get_PrimaryAccountIdentifier
primaryAccountNumberSuffix
/* property */ public override string get_PrimaryAccountNumberSuffix
buttonWithType:style:
public PKPaymentButton FromType
formatIdentifier
/* property */ public override string get_FormatIdentifier
formatVersion
/* property */ public override string get_FormatVersion
canPerformEditOperation:
public override bool CanPerformEditOperation
fetchAssetsInAssetCollection:options:
public PHFetchResult FetchAssets
fetchAssetsWithMediaType:options:
public PHFetchResult FetchAssets
fetchAssetsWithBurstIdentifier:options:
public PHFetchResult FetchAssets
fetchAssetsWithOptions:
public PHFetchResult FetchAssets
fetchAssetsWithALAssetURLs:options:
public PHFetchResult FetchAssets
fetchAssetsWithLocalIdentifiers:options:
public PHFetchResult FetchAssetsUsingLocalIdentifiers
fetchKeyAssetsInAssetCollection:options:
public PHFetchResult FetchKeyAssets
burstIdentifier
/* property */ public override string get_BurstIdentifier
burstSelectionTypes
/* property */ public override PHAssetBurstSelectionType get_BurstSelectionTypes
isFavorite
/* property */ public override bool get_Favorite
mediaSubtypes
/* property */ public override PHAssetMediaSubtype get_MediaSubtypes
pixelHeight
/* property */ public override nuint get_PixelHeight
pixelWidth
/* property */ public override nuint get_PixelWidth
representsBurst
/* property */ public override bool get_RepresentsBurst
changeRequestForAsset:
public PHAssetChangeRequest ChangeRequest
deleteAssets:
public void DeleteAssets
creationRequestForAssetFromImage:
public PHAssetChangeRequest FromImage
creationRequestForAssetFromImageAtFileURL:
public PHAssetChangeRequest FromImage
creationRequestForAssetFromVideoAtFileURL:
public PHAssetChangeRequest FromVideo
revertAssetContentToOriginal
public override void RevertAssetContentToOriginal
contentEditingOutput
/* property */ public override PHContentEditingOutput get_ContentEditingOutput
setContentEditingOutput:
/* property */ public override void set_ContentEditingOutput
setCreationDate:
/* property */ public override void set_CreationDate
setFavorite:
/* property */ public override void set_Favorite
placeholderForCreatedAsset
/* property */ public override PHObjectPlaceholder get_PlaceholderForCreatedAsset
setCanHandleAdjustmentData:
public override void SetCanHandleAdjustmentDataHandler
setProgressHandler:
/* property */ public override void set_ProgressHandler
isNetworkAccessAllowed
/* property */ public override bool get_NetworkAccessAllowed
setNetworkAccessAllowed:
/* property */ public override void set_NetworkAccessAllowed
cancelContentEditingInputRequest:
public void CancelContentEditingInputRequest
requestContentEditingInputWithOptions:completionHandler:
public nuint RequestContentEditingInput
addAssets:
public override void AddAssets
changeRequestForAssetCollection:
public PHAssetCollectionChangeRequest ChangeRequest
changeRequestForAssetCollection:assets:
public PHAssetCollectionChangeRequest ChangeRequest
creationRequestForAssetCollectionWithTitle:
public PHAssetCollectionChangeRequest CreateAssetCollection
deleteAssetCollections:
public void DeleteAssetCollections
insertAssets:atIndexes:
public override void InsertAssets
moveAssetsAtIndexes:toIndex:
public override void MoveAssets
removeAssets:
public override void RemoveAssets
removeAssetsAtIndexes:
public override void RemoveAssets
replaceAssetsAtIndexes:withAssets:
public override void ReplaceAssets
placeholderForCreatedAssetCollection
/* property */ public override PHObjectPlaceholder get_PlaceholderForCreatedAssetCollection
changeDetailsForFetchResult:
public override PHFetchResultChangeDetails GetFetchResultChangeDetails
changeDetailsForObject:
public override PHObjectChangeDetails GetObjectChangeDetails
assetContentChanged
/* property */ public override bool get_AssetContentChanged
objectAfterChanges
/* property */ public override NSObject get_ObjectAfterChanges
objectBeforeChanges
/* property */ public override NSObject get_ObjectBeforeChanges
objectWasDeleted
/* property */ public override bool get_ObjectWasDeleted
changeDetailsFromFetchResult:toFetchResult:changedObjects:
public PHFetchResultChangeDetails ChangeDetails
enumerateMovesWithBlock:
public override void EnumerateMoves
changedIndexes
/* property */ public override NSIndexSet get_ChangedIndexes
changedObjects
/* property */ public override PHObject[] get_ChangedObjects
fetchResultAfterChanges
/* property */ public override PHFetchResult get_FetchResultAfterChanges
fetchResultBeforeChanges
/* property */ public override PHFetchResult get_FetchResultBeforeChanges
hasIncrementalChanges
/* property */ public override bool get_HasIncrementalChanges
hasMoves
/* property */ public override bool get_HasMoves
insertedIndexes
/* property */ public override NSIndexSet get_InsertedIndexes
removedIndexes
/* property */ public override NSIndexSet get_RemovedIndexes
removedObjects
/* property */ public override PHObject[] get_RemovedObjects
fetchCollectionsInCollectionList:options:
public PHFetchResult FetchCollections
fetchTopLevelUserCollectionsWithOptions:
public PHFetchResult FetchTopLevelUserCollections
canContainAssets
/* property */ public override bool get_CanContainAssets
canContainCollections
/* property */ public override bool get_CanContainCollections
fetchAssetCollectionsWithLocalIdentifiers:options:
public PHFetchResult FetchAssetCollections
fetchAssetCollectionsWithType:subtype:options:
public PHFetchResult FetchAssetCollections
fetchAssetCollectionsContainingAsset:withType:options:
public PHFetchResult FetchAssetCollections
fetchAssetCollectionsWithALAssetGroupURLs:options:
public PHFetchResult FetchAssetCollections
fetchMomentsInMomentList:options:
public PHFetchResult FetchMoments
fetchMomentsWithOptions:
public PHFetchResult FetchMoments
transientAssetCollectionWithAssets:title:
public PHAssetCollection GetTransientAssetCollection
transientAssetCollectionWithAssetFetchResult:title:
public PHAssetCollection GetTransientAssetCollection
approximateLocation
/* property */ public override CLLocation get_ApproximateLocation
assetCollectionSubtype
/* property */ public override PHAssetCollectionSubtype get_AssetCollectionSubtype
assetCollectionType
/* property */ public override PHAssetCollectionType get_AssetCollectionType
estimatedAssetCount
/* property */ public override nuint get_EstimatedAssetCount
localizedLocationNames
/* property */ public override string[] get_LocalizedLocationNames
transientCollectionListWithCollections:title:
public PHCollectionList CreateTransientCollectionList
transientCollectionListWithCollectionsFetchResult:title:
public PHCollectionList CreateTransientCollectionList
fetchCollectionListsContainingCollection:options:
public PHFetchResult FetchCollectionLists
fetchCollectionListsWithLocalIdentifiers:options:
public PHFetchResult FetchCollectionLists
fetchCollectionListsWithType:subtype:options:
public PHFetchResult FetchCollectionLists
fetchMomentListsWithSubtype:containingMoment:options:
public PHFetchResult FetchMomentLists
fetchMomentListsWithSubtype:options:
public PHFetchResult FetchMomentLists
collectionListSubtype
/* property */ public override PHCollectionListSubtype get_CollectionListSubtype
collectionListType
/* property */ public override PHCollectionListType get_CollectionListType
addChildCollections:
public override void AddChildCollections
changeRequestForCollectionList:
public PHCollectionListChangeRequest ChangeRequest
changeRequestForCollectionList:childCollections:
public PHCollectionListChangeRequest ChangeRequest
creationRequestForCollectionListWithTitle:
public PHCollectionListChangeRequest CreateAssetCollection
deleteCollectionLists:
public void DeleteCollectionLists
insertChildCollections:atIndexes:
public override void InsertChildCollections
moveChildCollectionsAtIndexes:toIndex:
public override void MoveChildCollections
removeChildCollections:
public override void RemoveChildCollections
removeChildCollectionsAtIndexes:
public override void RemoveChildCollections
replaceChildCollectionsAtIndexes:withChildCollections:
public override void ReplaceChildCollection
placeholderForCreatedCollectionList
/* property */ public override PHObjectPlaceholder get_PlaceholderForCreatedCollectionList
adjustmentData
/* property */ public override PHAdjustmentData get_AdjustmentData
avAsset
/* property */ public override AVAsset get_AvAsset
displaySizeImage
/* property */ public override UIImage get_DisplaySizeImage
fullSizeImageOrientation
/* property */ public override CIImageOrientation get_FullSizeImageOrientation
fullSizeImageURL
/* property */ public override NSUrl get_FullSizeImageUrl
uniformTypeIdentifier
/* property */ public override string get_UniformTypeIdentifier
setAdjustmentData:
/* property */ public override void set_AdjustmentData
renderedContentURL
/* property */ public override NSUrl get_RenderedContentUrl
includeAllBurstAssets
/* property */ public override bool get_IncludeAllBurstAssets
setIncludeAllBurstAssets:
/* property */ public override void set_IncludeAllBurstAssets
includeHiddenAssets
/* property */ public override bool get_IncludeHiddenAssets
setIncludeHiddenAssets:
/* property */ public override void set_IncludeHiddenAssets
wantsIncrementalChangeDetails
/* property */ public override bool get_WantsIncrementalChangeDetails
setWantsIncrementalChangeDetails:
/* property */ public override void set_WantsIncrementalChangeDetails
deliveryMode
/* property */ public override PHVideoRequestOptionsDeliveryMode get_DeliveryMode
setDeliveryMode:
/* property */ public override void set_DeliveryMode
normalizedCropRect
/* property */ public override CGRect get_NormalizedCropRect
setNormalizedCropRect:
/* property */ public override void set_NormalizedCropRect
progressHandler
/* property */ public override PHAssetVideoProgressHandler get_ProgressHandler
resizeMode
/* property */ public override PHImageRequestOptionsResizeMode get_ResizeMode
setResizeMode:
/* property */ public override void set_ResizeMode
isSynchronous
/* property */ public override bool get_Synchronous
setSynchronous:
/* property */ public override void set_Synchronous
setVersion:
/* property */ public override void set_Version
cancelImageRequest:
public override void CancelImageRequest
requestAVAssetForVideo:options:resultHandler:
public override int RequestAvAsset
requestExportSessionForVideo:options:exportPreset:resultHandler:
public override int RequestExportSession
requestImageDataForAsset:options:resultHandler:
public override int RequestImageData
requestImageForAsset:targetSize:contentMode:options:resultHandler:
public override int RequestImageForAsset
requestPlayerItemForVideo:options:resultHandler:
public override int RequestPlayerItem
startCachingImagesForAssets:targetSize:contentMode:options:
public override void StartCaching
stopCachingImagesForAssets:targetSize:contentMode:options:
public override void StopCaching
stopCachingImagesForAllAssets
public override void StopCaching
allowsCachingHighQualityImages
/* property */ public override bool get_AllowsCachingHighQualityImages
setAllowsCachingHighQualityImages:
/* property */ public override void set_AllowsCachingHighQualityImages
photoLibraryDidChange:
public override void PhotoLibraryDidChange
canHandleAdjustmentData:
public override bool CanHandleAdjustmentData
startContentEditingWithInput:placeholderImage:
public override void StartContentEditing
finishContentEditingWithCompletionHandler:
public override void FinishContentEditing
cancelContentEditing
public override void CancelContentEditing
shouldShowCancelConfirmation
/* property */ public override bool get_ShouldShowCancelConfirmation
dictionaryPayload
/* property */ public override NSDictionary get_DictionaryPayload
pushTokenForType:
public override NSData PushToken
desiredPushTypes
/* property */ public override NSSet get_DesiredPushTypes
setDesiredPushTypes:
/* property */ public override void set_DesiredPushTypes
pushRegistry:didUpdatePushCredentials:forType:
public override void DidUpdatePushCredentials
pushRegistry:didReceiveIncomingPushWithPayload:forType:
public override void DidReceiveIncomingPush
pushRegistry:didInvalidatePushTokenForType:
public override void DidInvalidatePushToken
addReadingListItemWithURL:title:previewText:error:
public override bool Add
supportsURL:
public bool SupportsUrl
defaultReadingList
/* property */ public SSReadingList get_DefaultReadingList
addMultiPartData:withName:type:
public override void AddMultiPartData
signedURLRequest
/* property */ public override NSUrlRequest get_SignedUrlRequest
canSendTweet
/* property */ public bool get_CanSendTweet
attributedStringWithAttachment:
NSAttributedString FromTextAttachment
persistentIdentifierForItemAtURL:
public override string GetPersistentIdentifier
placeholderURLForURL:
public NSUrl GetPlaceholderUrl
URLForItemWithPersistentIdentifier:
public override NSUrl GetUrlForItem
itemChangedAtURL:
public override void ItemChangedAtUrl
providePlaceholderAtURL:completionHandler:
public override void ProvidePlaceholderAtUrl
startProvidingItemAtURL:completionHandler:
public override void StartProvidingItemAtUrl
stopProvidingItemAtURL:
public override void StopProvidingItemAtUrl
writePlaceholderAtURL:withMetadata:error:
public bool WritePlaceholder
documentStorageURL
/* property */ public override NSUrl get_DocumentStorageUrl
providerIdentifier
/* property */ public override string get_ProviderIdentifier
fixAttributesInRange:
public void FixAttributesInRange
defaultWritingDirectionForLanguage:
public NSWritingDirection GetDefaultWritingDirection
alignment
/* property */ public override UITextAlignment get_Alignment
baseWritingDirection
/* property */ public override NSWritingDirection get_BaseWritingDirection
defaultParagraphStyle
/* property */ public NSParagraphStyle get_Default
defaultTabInterval
/* property */ public override nfloat get_DefaultTabInterval
firstLineHeadIndent
/* property */ public override nfloat get_FirstLineHeadIndent
headIndent
/* property */ public override nfloat get_HeadIndent
lineHeightMultiple
/* property */ public override nfloat get_LineHeightMultiple
lineSpacing
/* property */ public override nfloat get_LineSpacing
maximumLineHeight
/* property */ public override nfloat get_MaximumLineHeight
minimumLineHeight
/* property */ public override nfloat get_MinimumLineHeight
paragraphSpacing
/* property */ public override nfloat get_ParagraphSpacing
paragraphSpacingBefore
/* property */ public override nfloat get_ParagraphSpacingBefore
tabStops
/* property */ public override NSTextTab[] get_TabStops
tailIndent
/* property */ public override nfloat get_TailIndent
setAlignment:
/* property */ public override void set_Alignment
setBaseWritingDirection:
/* property */ public override void set_BaseWritingDirection
setDefaultTabInterval:
/* property */ public override void set_DefaultTabInterval
setFirstLineHeadIndent:
/* property */ public override void set_FirstLineHeadIndent
setHeadIndent:
/* property */ public override void set_HeadIndent
setLineHeightMultiple:
/* property */ public override void set_LineHeightMultiple
setLineSpacing:
/* property */ public override void set_LineSpacing
setMaximumLineHeight:
/* property */ public override void set_MaximumLineHeight
setMinimumLineHeight:
/* property */ public override void set_MinimumLineHeight
setParagraphSpacing:
/* property */ public override void set_ParagraphSpacing
setParagraphSpacingBefore:
/* property */ public override void set_ParagraphSpacingBefore
setTabStops:
/* property */ public override void set_TabStops
setTailIndent:
/* property */ public override void set_TailIndent
columnTerminatorsForLocale:
public NSCharacterSet GetColumnTerminators
shadowBlurRadius
/* property */ public override nfloat get_ShadowBlurRadius
setShadowBlurRadius:
/* property */ public override void set_ShadowBlurRadius
imageForBounds:textContainer:characterIndex:
public override UIImage GetImageForBounds
attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:
public override CGRect GetAttachmentBounds
fileType
/* property */ public override string get_FileType
setFileType:
/* property */ public override void set_FileType
fileWrapper
/* property */ public override NSFileWrapper get_FileWrapper
setFileWrapper:
/* property */ public override void set_FileWrapper
layoutOrientation
/* property */ public override NSTextLayoutOrientation get_LayoutOrientation
setLayoutOrientation:
/* property */ public override void set_LayoutOrientation
lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:
public override CGRect GetLineFragmentRect
exclusionPaths
/* property */ public override UIBezierPath[] get_ExclusionPaths
setExclusionPaths:
/* property */ public override void set_ExclusionPaths
heightTracksTextView
/* property */ public override bool get_HeightTracksTextView
setHeightTracksTextView:
/* property */ public override void set_HeightTracksTextView
setLayoutManager:
/* property */ public override void set_LayoutManager
lineFragmentPadding
/* property */ public override nfloat get_LineFragmentPadding
setLineFragmentPadding:
/* property */ public override void set_LineFragmentPadding
maximumNumberOfLines
/* property */ public override nuint get_MaximumNumberOfLines
setMaximumNumberOfLines:
/* property */ public override void set_MaximumNumberOfLines
widthTracksTextView
/* property */ public override bool get_WidthTracksTextView
setWidthTracksTextView:
/* property */ public override void set_WidthTracksTextView
addLayoutManager:
public override void AddLayoutManager
edited:range:changeInLength:
public override void Edited
ensureAttributesAreFixedInRange:
public override void EnsureAttributesAreFixed
invalidateAttributesInRange:
public override void InvalidateAttributes
processEditing
public override void ProcessEditing
removeLayoutManager:
public override void RemoveLayoutManager
changeInLength
/* property */ public override nint get_ChangeInLength
setChangeInLength:
/* property */ public override void set_ChangeInLength
editedMask
/* property */ public override NSTextStorageEditActions get_EditedMask
setEditedMask:
/* property */ public override void set_EditedMask
editedRange
/* property */ public override NSRange get_EditedRange
setEditedRange:
/* property */ public override void set_EditedRange
fixesAttributesLazily
/* property */ public override bool get_FixesAttributesLazily
layoutManagers
/* property */ public override NSObject[] get_LayoutManagers
textStorage:didProcessEditing:range:changeInLength:
public override void DidProcessEditing
textStorage:willProcessEditing:range:changeInLength:
public override void WillProcessEditing
layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:
public override CGRect BoundingBoxForControlGlyph
layoutManager:textContainer:didChangeGeometryFromSize:
public override void DidChangeGeometry
layoutManager:didCompleteLayoutForTextContainer:atEnd:
public override void DidCompleteLayout
layoutManagerDidInvalidateLayout:
public override void DidInvalidatedLayout
layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:
public override nfloat LineSpacingAfterGlyphAtIndex
layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:
public override nfloat ParagraphSpacingAfterGlyphAtIndex
layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:
public override nfloat ParagraphSpacingBeforeGlyphAtIndex
layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:
public override bool ShouldBreakLineByHyphenatingBeforeCharacter
layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:
public override bool ShouldBreakLineByWordBeforeCharacter
layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:
public override nuint ShouldGenerateGlyphs
layoutManager:shouldUseAction:forControlCharacterAtIndex:
public override NSControlCharacterAction ShouldUseAction
decodeCGAffineTransformForKey:
public CGAffineTransform DecodeCGAffineTransform
decodeCGPointForKey:
public CGPoint DecodeCGPoint
decodeCGRectForKey:
public CGRect DecodeCGRect
decodeCGSizeForKey:
public CGSize DecodeCGSize
decodeCGVectorForKey:
public CGVector DecodeCGVector
decodeUIEdgeInsetsForKey:
public UIEdgeInsets DecodeUIEdgeInsets
decodeUIOffsetForKey:
public UIOffset DecodeUIOffsetForKey
encodeCGPoint:forKey:
public void Encode
encodeCGVector:forKey:
public void Encode
encodeCGSize:forKey:
public void Encode
encodeCGRect:forKey:
public void Encode
encodeCGAffineTransform:forKey:
public void Encode
encodeUIEdgeInsets:forKey:
public void Encode
encodeUIOffset:forKey:
public void Encode
sharedAccelerometer
/* property */ public UIAccelerometer get_SharedAccelerometer
updateInterval
/* property */ public override Double get_UpdateInterval
setUpdateInterval:
/* property */ public override void set_UpdateInterval
accelerometer:didAccelerate:
public override void DidAccelerate
accessibilityContainer
/* property */ public override NSObject get_AccessibilityContainer
setAccessibilityContainer:
/* property */ public override void set_AccessibilityContainer
actionSheetCancel:
public override void Canceled
actionSheet:clickedButtonAtIndex:
public override void Clicked
actionSheet:didDismissWithButtonIndex:
public override void Dismissed
didPresentActionSheet:
public override void Presented
actionSheet:willDismissWithButtonIndex:
public override void WillDismiss
willPresentActionSheet:
public override void WillPresent
canPerformWithActivityItems:
public override bool CanPerform
activityDidFinish:
public override void Finished
performActivity
public override void Perform
prepareWithActivityItems:
public override void Prepare
activityCategory
/* property */ public UIActivityCategory get_Category
activityImage
/* property */ public override UIImage get_Image
activityTitle
/* property */ public override string get_Title
activityViewController
/* property */ public override UIViewController get_ViewController
enableInputClicksWhenVisible
/* property */ public override bool get_EnableInputClicksWhenVisible
activityViewController:dataTypeIdentifierForActivityType:
public override string GetDataTypeIdentifierForActivity
activityViewController:itemForActivityType:
public override NSObject GetItemForActivity
activityViewControllerPlaceholderItem:
public override NSObject GetPlaceholderData
activityViewController:subjectForActivityType:
public override string GetSubjectForActivity
activityViewController:thumbnailImageForActivityType:suggestedSize:
public override UIImage GetThumbnailImageForActivity
placeholderItem
/* property */ public override NSObject get_PlaceholderItem
setCompletionWithItemsHandler:
public override void SetCompletionHandler
excludedActivityTypes
/* property */ public override NSString[] get_ExcludedActivityTypes
setExcludedActivityTypes:
/* property */ public override void set_ExcludedActivityTypes
actionWithTitle:style:handler:
public UIAlertAction Create
addAction:
public override void AddAction
addTextFieldWithConfigurationHandler:
public override void AddTextField
alertControllerWithTitle:message:preferredStyle:
public UIAlertController Create
preferredStyle
/* property */ public override UIAlertControllerStyle get_PreferredStyle
textFields
/* property */ public override UITextField[] get_TextFields
alertViewCancel:
public override void Canceled
alertView:clickedButtonAtIndex:
public override void Clicked
alertView:didDismissWithButtonIndex:
public override void Dismissed
didPresentAlertView:
public override void Presented
alertViewShouldEnableFirstOtherButton:
public override bool ShouldEnableFirstOtherButton
alertView:willDismissWithButtonIndex:
public override void WillDismiss
willPresentAlertView:
public override void WillPresent
objectRestorationClass
/* property */ public override Class get_ObjectRestorationClass
restorationParent
/* property */ public override IUIStateRestoring get_RestorationParent
attachedBehaviorType
/* property */ public override UIAttachmentBehaviorType get_AttachedBehaviorType
applyLayoutAttributes:
public override void ApplyLayoutAttributes
didTransitionFromLayout:toLayout:
public override void DidTransition
preferredLayoutAttributesFittingAttributes:
public override UICollectionViewLayoutAttributes PreferredLayoutAttributesFittingAttributes
willTransitionFromLayout:toLayout:
public override void WillTransition
collectionView:numberOfItemsInSection:
public override nint GetItemsCount
collectionView:cellForItemAtIndexPath:
public override UICollectionViewCell GetCell
collectionView:canPerformAction:forItemAtIndexPath:withSender:
public override bool CanPerformAction
collectionView:didEndDisplayingCell:forItemAtIndexPath:
public override void CellDisplayingEnded
scrollViewDidEndDecelerating:
public override void DecelerationEnded
scrollViewWillBeginDecelerating:
public override void DecelerationStarted
scrollViewDidZoom:
public override void DidZoom
scrollViewDidEndDragging:willDecelerate:
public override void DraggingEnded
scrollViewWillBeginDragging:
public override void DraggingStarted
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
public override UICollectionReusableView GetViewForSupplementaryElement
collectionView:didDeselectItemAtIndexPath:
public override void ItemDeselected
collectionView:didHighlightItemAtIndexPath:
public override void ItemHighlighted
collectionView:didSelectItemAtIndexPath:
public override void ItemSelected
collectionView:didUnhighlightItemAtIndexPath:
public override void ItemUnhighlighted
numberOfSectionsInCollectionView:
public override nint NumberOfSections
collectionView:performAction:forItemAtIndexPath:withSender:
public override void PerformAction
scrollViewDidEndScrollingAnimation:
public override void ScrollAnimationEnded
scrollViewDidScroll:
public override void Scrolled
scrollViewDidScrollToTop:
public override void ScrolledToTop
collectionView:shouldDeselectItemAtIndexPath:
public override bool ShouldDeselectItem
collectionView:shouldHighlightItemAtIndexPath:
public override bool ShouldHighlightItem
scrollViewShouldScrollToTop:
public override bool ShouldScrollToTop
collectionView:shouldSelectItemAtIndexPath:
public override bool ShouldSelectItem
collectionView:shouldShowMenuForItemAtIndexPath:
public override bool ShouldShowMenu
collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:
public override void SupplementaryViewDisplayingEnded
collectionView:transitionLayoutForOldLayout:newLayout:
public override UICollectionViewTransitionLayout TransitionLayout
viewForZoomingInScrollView:
public override UIView ViewForZoomingInScrollView
collectionView:willDisplayCell:forItemAtIndexPath:
public override void WillDisplayCell
collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:
public override void WillDisplaySupplementaryView
scrollViewWillEndDragging:withVelocity:targetContentOffset:
public override void WillEndDragging
scrollViewDidEndZooming:withView:atScale:
public override void ZoomingEnded
scrollViewWillBeginZooming:withView:
public override void ZoomingStarted
clearsSelectionOnViewWillAppear
/* property */ public override bool get_ClearsSelectionOnViewWillAppear
setClearsSelectionOnViewWillAppear:
/* property */ public override void set_ClearsSelectionOnViewWillAppear
setCollectionView:
/* property */ public override void set_CollectionView
useLayoutToLayoutNavigationTransitions
/* property */ public override bool get_UseLayoutToLayoutNavigationTransitions
setUseLayoutToLayoutNavigationTransitions:
/* property */ public override void set_UseLayoutToLayoutNavigationTransitions
collectionView:layout:insetForSectionAtIndex:
public override UIEdgeInsets GetInsetForSection
collectionView:layout:minimumInteritemSpacingForSectionAtIndex:
public override nfloat GetMinimumInteritemSpacingForSection
collectionView:layout:minimumLineSpacingForSectionAtIndex:
public override nfloat GetMinimumLineSpacingForSection
collectionView:layout:referenceSizeForFooterInSection:
public override CGSize GetReferenceSizeForFooter
collectionView:layout:referenceSizeForHeaderInSection:
public override CGSize GetReferenceSizeForHeader
collectionView:layout:sizeForItemAtIndexPath:
public override CGSize GetSizeForItem
estimatedItemSize
/* property */ public override CGSize get_EstimatedItemSize
setEstimatedItemSize:
/* property */ public override void set_EstimatedItemSize
footerReferenceSize
/* property */ public override CGSize get_FooterReferenceSize
setFooterReferenceSize:
/* property */ public override void set_FooterReferenceSize
headerReferenceSize
/* property */ public override CGSize get_HeaderReferenceSize
setHeaderReferenceSize:
/* property */ public override void set_HeaderReferenceSize
itemSize
/* property */ public override CGSize get_ItemSize
setItemSize:
/* property */ public override void set_ItemSize
minimumInteritemSpacing
/* property */ public override nfloat get_MinimumInteritemSpacing
setMinimumInteritemSpacing:
/* property */ public override void set_MinimumInteritemSpacing
minimumLineSpacing
/* property */ public override nfloat get_MinimumLineSpacing
setMinimumLineSpacing:
/* property */ public override void set_MinimumLineSpacing
scrollDirection
/* property */ public override UICollectionViewScrollDirection get_ScrollDirection
setScrollDirection:
/* property */ public override void set_ScrollDirection
sectionInset
/* property */ public override UIEdgeInsets get_SectionInset
setSectionInset:
/* property */ public override void set_SectionInset
invalidateDecorationElementsOfKind:atIndexPaths:
public override void InvalidateDecorationElements
invalidateItemsAtIndexPaths:
public override void InvalidateItems
invalidateSupplementaryElementsOfKind:atIndexPaths:
public override void InvalidateSupplementaryElements
contentOffsetAdjustment
/* property */ public override CGPoint get_ContentOffsetAdjustment
setContentOffsetAdjustment:
/* property */ public override void set_ContentOffsetAdjustment
contentSizeAdjustment
/* property */ public override CGSize get_ContentSizeAdjustment
setContentSizeAdjustment:
/* property */ public override void set_ContentSizeAdjustment
invalidateDataSourceCounts
/* property */ public override bool get_InvalidateDataSourceCounts
invalidatedDecorationIndexPaths
/* property */ public override NSDictionary get_InvalidatedDecorationIndexPaths
invalidatedItemIndexPaths
/* property */ public override NSIndexPath[] get_InvalidatedItemIndexPaths
invalidatedSupplementaryIndexPaths
/* property */ public override NSDictionary get_InvalidatedSupplementaryIndexPaths
invalidateEverything
/* property */ public override bool get_InvalidateEverything
invalidateFlowLayoutAttributes
/* property */ public override bool get_InvalidateFlowLayoutAttributes
setInvalidateFlowLayoutAttributes:
/* property */ public override void set_InvalidateFlowLayoutAttributes
invalidateFlowLayoutDelegateMetrics
/* property */ public override bool get_InvalidateFlowLayoutDelegateMetrics
setInvalidateFlowLayoutDelegateMetrics:
/* property */ public override void set_InvalidateFlowLayoutDelegateMetrics
valueForAnimatedKey:
public override nfloat GetValueForAnimatedKey
updateValue:forAnimatedKey:
public override void UpdateValue
currentLayout
/* property */ public override UICollectionViewLayout get_CurrentLayout
nextLayout
/* property */ public override UICollectionViewLayout get_NextLayout
transitionProgress
/* property */ public override nfloat get_TransitionProgress
setTransitionProgress:
/* property */ public override void set_TransitionProgress
indexPathAfterUpdate
/* property */ public override NSIndexPath get_IndexPathAfterUpdate
indexPathBeforeUpdate
/* property */ public override NSIndexPath get_IndexPathBeforeUpdate
updateAction
/* property */ public override UICollectionUpdateAction get_UpdateAction
addBoundaryWithIdentifier:forPath:
public override void AddBoundary
addBoundaryWithIdentifier:fromPoint:toPoint:
public override void AddBoundary
boundaryWithIdentifier:
public override UIBezierPath GetBoundary
removeAllBoundaries
public override void RemoveAllBoundaries
removeBoundaryWithIdentifier:
public override void RemoveBoundary
setTranslatesReferenceBoundsIntoBoundaryWithInsets:
public override void SetTranslatesReferenceBoundsIntoBoundaryWithInsets
boundaryIdentifiers
/* property */ public override NSObject[] get_BoundaryIdentifiers
collisionMode
/* property */ public override UICollisionBehaviorMode get_CollisionMode
setCollisionMode:
/* property */ public override void set_CollisionMode
translatesReferenceBoundsIntoBoundary
/* property */ public override bool get_TranslatesReferenceBoundsIntoBoundary
setTranslatesReferenceBoundsIntoBoundary:
/* property */ public override void set_TranslatesReferenceBoundsIntoBoundary
collisionDelegate
/* property */ public override NSObject get_WeakCollisionDelegate
setCollisionDelegate:
/* property */ public override void set_WeakCollisionDelegate
collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:
public override void BeganBoundaryContact
collisionBehavior:beganContactForItem:withItem:atPoint:
public override void BeganContact
collisionBehavior:endedContactForItem:withBoundaryIdentifier:
public override void EndedBoundaryContact
collisionBehavior:endedContactForItem:withItem:
public override void EndedContact
autosaveWithCompletionHandler:
public override void AutoSave
changeCountTokenForSaveOperation:
public override NSObject ChangeCountTokenForSaveOperation
closeWithCompletionHandler:
public override void Close
contentsForType:error:
public override NSObject ContentsForType
disableEditing
public override void DisableEditing
enableEditing
public override void EnableEditing
finishedHandlingError:recovered:
public override void FinishedHandlingError
fileAttributesToWriteToURL:forSaveOperation:error:
public override NSDictionary GetFileAttributesToWrite
fileNameExtensionForType:saveOperation:
public override string GetFileNameExtension
handleError:userInteractionPermitted:
public override void HandleError
loadFromContents:ofType:error:
public override bool LoadFromContents
openWithCompletionHandler:
public override void Open
performAsynchronousFileAccessUsingBlock:
public override void PerformAsynchronousFileAccess
readFromURL:error:
public override bool Read
revertToContentsOfURL:completionHandler:
public override void RevertToContentsOfUrl
saveToURL:forSaveOperation:completionHandler:
public override void Save
updateChangeCount:
public override void UpdateChangeCount
updateChangeCountWithToken:forSaveOperation:
public override void UpdateChangeCount
userInteractionNoLongerPermittedForError:
public override void UserInteractionNoLongerPermittedForError
writeContents:andAttributes:safelyToURL:forSaveOperation:error:
public override bool WriteContents
writeContents:toURL:forSaveOperation:originalContentsURL:error:
public override bool WriteContents
documentState
/* property */ public override UIDocumentState get_DocumentState
fileModificationDate
/* property */ public override NSDate get_FileModificationDate
setFileModificationDate:
/* property */ public override void set_FileModificationDate
hasUnsavedChanges
/* property */ public override bool get_HasUnsavedChanges
savingFileType
/* property */ public override string get_SavingFileType
dynamicAnimatorWillResume:
public override void WillResume
dynamicAnimatorDidPause:
public override void DidPause
addAngularVelocity:forItem:
public override void AddAngularVelocityForItem
addLinearVelocity:forItem:
public override void AddLinearVelocityForItem
angularVelocityForItem:
public override nfloat GetAngularVelocityForItem
linearVelocityForItem:
public override CGPoint GetLinearVelocityForItem
angularResistance
/* property */ public override nfloat get_AngularResistance
setAngularResistance:
/* property */ public override void set_AngularResistance
elasticity
/* property */ public override nfloat get_Elasticity
setElasticity:
/* property */ public override void set_Elasticity
resistance
/* property */ public override nfloat get_Resistance
setResistance:
/* property */ public override void set_Resistance
addChildBehavior:
public override void AddChildBehavior
removeChildBehavior:
public override void RemoveChildBehavior
willMoveToAnimator:
public override void WillMoveToAnimator
childBehaviors
/* property */ public override UIDynamicBehavior[] get_ChildBehaviors
dynamicAnimator
/* property */ public override UIDynamicAnimator get_DynamicAnimator
gravityDirection
/* property */ public override CGVector get_GravityDirection
setGravityDirection:
/* property */ public override void set_GravityDirection
keyCommandWithInput:modifierFlags:action:
public UIKeyCommand Create
modifierFlags
/* property */ public override UIKeyModifierFlags get_ModifierFlags
rangeEnclosingPosition:withGranularity:inDirection:
public override UITextRange GetRangeEnclosingPosition
isPosition:atBoundary:inDirection:
public override bool ProbeDirection
positionFromPosition:toBoundary:inDirection:
public override UITextPosition GetPosition
isPosition:withinTextUnit:inDirection:
public override bool ProbeDirectionWithinTextUnit
selectionWillChange:
public override void SelectionWillChange
selectionDidChange:
public override void SelectionDidChange
textWillChange:
public override void TextWillChange
textDidChange:
public override void TextDidChange
containsEnd
/* property */ public override bool get_ContainsEnd
containsStart
/* property */ public override bool get_ContainsStart
isVertical
/* property */ public override bool get_IsVertical
rect
/* property */ public override CGRect get_Rect
writingDirection
/* property */ public override UITextWritingDirection get_WritingDirection
entries
/* property */ public override UILexiconEntry[] get_Entries
documentText
/* property */ public override string get_DocumentText
userInput
/* property */ public override string get_UserInput
currentCollation
public UILocalizedIndexedCollation CurrentCollation
sectionForObject:collationStringSelector:
public override nint GetSectionForObject
sectionForSectionIndexTitleAtIndex:
public override nint GetSectionForSectionIndexTitle
sortedArrayFromArray:collationStringSelector:
public override NSObject[] SortedArrayFromArraycollationStringSelector
sectionIndexTitles
/* property */ public override string[] get_SectionIndexTitles
sectionTitles
/* property */ public override string[] get_SectionTitles
alertAction
/* property */ public override string get_AlertAction
setAlertAction:
/* property */ public override void set_AlertAction
alertTitle
/* property */ public override string get_AlertTitle
setAlertTitle:
/* property */ public override void set_AlertTitle
hasAction
/* property */ public override bool get_HasAction
setHasAction:
/* property */ public override void set_HasAction
regionTriggersOnce
/* property */ public override bool get_RegionTriggersOnce
setRegionTriggersOnce:
/* property */ public override void set_RegionTriggersOnce
repeatCalendar
/* property */ public override NSCalendar get_RepeatCalendar
setRepeatCalendar:
/* property */ public override void set_RepeatCalendar
repeatInterval
/* property */ public override NSCalendarUnit get_RepeatInterval
setRepeatInterval:
/* property */ public override void set_RepeatInterval
beginRefreshing
public override void BeginRefreshing
endRefreshing
public override void EndRefreshing
isRefreshing
/* property */ public override bool get_Refreshing
startAnimating
public override void StartAnimating
stopAnimating
public override void StopAnimating
activityIndicatorViewStyle
/* property */ public override UIActivityIndicatorViewStyle get_ActivityIndicatorViewStyle
setActivityIndicatorViewStyle:
/* property */ public override void set_ActivityIndicatorViewStyle
hidesWhenStopped
/* property */ public override bool get_HidesWhenStopped
setHidesWhenStopped:
/* property */ public override void set_HidesWhenStopped
isAnimating
/* property */ public override bool get_IsAnimating
imageWithTraitCollection:
public override UIImage FromTraitCollection
registerImage:withTraitCollection:
public override void RegisterImage
unregisterImageWithTraitCollection:
public override void UnregisterImageWithTraitCollection
positionForBar:
public override UIBarPosition GetPositionForBar
textRectForBounds:limitedToNumberOfLines:
public override CGRect TextRectForBounds
adjustsLetterSpacingToFitWidth
/* property */ public override bool get_AdjustsLetterSpacingToFitWidth
setAdjustsLetterSpacingToFitWidth:
/* property */ public override void set_AdjustsLetterSpacingToFitWidth
baselineAdjustment
/* property */ public override UIBaselineAdjustment get_BaselineAdjustment
setBaselineAdjustment:
/* property */ public override void set_BaselineAdjustment
highlightedTextColor
/* property */ public override UIColor get_HighlightedTextColor
setHighlightedTextColor:
/* property */ public override void set_HighlightedTextColor
numberOfLines
/* property */ public override nint get_Lines
setNumberOfLines:
/* property */ public override void set_Lines
preferredMaxLayoutWidth
/* property */ public override nfloat get_PreferredMaxLayoutWidth
setPreferredMaxLayoutWidth:
/* property */ public override void set_PreferredMaxLayoutWidth
animationImages
/* property */ public override UIImage[] get_AnimationImages
setAnimationImages:
/* property */ public override void set_AnimationImages
animationRepeatCount
/* property */ public override nint get_AnimationRepeatCount
highlightedAnimationImages
/* property */ public override UIImage[] get_HighlightedAnimationImages
setHighlightedAnimationImages:
/* property */ public override void set_HighlightedAnimationImages
highlightedImage
/* property */ public override UIImage get_HighlightedImage
setHighlightedImage:
/* property */ public override void set_HighlightedImage
setDate:animated:
public override void SetDate
countDownDuration
/* property */ public override Double get_CountDownDuration
setCountDownDuration:
/* property */ public override void set_CountDownDuration
setDate:
public override void SetDate
maximumDate
/* property */ public override NSDate get_MaximumDate
setMaximumDate:
/* property */ public override void set_MaximumDate
minimumDate
/* property */ public override NSDate get_MinimumDate
setMinimumDate:
/* property */ public override void set_MinimumDate
minuteInterval
/* property */ public override nint get_MinuteInterval
setMinuteInterval:
/* property */ public override void set_MinuteInterval
datePickerMode
/* property */ public override UIDatePickerMode get_Mode
setDatePickerMode:
/* property */ public override void set_Mode
alternativeInterpretations
/* property */ public override string[] get_AlternativeInterpretations
documentInteractionController:canPerformAction:
public override bool CanPerformAction
documentInteractionControllerDidDismissOpenInMenu:
public override void DidDismissOpenInMenu
documentInteractionControllerDidDismissOptionsMenu:
public override void DidDismissOptionsMenu
documentInteractionControllerDidEndPreview:
public override void DidEndPreview
documentInteractionController:didEndSendingToApplication:
public override void DidEndSendingToApplication
documentInteractionController:performAction:
public override bool PerformAction
documentInteractionControllerRectForPreview:
public override CGRect RectangleForPreview
documentInteractionControllerViewControllerForPreview:
public override UIViewController ViewControllerForPreview
documentInteractionControllerViewForPreview:
public override UIView ViewForPreview
documentInteractionControllerWillBeginPreview:
public override void WillBeginPreview
documentInteractionController:willBeginSendingToApplication:
public override void WillBeginSendingToApplication
documentInteractionControllerWillPresentOpenInMenu:
public override void WillPresentOpenInMenu
documentInteractionControllerWillPresentOptionsMenu:
public override void WillPresentOptionsMenu
imagePickerControllerDidCancel:
public override void Canceled
imagePickerController:didFinishPickingImage:editingInfo:
public override void FinishedPickingImage
imagePickerController:didFinishPickingMediaWithInfo:
public override void FinishedPickingMedia
additionalContentForURL:error:
public override NSObject AdditionalContent
configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:
public override bool ConfigurePersistentStoreCoordinator
persistentStoreTypeForFileType:
public override string GetPersistentStoreType
readAdditionalContentFromURL:error:
public override bool ReadAdditionalContent
writeAdditionalContent:toURL:originalContentsURL:error:
public override bool WriteAdditionalContent
modelConfiguration
/* property */ public override string get_ModelConfiguration
setModelConfiguration:
/* property */ public override void set_ModelConfiguration
persistentStoreName
/* property */ public string get_PersistentStoreName
persistentStoreOptions
/* property */ public override NSDictionary get_PersistentStoreOptions
setPersistentStoreOptions:
/* property */ public override void set_PersistentStoreOptions
setMenuVisible:animated:
public override void SetMenuVisible
setTargetRect:inView:
public override void SetTargetRect
setArrowDirection:
/* property */ public override void set_ArrowDirection
menuFrame
/* property */ public override CGRect get_MenuFrame
menuItems
/* property */ public override UIMenuItem[] get_MenuItems
setMenuItems:
/* property */ public override void set_MenuItems
isMenuVisible
/* property */ public override bool get_MenuVisible
setMenuVisible:
/* property */ public override void set_MenuVisible
sharedMenuController
/* property */ public UIMenuController get_SharedMenuController
navigationBar:didPopItem:
public override void DidPopItem
navigationBar:didPushItem:
public override void DidPushItem
navigationBar:shouldPopItem:
public override bool ShouldPopItem
navigationBar:shouldPushItem:
public override bool ShouldPushItem
setHidesBackButton:animated:
public override void SetHidesBackButton
setLeftBarButtonItem:animated:
public override void SetLeftBarButtonItem
setLeftBarButtonItems:animated:
public override void SetLeftBarButtonItems
setRightBarButtonItem:animated:
public override void SetRightBarButtonItem
setRightBarButtonItems:animated:
public override void SetRightBarButtonItems
backBarButtonItem
/* property */ public override UIBarButtonItem get_BackBarButtonItem
setBackBarButtonItem:
/* property */ public override void set_BackBarButtonItem
hidesBackButton
/* property */ public override bool get_HidesBackButton
setHidesBackButton:
/* property */ public override void set_HidesBackButton
leftBarButtonItem
/* property */ public override UIBarButtonItem get_LeftBarButtonItem
setLeftBarButtonItem:
/* property */ public override void set_LeftBarButtonItem
leftBarButtonItems
/* property */ public override UIBarButtonItem[] get_LeftBarButtonItems
setLeftBarButtonItems:
/* property */ public override void set_LeftBarButtonItems
leftItemsSupplementBackButton
/* property */ public override bool get_LeftItemsSupplementBackButton
setLeftItemsSupplementBackButton:
/* property */ public override void set_LeftItemsSupplementBackButton
rightBarButtonItem
/* property */ public override UIBarButtonItem get_RightBarButtonItem
setRightBarButtonItem:
/* property */ public override void set_RightBarButtonItem
rightBarButtonItems
/* property */ public override UIBarButtonItem[] get_RightBarButtonItems
setRightBarButtonItems:
/* property */ public override void set_RightBarButtonItems
titleView
/* property */ public override UIView get_TitleView
setTitleView:
/* property */ public override void set_TitleView
navigationController:didShowViewController:animated:
public override void DidShowViewController
navigationController:animationControllerForOperation:fromViewController:toViewController:
public override IUIViewControllerAnimatedTransitioning GetAnimationControllerForOperation
navigationController:interactionControllerForAnimationController:
public override IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController
navigationControllerPreferredInterfaceOrientationForPresentation:
public override UIInterfaceOrientation GetPreferredInterfaceOrientation
navigationControllerSupportedInterfaceOrientations:
public override UIInterfaceOrientationMask SupportedInterfaceOrientations
navigationController:willShowViewController:animated:
public override void WillShowViewController
sizeForNumberOfPages:
public override CGSize SizeForNumberOfPages
updateCurrentPageDisplay
public override void UpdateCurrentPageDisplay
currentPage
/* property */ public override nint get_CurrentPage
setCurrentPage:
/* property */ public override void set_CurrentPage
currentPageIndicatorTintColor
/* property */ public override UIColor get_CurrentPageIndicatorTintColor
setCurrentPageIndicatorTintColor:
/* property */ public override void set_CurrentPageIndicatorTintColor
defersCurrentPageDisplay
/* property */ public override bool get_DefersCurrentPageDisplay
setDefersCurrentPageDisplay:
/* property */ public override void set_DefersCurrentPageDisplay
hidesForSinglePage
/* property */ public override bool get_HidesForSinglePage
setHidesForSinglePage:
/* property */ public override void set_HidesForSinglePage
pageIndicatorTintColor
/* property */ public override UIColor get_PageIndicatorTintColor
setPageIndicatorTintColor:
/* property */ public override void set_PageIndicatorTintColor
numberOfPages
/* property */ public override nint get_NumberOfPages
setNumberOfPages:
/* property */ public override void set_Pages
pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:
public override void DidFinishAnimating
pageViewControllerPreferredInterfaceOrientationForPresentation:
public override UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation
pageViewController:spineLocationForInterfaceOrientation:
public override UIPageViewControllerSpineLocation GetSpineLocation
pageViewControllerSupportedInterfaceOrientations:
public override UIInterfaceOrientationMask SupportedInterfaceOrientations
pageViewController:willTransitionToViewControllers:
public override void WillTransition
pageViewController:viewControllerBeforeViewController:
public override UIViewController GetPreviousViewController
pageViewController:viewControllerAfterViewController:
public override UIViewController GetNextViewController
presentationCountForPageViewController:
public override nint GetPresentationCount
presentationIndexForPageViewController:
public override nint GetPresentationIndex
pickerView:attributedTitleForRow:forComponent:
public override NSAttributedString GetAttributedTitle
pickerView:widthForComponent:
public override nfloat GetComponentWidth
pickerView:rowHeightForComponent:
public override nfloat GetRowHeight
pickerView:titleForRow:forComponent:
public override string GetTitle
pickerView:viewForRow:forComponent:reusingView:
public override UIView GetView
pickerView:didSelectRow:inComponent:
public override void Selected
pickerView:accessibilityHintForComponent:
public override string GetAccessibilityHint
pickerView:accessibilityLabelForComponent:
public override string GetAccessibilityLabel
numberOfComponentsInPickerView:
public override nint GetComponentCount
pickerView:numberOfRowsInComponent:
public override nint GetRowsInComponent
adaptivePresentationStyle
public override UIModalPresentationStyle AdaptivePresentationStyle
adaptivePresentationStyleForTraitCollection:
public override UIModalPresentationStyle AdaptivePresentationStyle
containerViewDidLayoutSubviews
public override void ContainerViewDidLayoutSubviews
containerViewWillLayoutSubviews
public override void ContainerViewWillLayoutSubviews
dismissalTransitionDidEnd:
public override void DismissalTransitionDidEnd
dismissalTransitionWillBegin
public override void DismissalTransitionWillBegin
presentationTransitionDidEnd:
public override void PresentationTransitionDidEnd
presentationTransitionWillBegin
public override void PresentationTransitionWillBegin
containerView
/* property */ public override UIView get_ContainerView
frameOfPresentedViewInContainerView
/* property */ public override CGRect get_FrameOfPresentedViewInContainerView
overrideTraitCollection
/* property */ public override UITraitCollection get_OverrideTraitCollection
setOverrideTraitCollection:
/* property */ public override void set_OverrideTraitCollection
presentationStyle
/* property */ public override UIModalPresentationStyle get_PresentationStyle
presentedView
/* property */ public override UIView get_PresentedView
shouldPresentInFullscreen
/* property */ public override bool get_ShouldPresentInFullscreen
shouldRemovePresentersView
/* property */ public override bool get_ShouldRemovePresentersView
setProgress:animated:
public override void SetProgress
setProgress:
/* property */ public override void set_Progress
progressImage
/* property */ public override UIImage get_ProgressImage
setProgressImage:
/* property */ public override void set_ProgressImage
progressTintColor
/* property */ public override UIColor get_ProgressTintColor
setProgressTintColor:
/* property */ public override void set_ProgressTintColor
progressViewStyle
/* property */ public override UIProgressViewStyle get_Style
setProgressViewStyle:
/* property */ public override void set_Style
trackImage
/* property */ public override UIImage get_TrackImage
setTrackImage:
/* property */ public override void set_TrackImage
trackTintColor
/* property */ public override UIColor get_TrackTintColor
setTrackTintColor:
/* property */ public override void set_TrackTintColor
dictionaryHasDefinitionForTerm:
public bool DictionaryHasDefinitionForTerm
decreaseSize:
public void DecreaseSize
increaseSize:
public void IncreaseSize
flashScrollIndicators
public override void FlashScrollIndicators
scrollRectToVisible:animated:
public override void ScrollRectToVisible
setContentOffset:animated:
public override void SetContentOffset
setZoomScale:animated:
public override void SetZoomScale
touchesShouldBegin:withEvent:inContentView:
public override bool TouchesShouldBegin
touchesShouldCancelInContentView:
public override bool TouchesShouldCancelInContentView
zoomToRect:animated:
public override void ZoomToRect
alwaysBounceHorizontal
/* property */ public override bool get_AlwaysBounceHorizontal
setAlwaysBounceHorizontal:
/* property */ public override void set_AlwaysBounceHorizontal
alwaysBounceVertical
/* property */ public override bool get_AlwaysBounceVertical
setAlwaysBounceVertical:
/* property */ public override void set_AlwaysBounceVertical
bounces
/* property */ public override bool get_Bounces
setBounces:
/* property */ public override void set_Bounces
bouncesZoom
/* property */ public override bool get_BouncesZoom
setBouncesZoom:
/* property */ public override void set_BouncesZoom
canCancelContentTouches
/* property */ public override bool get_CanCancelContentTouches
setCanCancelContentTouches:
/* property */ public override void set_CanCancelContentTouches
contentInset
/* property */ public override UIEdgeInsets get_ContentInset
setContentInset:
/* property */ public override void set_ContentInset
contentOffset
/* property */ public override CGPoint get_ContentOffset
setContentOffset:
/* property */ public override void set_ContentOffset
contentSize
/* property */ public override CGSize get_ContentSize
setContentSize:
/* property */ public override void set_ContentSize
isDecelerating
/* property */ public override bool get_Decelerating
decelerationRate
/* property */ public override nfloat get_DecelerationRate
setDecelerationRate:
/* property */ public override void set_DecelerationRate
delaysContentTouches
/* property */ public override bool get_DelaysContentTouches
setDelaysContentTouches:
/* property */ public override void set_DelaysContentTouches
isDirectionalLockEnabled
/* property */ public override bool get_DirectionalLockEnabled
setDirectionalLockEnabled:
/* property */ public override void set_DirectionalLockEnabled
isDragging
/* property */ public override bool get_Dragging
indicatorStyle
/* property */ public override UIScrollViewIndicatorStyle get_IndicatorStyle
setIndicatorStyle:
/* property */ public override void set_IndicatorStyle
keyboardDismissMode
/* property */ public override UIScrollViewKeyboardDismissMode get_KeyboardDismissMode
setKeyboardDismissMode:
/* property */ public override void set_KeyboardDismissMode
maximumZoomScale
/* property */ public override nfloat get_MaximumZoomScale
setMaximumZoomScale:
/* property */ public override void set_MaximumZoomScale
minimumZoomScale
/* property */ public override nfloat get_MinimumZoomScale
setMinimumZoomScale:
/* property */ public override void set_MinimumZoomScale
isPagingEnabled
/* property */ public override bool get_PagingEnabled
setPagingEnabled:
/* property */ public override void set_PagingEnabled
panGestureRecognizer
/* property */ public override UIPanGestureRecognizer get_PanGestureRecognizer
pinchGestureRecognizer
/* property */ public override UIPinchGestureRecognizer get_PinchGestureRecognizer
scrollIndicatorInsets
/* property */ public override UIEdgeInsets get_ScrollIndicatorInsets
setScrollIndicatorInsets:
/* property */ public override void set_ScrollIndicatorInsets
scrollsToTop
/* property */ public override bool get_ScrollsToTop
setScrollsToTop:
/* property */ public override void set_ScrollsToTop
showsHorizontalScrollIndicator
/* property */ public override bool get_ShowsHorizontalScrollIndicator
setShowsHorizontalScrollIndicator:
/* property */ public override void set_ShowsHorizontalScrollIndicator
showsVerticalScrollIndicator
/* property */ public override bool get_ShowsVerticalScrollIndicator
setShowsVerticalScrollIndicator:
/* property */ public override void set_ShowsVerticalScrollIndicator
isZoomBouncing
/* property */ public override bool get_ZoomBouncing
isZooming
/* property */ public override bool get_Zooming
zoomScale
/* property */ public override nfloat get_ZoomScale
setZoomScale:
/* property */ public override void set_ZoomScale
accessibilityScrollStatusForScrollView:
public override string GetAccessibilityScrollStatus
searchBarBookmarkButtonClicked:
public override void BookmarkButtonClicked
searchBarCancelButtonClicked:
public override void CancelButtonClicked
searchBarResultsListButtonClicked:
public override void ListButtonClicked
searchBarTextDidBeginEditing:
public override void OnEditingStarted
searchBarTextDidEndEditing:
public override void OnEditingStopped
searchBarSearchButtonClicked:
public override void SearchButtonClicked
searchBar:selectedScopeButtonIndexDidChange:
public override void SelectedScopeButtonIndexChanged
searchBarShouldBeginEditing:
public override bool ShouldBeginEditing
searchBar:shouldChangeTextInRange:replacementText:
public override bool ShouldChangeTextInRange
searchBarShouldEndEditing:
public override bool ShouldEndEditing
searchBar:textDidChange:
public override void TextChanged
didDismissSearchController:
public override void DidDismissSearchController
didPresentSearchController:
public override void DidPresentSearchController
presentSearchController:
public override void PresentSearchController
willDismissSearchController:
public override void WillDismissSearchController
willPresentSearchController:
public override void WillPresentSearchController
searchDisplayControllerDidBeginSearch:
public override void DidBeginSearch
searchDisplayControllerDidEndSearch:
public override void DidEndSearch
searchDisplayController:didHideSearchResultsTableView:
public override void DidHideSearchResults
searchDisplayController:didLoadSearchResultsTableView:
public override void DidLoadSearchResults
searchDisplayController:didShowSearchResultsTableView:
public override void DidShowSearchResults
searchDisplayController:shouldReloadTableForSearchScope:
public override bool ShouldReloadForSearchScope
searchDisplayController:shouldReloadTableForSearchString:
public override bool ShouldReloadForSearchString
searchDisplayControllerWillBeginSearch:
public override void WillBeginSearch
searchDisplayControllerWillEndSearch:
public override void WillEndSearch
searchDisplayController:willHideSearchResultsTableView:
public override void WillHideSearchResults
searchDisplayController:willShowSearchResultsTableView:
public override void WillShowSearchResults
searchDisplayController:willUnloadSearchResultsTableView:
public override void WillUnloadSearchResults
updateSearchResultsForSearchController:
public override void UpdateSearchResultsForSearchController
maximumTrackImageForState:
public override UIImage MaxTrackImage
maximumValueImageRectForBounds:
public override CGRect MaxValueImageRectForBounds
minimumTrackImageForState:
public override UIImage MinTrackImage
minimumValueImageRectForBounds:
public override CGRect MinValueImageRectForBounds
setMaximumTrackImage:forState:
public override void SetMaxTrackImage
setMinimumTrackImage:forState:
public override void SetMinTrackImage
setThumbImage:forState:
public override void SetThumbImage
setValue:animated:
public override void SetValue
thumbImageForState:
public override UIImage ThumbImage
thumbRectForBounds:trackRect:value:
public override CGRect ThumbRectForBounds
trackRectForBounds:
public override CGRect TrackRectForBounds
isContinuous
/* property */ public override bool get_Continuous
setContinuous:
/* property */ public override void set_Continuous
currentMaximumTrackImage
/* property */ public override UIImage get_CurrentMaxTrackImage
currentMinimumTrackImage
/* property */ public override UIImage get_CurrentMinTrackImage
currentThumbImage
/* property */ public override UIImage get_CurrentThumbImage
maximumTrackTintColor
/* property */ public override UIColor get_MaximumTrackTintColor
setMaximumTrackTintColor:
/* property */ public override void set_MaximumTrackTintColor
setMaximumValue:
/* property */ public override void set_MaximumValue
maximumValueImage
/* property */ public override UIImage get_MaxValueImage
setMaximumValueImage:
/* property */ public override void set_MaxValueImage
minimumTrackTintColor
/* property */ public override UIColor get_MinimumTrackTintColor
setMinimumTrackTintColor:
/* property */ public override void set_MinimumTrackTintColor
setMinimumValue:
/* property */ public override void set_MinimumValue
minimumValueImage
/* property */ public override UIImage get_MinValueImage
setMinimumValueImage:
/* property */ public override void set_MinValueImage
thumbTintColor
/* property */ public override UIColor get_ThumbTintColor
setThumbTintColor:
/* property */ public override void set_ThumbTintColor
setOn:animated:
public override void SetState
offImage
/* property */ public override UIImage get_OffImage
setOffImage:
/* property */ public override void set_OffImage
isOn
/* property */ public override bool get_On
setOn:
public override void SetOn
onImage
/* property */ public override UIImage get_OnImage
setOnImage:
/* property */ public override void set_OnImage
onTintColor
/* property */ public override UIColor get_OnTintColor
setOnTintColor:
/* property */ public override void set_OnTintColor
beginCustomizingItems:
public override void BeginCustomizingItems
endCustomizingAnimated:
public override bool EndCustomizing
isCustomizing
/* property */ public override bool get_IsCustomizing
itemPositioning
/* property */ public override UITabBarItemPositioning get_ItemPositioning
setItemPositioning:
/* property */ public override void set_ItemPositioning
itemSpacing
/* property */ public override nfloat get_ItemSpacing
setItemSpacing:
/* property */ public override void set_ItemSpacing
itemWidth
/* property */ public override nfloat get_ItemWidth
setItemWidth:
/* property */ public override void set_ItemWidth
selectedImageTintColor
/* property */ public override UIColor get_SelectedImageTintColor
setSelectedImageTintColor:
/* property */ public override void set_SelectedImageTintColor
selectedItem
/* property */ public override UITabBarItem get_SelectedItem
setSelectedItem:
/* property */ public override void set_SelectedItem
selectionIndicatorImage
/* property */ public override UIImage get_SelectionIndicatorImage
setSelectionIndicatorImage:
/* property */ public override void set_SelectionIndicatorImage
tabBar:didBeginCustomizingItems:
public override void DidBeginCustomizingItems
tabBar:didEndCustomizingItems:changed:
public override void DidEndCustomizingItems
tabBar:didSelectItem:
public override void ItemSelected
tabBar:willBeginCustomizingItems:
public override void WillBeginCustomizingItems
tabBar:willEndCustomizingItems:changed:
public override void WillEndCustomizingItems
customizableViewControllers
/* property */ public override UIViewController[] get_CustomizableViewControllers
setCustomizableViewControllers:
/* property */ public override void set_CustomizableViewControllers
moreNavigationController
/* property */ public override UINavigationController get_MoreNavigationController
selectedIndex
/* property */ public override nint get_SelectedIndex
setSelectedIndex:
/* property */ public override void set_SelectedIndex
selectedViewController
/* property */ public override UIViewController get_SelectedViewController
setSelectedViewController:
/* property */ public override void set_SelectedViewController
tabBar
/* property */ public override UITabBar get_TabBar
tabBarController:didEndCustomizingViewControllers:changed:
public override void FinishedCustomizingViewControllers
tabBarController:animationControllerForTransitionFromViewController:toViewController:
public override IUIViewControllerAnimatedTransitioning GetAnimationControllerForTransition
tabBarController:interactionControllerForAnimationController:
public override IUIViewControllerInteractiveTransitioning GetInteractionControllerForAnimationController
tabBarControllerPreferredInterfaceOrientationForPresentation:
public override UIInterfaceOrientation GetPreferredInterfaceOrientation
tabBarController:willBeginCustomizingViewControllers:
public override void OnCustomizingViewControllers
tabBarController:willEndCustomizingViewControllers:changed:
public override void OnEndCustomizingViewControllers
tabBarController:shouldSelectViewController:
public override bool ShouldSelectViewController
tabBarControllerSupportedInterfaceOrientations:
public override UIInterfaceOrientationMask SupportedInterfaceOrientations
tabBarController:didSelectViewController:
public override void ViewControllerSelected
setFinishedSelectedImage:withFinishedUnselectedImage:
public override void SetFinishedImages
finishedSelectedImage
/* property */ public override UIImage get_FinishedSelectedImage
finishedUnselectedImage
/* property */ public override UIImage get_FinishedUnselectedImage
selectedImage
/* property */ public override UIImage get_SelectedImage
setSelectedImage:
/* property */ public override void set_SelectedImage
titlePositionAdjustment
/* property */ public override UIOffset get_TitlePositionAdjustment
setTitlePositionAdjustment:
/* property */ public override void set_TitlePositionAdjustment
tableView:accessoryButtonTappedForRowWithIndexPath:
public override void AccessoryButtonTapped
tableView:accessoryTypeForRowWithIndexPath:
public override UITableViewCellAccessory AccessoryForRow
tableView:canEditRowAtIndexPath:
public override bool CanEditRow
tableView:canMoveRowAtIndexPath:
public override bool CanMoveRow
tableView:canPerformAction:forRowAtIndexPath:withSender:
public override bool CanPerformAction
tableView:didEndDisplayingCell:forRowAtIndexPath:
public override void CellDisplayingEnded
tableView:commitEditingStyle:forRowAtIndexPath:
public override void CommitEditingStyle
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
public override NSIndexPath CustomizeMoveTarget
tableView:didEndEditingRowAtIndexPath:
public override void DidEndEditing
tableView:editActionsForRowAtIndexPath:
public override UITableViewRowAction[] EditActionsForRow
tableView:editingStyleForRowAtIndexPath:
public override UITableViewCellEditingStyle EditingStyleForRow
tableView:estimatedHeightForRowAtIndexPath:
public override nfloat EstimatedHeight
tableView:estimatedHeightForFooterInSection:
public override nfloat EstimatedHeightForFooter
tableView:estimatedHeightForHeaderInSection:
public override nfloat EstimatedHeightForHeader
tableView:didEndDisplayingFooterView:forSection:
public override void FooterViewDisplayingEnded
tableView:heightForFooterInSection:
public override nfloat GetHeightForFooter
tableView:heightForHeaderInSection:
public override nfloat GetHeightForHeader
tableView:heightForRowAtIndexPath:
public override nfloat GetHeightForRow
tableView:viewForFooterInSection:
public override UIView GetViewForFooter
tableView:viewForHeaderInSection:
public override UIView GetViewForHeader
tableView:didEndDisplayingHeaderView:forSection:
public override void HeaderViewDisplayingEnded
tableView:indentationLevelForRowAtIndexPath:
public override nint IndentationLevel
tableView:moveRowAtIndexPath:toIndexPath:
public override void MoveRow
numberOfSectionsInTableView:
public override nint NumberOfSections
tableView:performAction:forRowAtIndexPath:withSender:
public override void PerformAction
tableView:didDeselectRowAtIndexPath:
public override void RowDeselected
tableView:didHighlightRowAtIndexPath:
public override void RowHighlighted
tableView:didSelectRowAtIndexPath:
public override void RowSelected
tableView:didUnhighlightRowAtIndexPath:
public override void RowUnhighlighted
tableView:sectionForSectionIndexTitle:atIndex:
public override nint SectionFor
sectionIndexTitlesForTableView:
public override string[] SectionIndexTitles
tableView:shouldHighlightRowAtIndexPath:
public override bool ShouldHighlightRow
tableView:shouldIndentWhileEditingRowAtIndexPath:
public override bool ShouldIndentWhileEditing
tableView:shouldShowMenuForRowAtIndexPath:
public override bool ShouldShowMenu
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
public override string TitleForDeleteConfirmation
tableView:titleForFooterInSection:
public override string TitleForFooter
tableView:titleForHeaderInSection:
public override string TitleForHeader
tableView:willBeginEditingRowAtIndexPath:
public override void WillBeginEditing
tableView:willDeselectRowAtIndexPath:
public override NSIndexPath WillDeselectRow
tableView:willDisplayCell:forRowAtIndexPath:
public override void WillDisplay
tableView:willDisplayFooterView:forSection:
public override void WillDisplayFooterView
tableView:willDisplayHeaderView:forSection:
public override void WillDisplayHeaderView
tableView:willSelectRowAtIndexPath:
public override NSIndexPath WillSelectRow
refreshControl
/* property */ public override UIRefreshControl get_RefreshControl
setRefreshControl:
/* property */ public override void set_RefreshControl
tableView
/* property */ public override UITableView get_TableView
setTableView:
/* property */ public override void set_TableView
rowActionWithStyle:title:handler:
public UITableViewRowAction Create
backgroundEffect
/* property */ public override UIVisualEffect get_BackgroundEffect
setBackgroundEffect:
/* property */ public override void set_BackgroundEffect
textFieldDidEndEditing:
public override void EditingEnded
textFieldDidBeginEditing:
public override void EditingStarted
textFieldShouldBeginEditing:
public override bool ShouldBeginEditing
textField:shouldChangeCharactersInRange:replacementString:
public override bool ShouldChangeCharacters
textFieldShouldClear:
public override bool ShouldClear
textFieldShouldEndEditing:
public override bool ShouldEndEditing
textFieldShouldReturn:
public override bool ShouldReturn
previousLocationInView:
public override CGPoint PreviousLocationInView
majorRadius
/* property */ public override nfloat get_MajorRadius
majorRadiusTolerance
/* property */ public override nfloat get_MajorRadiusTolerance
phase
/* property */ public override UITouchPhase get_Phase
tapCount
/* property */ public override nint get_TapCount
canEditVideoAtPath:
public bool CanEditVideoAtPath
videoPath
/* property */ public override string get_VideoPath
setVideoPath:
/* property */ public override void set_VideoPath
videoEditorController:didFailWithError:
public override void Failed
videoEditorControllerDidCancel:
public override void UserCancelled
videoEditorController:didSaveEditedVideoToPath:
public override void VideoSaved
endEditing:
public bool EndEditing
updateInteractiveTransition:
public override void UpdateInteractiveTransition
completeTransition:
public override void CompleteTransition
viewControllerForKey:
public override UIViewController GetViewControllerForKey
initialFrameForViewController:
public override CGRect GetInitialFrameForViewController
finalFrameForViewController:
public override CGRect GetFinalFrameForViewController
viewForKey:
public override UIView GetTransitionViewControllerForKey
isAnimated
/* property */ public override bool get_IsAnimated
isInteractive
/* property */ public override bool get_IsInteractive
transitionWasCancelled
/* property */ public override bool get_TransitionWasCancelled
targetTransform
public override CGAffineTransform TargetTransform
containsTraitsInCollection:
public override bool Contains
traitCollectionWithDisplayScale:
public UITraitCollection FromDisplayScale
traitCollectionWithHorizontalSizeClass:
public UITraitCollection FromHorizontalSizeClass
traitCollectionWithTraitsFromCollections:
public UITraitCollection FromTraitsFromCollections
traitCollectionWithUserInterfaceIdiom:
public UITraitCollection FromUserInterfaceIdiom
traitCollectionWithVerticalSizeClass:
public UITraitCollection FromVerticalSizeClass
displayScale
/* property */ public override nfloat get_DisplayScale
horizontalSizeClass
/* property */ public override UIUserInterfaceSizeClass get_HorizontalSizeClass
verticalSizeClass
/* property */ public override UIUserInterfaceSizeClass get_VerticalSizeClass
startInteractiveTransition:
public override void StartInteractiveTransition
completionCurve
/* property */ public override UIViewAnimationCurve get_CompletionCurve
completionSpeed
/* property */ public override nfloat get_CompletionSpeed
setCompletionCurve:
/* property */ public override void set_CompletionCurve
setCompletionSpeed:
/* property */ public override void set_CompletionSpeed
initiallyInteractive
/* property */ public override bool get_InitiallyInteractive
transitionDuration
/* property */ public override Double get_TransitionDuration
completionVelocity
/* property */ public override nfloat get_CompletionVelocity
animateAlongsideTransition:completion:
public override bool AnimateAlongsideTransition
animateAlongsideTransitionInView:animation:completion:
public override bool AnimateAlongsideTransitionInView
notifyWhenInteractionEndsUsingBlock:
public override void NotifyWhenInteractionEndsUsingBlock
transitionCoordinator
public IUIViewControllerTransitionCoordinator GetTransitionCoordinator
stringByEvaluatingJavaScriptFromString:
public override string EvaluateJavascript
loadData:MIMEType:textEncodingName:baseURL:
public override void LoadData
gapBetweenPages
/* property */ public override nfloat get_GapBetweenPages
setGapBetweenPages:
/* property */ public override void set_GapBetweenPages
keyboardDisplayRequiresUserAction
/* property */ public override bool get_KeyboardDisplayRequiresUserAction
setKeyboardDisplayRequiresUserAction:
/* property */ public override void set_KeyboardDisplayRequiresUserAction
pageCount
/* property */ public override nint get_PageCount
pageLength
/* property */ public override nfloat get_PageLength
setPageLength:
/* property */ public override void set_PageLength
paginationBreakingMode
/* property */ public override UIWebPaginationBreakingMode get_PaginationBreakingMode
setPaginationBreakingMode:
/* property */ public override void set_PaginationBreakingMode
paginationMode
/* property */ public override UIWebPaginationMode get_PaginationMode
setPaginationMode:
/* property */ public override void set_PaginationMode
scalesPageToFit
/* property */ public override bool get_ScalesPageToFit
setScalesPageToFit:
/* property */ public override void set_ScalesPageToFit
webView:didFailLoadWithError:
public override void LoadFailed
webViewDidFinishLoad:
public override void LoadingFinished
webViewDidStartLoad:
public override void LoadStarted
webView:shouldStartLoadWithRequest:navigationType:
public override bool ShouldStartLoad
completionsForPartialWordRange:inString:language:
public override string[] CompletionsForPartialWordRange
guessesForWordRange:inString:language:
public override string[] GuessesForWordRange
hasLearnedWord:
public bool HasLearnedWord
ignoreWord:
public override void IgnoreWord
learnWord:
public void LearnWord
rangeOfMisspelledWordInString:range:startingAt:wrap:language:
public override NSRange RangeOfMisspelledWordInString
unlearnWord:
public void UnlearnWord
availableLanguages
/* property */ public string get_AvailableLangauges
ignoredWords
/* property */ public override string[] get_IgnoredWords
setIgnoredWords:
/* property */ public override void set_IgnoredWords
isCollapsed
/* property */ public override bool get_Collapsed
displayMode
/* property */ public override UISplitViewControllerDisplayMode get_DisplayMode
displayModeButtonItem
/* property */ public override UIBarButtonItem get_DisplayModeButtonItem
maximumPrimaryColumnWidth
/* property */ public override nfloat get_MaximumPrimaryColumnWidth
setMaximumPrimaryColumnWidth:
/* property */ public override void set_MaximumPrimaryColumnWidth
minimumPrimaryColumnWidth
/* property */ public override nfloat get_MinimumPrimaryColumnWidth
setMinimumPrimaryColumnWidth:
/* property */ public override void set_MinimumPrimaryColumnWidth
preferredDisplayMode
/* property */ public override UISplitViewControllerDisplayMode get_PreferredDisplayMode
setPreferredDisplayMode:
/* property */ public override void set_PreferredDisplayMode
preferredPrimaryColumnWidthFraction
/* property */ public override nfloat get_PreferredPrimaryColumnWidthFraction
setPreferredPrimaryColumnWidthFraction:
/* property */ public override void set_PreferredPrimaryColumnWidthFraction
presentsWithGesture
/* property */ public override bool get_PresentsWithGesture
setPresentsWithGesture:
/* property */ public override void set_PresentsWithGesture
primaryColumnWidth
/* property */ public override nfloat get_PrimaryColumnWidth
splitViewController:collapseSecondaryViewController:ontoPrimaryViewController:
public override bool CollapseSecondViewController
splitViewController:showDetailViewController:sender:
public override bool EventShowDetailViewController
splitViewController:showViewController:sender:
public override bool EventShowViewController
splitViewControllerPreferredInterfaceOrientationForPresentation:
public override UIInterfaceOrientation GetPreferredInterfaceOrientationForPresentation
primaryViewControllerForCollapsingSplitViewController:
public override UIViewController GetPrimaryViewControllerForCollapsingSplitViewController
primaryViewControllerForExpandingSplitViewController:
public override UIViewController GetPrimaryViewControllerForExpandingSplitViewController
targetDisplayModeForActionInSplitViewController:
public override UISplitViewControllerDisplayMode GetTargetDisplayModeForAction
splitViewController:separateSecondaryViewControllerFromPrimaryViewController:
public override UIViewController SeparateSecondaryViewController
splitViewController:shouldHideViewController:inOrientation:
public override bool ShouldHideViewController
splitViewControllerSupportedInterfaceOrientations:
public override UIInterfaceOrientationMask SupportedInterfaceOrientations
splitViewController:willChangeToDisplayMode:
public override void WillChangeDisplayMode
splitViewController:willHideViewController:withBarButtonItem:forPopoverController:
public override void WillHideViewController
splitViewController:popoverController:willPresentViewController:
public override void WillPresentViewController
splitViewController:willShowViewController:invalidatingBarButtonItem:
public override void WillShowViewController
collapseSecondaryViewController:forSplitViewController:
public void CollapseSecondaryViewController
separateSecondaryViewControllerForSplitViewController:
public UIViewController SeparateSecondaryViewControllerForSplitViewController
decrementImageForState:
public override UIImage GetDecrementImage
dividerImageForLeftSegmentState:rightSegmentState:
public override UIImage GetDividerImage
incrementImageForState:
public override UIImage GetIncrementImage
setDecrementImage:forState:
public override void SetDecrementImage
setDividerImage:forLeftSegmentState:rightSegmentState:
public override void SetDividerImage
setIncrementImage:forState:
public override void SetIncrementImage
autorepeat
/* property */ public override bool get_AutoRepeat
setAutorepeat:
/* property */ public override void set_AutoRepeat
setStepValue:
/* property */ public override void set_StepValue
wraps
/* property */ public override bool get_Wraps
setWraps:
/* property */ public override void set_Wraps
storyboardWithName:bundle:
public UIStoryboard FromName
instantiateInitialViewController
public override UIViewController InstantiateInitialViewController
instantiateViewControllerWithIdentifier:
public override UIViewController InstantiateViewController
popoverController
/* property */ public override UIPopoverController get_PopoverController
segueWithIdentifier:source:destination:performHandler:
public UIStoryboardSegue Create
perform
public override void Perform
destinationViewController
/* property */ public override UIViewController get_DestinationViewController
sourceViewController
/* property */ public override UIViewController get_SourceViewController
arrowBase
public nfloat GetArrowBase
arrowHeight
public nfloat GetArrowHeight
contentViewInsets
public UIEdgeInsets GetContentViewInsets
arrowOffset
/* property */ public override nfloat get_ArrowOffset
setArrowOffset:
/* property */ public override void set_ArrowOffset
wantsDefaultContentAppearance
/* property */ public bool get_WantsDefaultContentAppearance
popoverControllerDidDismissPopover:
public override void DidDismiss
popoverControllerShouldDismissPopover:
public override bool ShouldDismiss
popoverController:willRepositionPopoverToRect:inView:
public override void WillReposition
adaptivePresentationStyleForPresentationController:
public override UIModalPresentationStyle GetAdaptivePresentationStyle
adaptivePresentationStyleForPresentationController:traitCollection:
public override UIViewController GetAdaptivePresentationStyle
presentationController:viewControllerForAdaptivePresentationStyle:
public override UIViewController GetViewControllerForAdaptivePresentation
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
public override void WillPresent
popoverPresentationControllerDidDismissPopover:
public override void DidDismissPopover
prepareForPopoverPresentation:
public override void PrepareForPopoverPresentation
popoverPresentationControllerShouldDismissPopover:
public override bool ShouldDismissPopover
popoverPresentationController:willRepositionPopoverToRect:inView:
public override void WillRepositionPopover
activeInputModes
/* property */ public UITextInputMode[] get_ActiveInputModes
currentInputMode
/* property */ public UITextInputMode get_CurrentInputMode
primaryLanguage
/* property */ public override string get_PrimaryLanguage
contactPrinter:
public override void ContactPrinter
printerWithURL:
public UIPrinter FromUrl
displayLocation
/* property */ public override string get_DisplayLocation
makeAndModel
/* property */ public override string get_MakeAndModel
supportedJobTypes
/* property */ public override UIPrinterJobTypes get_SupportedJobTypes
supportsColor
/* property */ public override bool get_SupportsColor
supportsDuplex
/* property */ public override bool get_SupportsDuplex
printerPickerControllerWithInitiallySelectedPrinter:
public UIPrinterPickerController FromPrinter
selectedPrinter
/* property */ public override UIPrinter get_SelectedPrinter
printerPickerControllerDidDismiss:
public override void DidDismiss
printerPickerControllerDidPresent:
public override void DidPresent
printerPickerControllerDidSelectPrinter:
public override void DidSelectPrinter
printerPickerControllerParentViewController:
public override UIViewController GetParentViewController
printerPickerController:shouldShowPrinter:
public override bool ShouldShowPrinter
printerPickerControllerWillDismiss:
public override void WillDismiss
printerPickerControllerWillPresent:
public override void WillPresent
bestPaperForPageSize:withPapersFromArray:
public UIPrintPaper ForPageSize
paperSize
/* property */ public override CGSize get_PaperSize
printableRect
/* property */ public override CGRect get_PrintableRect
addPrintFormatter:startingAtPageAtIndex:
public override void AddPrintFormatter
drawContentForPageAtIndex:inRect:
public override void DrawContentForPage
drawFooterForPageAtIndex:inRect:
public override void DrawFooterForPage
drawHeaderForPageAtIndex:inRect:
public override void DrawHeaderForPage
drawPageAtIndex:inRect:
public override void DrawPage
drawPrintFormatter:forPageAtIndex:
public override void DrawPrintFormatterForPage
prepareForDrawingPages:
public override void PrepareForDrawingPages
printFormattersForPageAtIndex:
public override UIPrintFormatter[] PrintFormattersForPage
footerHeight
/* property */ public override nfloat get_FooterHeight
setFooterHeight:
/* property */ public override void set_FooterHeight
headerHeight
/* property */ public override nfloat get_HeaderHeight
setHeaderHeight:
/* property */ public override void set_HeaderHeight
paperRect
/* property */ public override CGRect get_PaperRect
printFormatters
/* property */ public override UIPrintFormatter[] get_PrintFormatters
setPrintFormatters:
/* property */ public override void set_PrintFormatters
printInteractionController:choosePaper:
public override UIPrintPaper ChoosePaper
printInteractionController:cutLengthForPaper:
public override nfloat CutLengthForPaper
printInteractionControllerDidDismissPrinterOptions:
public override void DidDismissPrinterOptions
printInteractionControllerDidFinishJob:
public override void DidFinishJob
printInteractionControllerDidPresentPrinterOptions:
public override void DidPresentPrinterOptions
printInteractionControllerParentViewController:
public override UIViewController GetViewController
printInteractionControllerWillDismissPrinterOptions:
public override void WillDismissPrinterOptions
printInteractionControllerWillPresentPrinterOptions:
public override void WillPresentPrinterOptions
printInteractionControllerWillStartJob:
public override void WillStartJob
printInfoWithDictionary:
public UIPrintInfo FromDictionary
duplex
/* property */ public override UIPrintInfoDuplex get_Duplex
setDuplex:
/* property */ public override void set_Duplex
jobName
/* property */ public override string get_JobName
setJobName:
/* property */ public override void set_JobName
outputType
/* property */ public override UIPrintInfoOutputType get_OutputType
setOutputType:
/* property */ public override void set_OutputType
printerID
/* property */ public override string get_PrinterID
setPrinterID:
/* property */ public override void set_PrinterID
effectWithStyle:
public UIBlurEffect FromStyle
effect
/* property */ public override UIVisualEffect get_Effect
drawInRect:forPageAtIndex:
public override void DrawRect
rectForPageAtIndex:
public override CGRect RectangleForPage
removeFromPrintPageRenderer
public override void RemoveFromPrintPageRenderer
contentInsets
/* property */ public override UIEdgeInsets get_ContentInsets
setContentInsets:
/* property */ public override void set_ContentInsets
maximumContentHeight
/* property */ public override nfloat get_MaximumContentHeight
setMaximumContentHeight:
/* property */ public override void set_MaximumContentHeight
maximumContentWidth
/* property */ public override nfloat get_MaximumContentWidth
setMaximumContentWidth:
/* property */ public override void set_MaximumContentWidth
perPageContentInsets
/* property */ public override UIEdgeInsets get_PerPageContentInsets
setPerPageContentInsets:
/* property */ public override void set_PerPageContentInsets
startPage
/* property */ public override nint get_StartPage
setStartPage:
/* property */ public override void set_StartPage
markupText
/* property */ public override string get_MarkupText
setMarkupText:
/* property */ public override void set_MarkupText
keyPathsAndRelativeValuesForViewerOffset:
public override NSDictionary ComputeKeyPathsAndRelativeValues
maximumRelativeValue
/* property */ public override NSObject get_MaximumRelativeValue
setMaximumRelativeValue:
/* property */ public override void set_MaximumRelativeValue
minimumRelativeValue
/* property */ public override NSObject get_MinimumRelativeValue
setMinimumRelativeValue:
/* property */ public override void set_MinimumRelativeValue
drawAtPoint:withAttributes:
public void WeakDrawString
drawInRect:withAttributes:
public void WeakDrawString
sizeWithAttributes:
public CGSize WeakGetSizeUsingAttributes
drawWithRect:options:attributes:context:
public void WeakDrawString
boundingRectWithSize:options:attributes:context:
public CGRect WeakGetBoundingRect
inputViewStyle
/* property */ public override UIInputViewStyle get_InputViewStyle
advanceToNextInputMode
public override void AdvanceToNextInputMode
dismissKeyboard
public override void DismissKeyboard
requestSupplementaryLexiconWithCompletion:
public override void RequestSupplementaryLexicon
setPrimaryLanguage:
/* property */ public override void set_PrimaryLanguage
textDocumentProxy
/* property */ public override IUITextDocumentProxy get_TextDocumentProxy
adjustTextPositionByCharacterOffset:
public override void AdjustTextPositionByCharacterOffset
documentContextBeforeInput
/* property */ public override string get_DocumentContextBeforeInput
documentContextAfterInput
/* property */ public override string get_DocumentContextAfterInput
settingsForTypes:categories:
public UIUserNotificationSettings GetSettingsForTypes
categories
/* property */ public override NSSet get_Categories
types
/* property */ public override UIUserNotificationType get_Types
actionsForContext:
public override UIUserNotificationAction[] GetActionsForContext
setActions:forContext:
public override void SetActions
activationMode
/* property */ public override UIUserNotificationActivationMode get_ActivationMode
isAuthenticationRequired
/* property */ public override bool get_AuthenticationRequired
isDestructive
/* property */ public override bool get_Destructive
setActivationMode:
/* property */ public override void set_ActivationMode
setAuthenticationRequired:
/* property */ public override void set_AuthenticationRequired
setDestructive:
/* property */ public override void set_Destructive
addOptionWithTitle:image:order:handler:
public override void AddOption
documentMenu:didPickDocumentPicker:
public override void DidPickDocumentPicker
documentMenuWasCancelled:
public override void WasCancelled
documentPickerMode
/* property */ public override UIDocumentPickerMode get_DocumentPickerMode
documentPicker:didPickDocumentAtURL:
public override void DidPickDocument
documentPickerWasCancelled:
public override void WasCancelled
dismissGrantingAccessToURL:
public override void DismissGrantingAccess
prepareForPresentationInMode:
public override void PrepareForPresentation
originalURL
/* property */ public override NSUrl get_OriginalUrl
validTypes
/* property */ public override string[] get_ValidTypes
modelIdentifierForElementAtIndexPath:inView:
public override string GetModelIdentifier
indexPathForElementWithModelIdentifier:inView:
public override NSIndexPath GetIndexPath
accessibilityLineNumberForPoint:
public override nint GetAccessibilityLineNumber
accessibilityContentForLineNumber:
public override string GetAccessibilityContent
accessibilityFrameForLineNumber:
public override CGRect GetAccessibilityFrame
accessibilityPageContent
public override string GetAccessibilityPageContent
guidedAccessRestrictionWithIdentifier:didChangeState:
public override void GuidedAccessRestrictionChangedState
textForGuidedAccessRestrictionWithIdentifier:
public override string GetTextForGuidedAccessRestriction
guidedAccessRestrictionIdentifiers
/* property */ public override string[] get_GetGuidedAccessRestrictionIdentifiers
didReceiveLocalNotification:withCompletion:
public override void DidReceiveLocalNotification
didReceiveRemoteNotification:withCompletion:
public override void DidReceiveRemoteNotification
interfaceProperty
/* property */ public override string get_InterfaceProperty
setAccessibilityImageRegions:
public void SetAccessibilityImageRegions
setBackgroundImageData:
public override void SetBackgroundImage
setBackgroundImageNamed:
public override void SetBackgroundImage
startAnimatingWithImagesInRange:duration:repeatCount:
public override void StartAnimating
setImageData:
public override void SetImage
setImageNamed:
public override void SetImage
rowControllerAtIndex:
public override NSObject GetRowController
insertRowsAtIndexes:withRowType:
public override void InsertRows
removeRowsAtIndexes:
public override void RemoveRows
scrollToRowAtIndex:
public override void ScrollToRow
setNumberOfRows:withRowType:
public override void SetNumberOfRows
setRowTypes:
public override void SetRowTypes
numberOfRows
/* property */ public override nint get_NumberOfRows
addAnnotation:withImage:centerOffset:
public override void AddAnnotation
addAnnotation:withImageNamed:centerOffset:
public override void AddAnnotation
addAnnotation:withPinColor:
public override void AddAnnotation
removeAllAnnotations
public override void RemoveAllAnnotations
setNumberOfSteps:
public override void SetNumberOfSteps
